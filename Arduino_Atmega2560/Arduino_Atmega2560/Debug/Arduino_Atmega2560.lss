
Arduino_Atmega2560.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000020  00800200  00001720  000017b4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001720  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000015  00800220  00800220  000017d4  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000017d4  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 00000290  00000000  00000000  00001804  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00001194  00000000  00000000  00001a94  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000009ea  00000000  00000000  00002c28  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   0000152f  00000000  00000000  00003612  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000700  00000000  00000000  00004b44  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000006da  00000000  00000000  00005244  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000c75  00000000  00000000  0000591e  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 000001d0  00000000  00000000  00006593  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	c2 c0       	rjmp	.+388    	; 0x186 <__ctors_end>
       2:	00 00       	nop
       4:	e0 c0       	rjmp	.+448    	; 0x1c6 <__bad_interrupt>
       6:	00 00       	nop
       8:	de c0       	rjmp	.+444    	; 0x1c6 <__bad_interrupt>
       a:	00 00       	nop
       c:	dc c0       	rjmp	.+440    	; 0x1c6 <__bad_interrupt>
       e:	00 00       	nop
      10:	da c0       	rjmp	.+436    	; 0x1c6 <__bad_interrupt>
      12:	00 00       	nop
      14:	d8 c0       	rjmp	.+432    	; 0x1c6 <__bad_interrupt>
      16:	00 00       	nop
      18:	d6 c0       	rjmp	.+428    	; 0x1c6 <__bad_interrupt>
      1a:	00 00       	nop
      1c:	d4 c0       	rjmp	.+424    	; 0x1c6 <__bad_interrupt>
      1e:	00 00       	nop
      20:	d2 c0       	rjmp	.+420    	; 0x1c6 <__bad_interrupt>
      22:	00 00       	nop
      24:	d0 c0       	rjmp	.+416    	; 0x1c6 <__bad_interrupt>
      26:	00 00       	nop
      28:	ce c0       	rjmp	.+412    	; 0x1c6 <__bad_interrupt>
      2a:	00 00       	nop
      2c:	cc c0       	rjmp	.+408    	; 0x1c6 <__bad_interrupt>
      2e:	00 00       	nop
      30:	ca c0       	rjmp	.+404    	; 0x1c6 <__bad_interrupt>
      32:	00 00       	nop
      34:	c8 c0       	rjmp	.+400    	; 0x1c6 <__bad_interrupt>
      36:	00 00       	nop
      38:	c6 c0       	rjmp	.+396    	; 0x1c6 <__bad_interrupt>
      3a:	00 00       	nop
      3c:	c4 c0       	rjmp	.+392    	; 0x1c6 <__bad_interrupt>
      3e:	00 00       	nop
      40:	c2 c0       	rjmp	.+388    	; 0x1c6 <__bad_interrupt>
      42:	00 00       	nop
      44:	c0 c0       	rjmp	.+384    	; 0x1c6 <__bad_interrupt>
      46:	00 00       	nop
      48:	be c0       	rjmp	.+380    	; 0x1c6 <__bad_interrupt>
      4a:	00 00       	nop
      4c:	bc c0       	rjmp	.+376    	; 0x1c6 <__bad_interrupt>
      4e:	00 00       	nop
      50:	ba c0       	rjmp	.+372    	; 0x1c6 <__bad_interrupt>
      52:	00 00       	nop
      54:	b8 c0       	rjmp	.+368    	; 0x1c6 <__bad_interrupt>
      56:	00 00       	nop
      58:	b6 c0       	rjmp	.+364    	; 0x1c6 <__bad_interrupt>
      5a:	00 00       	nop
      5c:	b4 c0       	rjmp	.+360    	; 0x1c6 <__bad_interrupt>
      5e:	00 00       	nop
      60:	b2 c0       	rjmp	.+356    	; 0x1c6 <__bad_interrupt>
      62:	00 00       	nop
      64:	b0 c0       	rjmp	.+352    	; 0x1c6 <__bad_interrupt>
      66:	00 00       	nop
      68:	ae c0       	rjmp	.+348    	; 0x1c6 <__bad_interrupt>
      6a:	00 00       	nop
      6c:	ac c0       	rjmp	.+344    	; 0x1c6 <__bad_interrupt>
      6e:	00 00       	nop
      70:	aa c0       	rjmp	.+340    	; 0x1c6 <__bad_interrupt>
      72:	00 00       	nop
      74:	a8 c0       	rjmp	.+336    	; 0x1c6 <__bad_interrupt>
      76:	00 00       	nop
      78:	a6 c0       	rjmp	.+332    	; 0x1c6 <__bad_interrupt>
      7a:	00 00       	nop
      7c:	a4 c0       	rjmp	.+328    	; 0x1c6 <__bad_interrupt>
      7e:	00 00       	nop
      80:	a2 c0       	rjmp	.+324    	; 0x1c6 <__bad_interrupt>
      82:	00 00       	nop
      84:	a0 c0       	rjmp	.+320    	; 0x1c6 <__bad_interrupt>
      86:	00 00       	nop
      88:	9e c0       	rjmp	.+316    	; 0x1c6 <__bad_interrupt>
      8a:	00 00       	nop
      8c:	9c c0       	rjmp	.+312    	; 0x1c6 <__bad_interrupt>
      8e:	00 00       	nop
      90:	9a c0       	rjmp	.+308    	; 0x1c6 <__bad_interrupt>
      92:	00 00       	nop
      94:	98 c0       	rjmp	.+304    	; 0x1c6 <__bad_interrupt>
      96:	00 00       	nop
      98:	96 c0       	rjmp	.+300    	; 0x1c6 <__bad_interrupt>
      9a:	00 00       	nop
      9c:	57 c6       	rjmp	.+3246   	; 0xd4c <__vector_39>
      9e:	00 00       	nop
      a0:	92 c0       	rjmp	.+292    	; 0x1c6 <__bad_interrupt>
      a2:	00 00       	nop
      a4:	90 c0       	rjmp	.+288    	; 0x1c6 <__bad_interrupt>
      a6:	00 00       	nop
      a8:	8e c0       	rjmp	.+284    	; 0x1c6 <__bad_interrupt>
      aa:	00 00       	nop
      ac:	8c c0       	rjmp	.+280    	; 0x1c6 <__bad_interrupt>
      ae:	00 00       	nop
      b0:	8a c0       	rjmp	.+276    	; 0x1c6 <__bad_interrupt>
      b2:	00 00       	nop
      b4:	88 c0       	rjmp	.+272    	; 0x1c6 <__bad_interrupt>
      b6:	00 00       	nop
      b8:	86 c0       	rjmp	.+268    	; 0x1c6 <__bad_interrupt>
      ba:	00 00       	nop
      bc:	84 c0       	rjmp	.+264    	; 0x1c6 <__bad_interrupt>
      be:	00 00       	nop
      c0:	82 c0       	rjmp	.+260    	; 0x1c6 <__bad_interrupt>
      c2:	00 00       	nop
      c4:	80 c0       	rjmp	.+256    	; 0x1c6 <__bad_interrupt>
      c6:	00 00       	nop
      c8:	7e c0       	rjmp	.+252    	; 0x1c6 <__bad_interrupt>
      ca:	00 00       	nop
      cc:	7c c0       	rjmp	.+248    	; 0x1c6 <__bad_interrupt>
      ce:	00 00       	nop
      d0:	7a c0       	rjmp	.+244    	; 0x1c6 <__bad_interrupt>
      d2:	00 00       	nop
      d4:	78 c0       	rjmp	.+240    	; 0x1c6 <__bad_interrupt>
      d6:	00 00       	nop
      d8:	76 c0       	rjmp	.+236    	; 0x1c6 <__bad_interrupt>
      da:	00 00       	nop
      dc:	74 c0       	rjmp	.+232    	; 0x1c6 <__bad_interrupt>
      de:	00 00       	nop
      e0:	72 c0       	rjmp	.+228    	; 0x1c6 <__bad_interrupt>
      e2:	00 00       	nop
      e4:	d5 06       	cpc	r13, r21
      e6:	43 07       	cpc	r20, r19
      e8:	43 07       	cpc	r20, r19
      ea:	43 07       	cpc	r20, r19
      ec:	43 07       	cpc	r20, r19
      ee:	43 07       	cpc	r20, r19
      f0:	43 07       	cpc	r20, r19
      f2:	43 07       	cpc	r20, r19
      f4:	d5 06       	cpc	r13, r21
      f6:	43 07       	cpc	r20, r19
      f8:	43 07       	cpc	r20, r19
      fa:	43 07       	cpc	r20, r19
      fc:	43 07       	cpc	r20, r19
      fe:	43 07       	cpc	r20, r19
     100:	43 07       	cpc	r20, r19
     102:	43 07       	cpc	r20, r19
     104:	d7 06       	cpc	r13, r23
     106:	43 07       	cpc	r20, r19
     108:	43 07       	cpc	r20, r19
     10a:	43 07       	cpc	r20, r19
     10c:	43 07       	cpc	r20, r19
     10e:	43 07       	cpc	r20, r19
     110:	43 07       	cpc	r20, r19
     112:	43 07       	cpc	r20, r19
     114:	43 07       	cpc	r20, r19
     116:	43 07       	cpc	r20, r19
     118:	43 07       	cpc	r20, r19
     11a:	43 07       	cpc	r20, r19
     11c:	43 07       	cpc	r20, r19
     11e:	43 07       	cpc	r20, r19
     120:	43 07       	cpc	r20, r19
     122:	43 07       	cpc	r20, r19
     124:	d7 06       	cpc	r13, r23
     126:	43 07       	cpc	r20, r19
     128:	43 07       	cpc	r20, r19
     12a:	43 07       	cpc	r20, r19
     12c:	43 07       	cpc	r20, r19
     12e:	43 07       	cpc	r20, r19
     130:	43 07       	cpc	r20, r19
     132:	43 07       	cpc	r20, r19
     134:	43 07       	cpc	r20, r19
     136:	43 07       	cpc	r20, r19
     138:	43 07       	cpc	r20, r19
     13a:	43 07       	cpc	r20, r19
     13c:	43 07       	cpc	r20, r19
     13e:	43 07       	cpc	r20, r19
     140:	43 07       	cpc	r20, r19
     142:	43 07       	cpc	r20, r19
     144:	3d 07       	cpc	r19, r29
     146:	43 07       	cpc	r20, r19
     148:	43 07       	cpc	r20, r19
     14a:	43 07       	cpc	r20, r19
     14c:	43 07       	cpc	r20, r19
     14e:	43 07       	cpc	r20, r19
     150:	43 07       	cpc	r20, r19
     152:	43 07       	cpc	r20, r19
     154:	0e 07       	cpc	r16, r30
     156:	43 07       	cpc	r20, r19
     158:	43 07       	cpc	r20, r19
     15a:	43 07       	cpc	r20, r19
     15c:	43 07       	cpc	r20, r19
     15e:	43 07       	cpc	r20, r19
     160:	43 07       	cpc	r20, r19
     162:	43 07       	cpc	r20, r19
     164:	43 07       	cpc	r20, r19
     166:	43 07       	cpc	r20, r19
     168:	43 07       	cpc	r20, r19
     16a:	43 07       	cpc	r20, r19
     16c:	43 07       	cpc	r20, r19
     16e:	43 07       	cpc	r20, r19
     170:	43 07       	cpc	r20, r19
     172:	43 07       	cpc	r20, r19
     174:	fe 06       	cpc	r15, r30
     176:	43 07       	cpc	r20, r19
     178:	43 07       	cpc	r20, r19
     17a:	43 07       	cpc	r20, r19
     17c:	43 07       	cpc	r20, r19
     17e:	43 07       	cpc	r20, r19
     180:	43 07       	cpc	r20, r19
     182:	43 07       	cpc	r20, r19
     184:	26 07       	cpc	r18, r22

00000186 <__ctors_end>:
     186:	11 24       	eor	r1, r1
     188:	1f be       	out	0x3f, r1	; 63
     18a:	cf ef       	ldi	r28, 0xFF	; 255
     18c:	d1 e2       	ldi	r29, 0x21	; 33
     18e:	de bf       	out	0x3e, r29	; 62
     190:	cd bf       	out	0x3d, r28	; 61
     192:	00 e0       	ldi	r16, 0x00	; 0
     194:	0c bf       	out	0x3c, r16	; 60

00000196 <__do_copy_data>:
     196:	12 e0       	ldi	r17, 0x02	; 2
     198:	a0 e0       	ldi	r26, 0x00	; 0
     19a:	b2 e0       	ldi	r27, 0x02	; 2
     19c:	e0 e2       	ldi	r30, 0x20	; 32
     19e:	f7 e1       	ldi	r31, 0x17	; 23
     1a0:	00 e0       	ldi	r16, 0x00	; 0
     1a2:	0b bf       	out	0x3b, r16	; 59
     1a4:	02 c0       	rjmp	.+4      	; 0x1aa <__do_copy_data+0x14>
     1a6:	07 90       	elpm	r0, Z+
     1a8:	0d 92       	st	X+, r0
     1aa:	a0 32       	cpi	r26, 0x20	; 32
     1ac:	b1 07       	cpc	r27, r17
     1ae:	d9 f7       	brne	.-10     	; 0x1a6 <__do_copy_data+0x10>

000001b0 <__do_clear_bss>:
     1b0:	22 e0       	ldi	r18, 0x02	; 2
     1b2:	a0 e2       	ldi	r26, 0x20	; 32
     1b4:	b2 e0       	ldi	r27, 0x02	; 2
     1b6:	01 c0       	rjmp	.+2      	; 0x1ba <.do_clear_bss_start>

000001b8 <.do_clear_bss_loop>:
     1b8:	1d 92       	st	X+, r1

000001ba <.do_clear_bss_start>:
     1ba:	a5 33       	cpi	r26, 0x35	; 53
     1bc:	b2 07       	cpc	r27, r18
     1be:	e1 f7       	brne	.-8      	; 0x1b8 <.do_clear_bss_loop>
     1c0:	7c d0       	rcall	.+248    	; 0x2ba <main>
     1c2:	0c 94 8e 0b 	jmp	0x171c	; 0x171c <_exit>

000001c6 <__bad_interrupt>:
     1c6:	1c cf       	rjmp	.-456    	; 0x0 <__vectors>

000001c8 <adc_init>:
     1c8:	cf 93       	push	r28
     1ca:	df 93       	push	r29
     1cc:	cd b7       	in	r28, 0x3d	; 61
     1ce:	de b7       	in	r29, 0x3e	; 62
     1d0:	8c e7       	ldi	r24, 0x7C	; 124
     1d2:	90 e0       	ldi	r25, 0x00	; 0
     1d4:	2c e7       	ldi	r18, 0x7C	; 124
     1d6:	30 e0       	ldi	r19, 0x00	; 0
     1d8:	f9 01       	movw	r30, r18
     1da:	20 81       	ld	r18, Z
     1dc:	20 68       	ori	r18, 0x80	; 128
     1de:	fc 01       	movw	r30, r24
     1e0:	20 83       	st	Z, r18
     1e2:	8c e7       	ldi	r24, 0x7C	; 124
     1e4:	90 e0       	ldi	r25, 0x00	; 0
     1e6:	2c e7       	ldi	r18, 0x7C	; 124
     1e8:	30 e0       	ldi	r19, 0x00	; 0
     1ea:	f9 01       	movw	r30, r18
     1ec:	20 81       	ld	r18, Z
     1ee:	2f 7b       	andi	r18, 0xBF	; 191
     1f0:	fc 01       	movw	r30, r24
     1f2:	20 83       	st	Z, r18
     1f4:	8c e7       	ldi	r24, 0x7C	; 124
     1f6:	90 e0       	ldi	r25, 0x00	; 0
     1f8:	2c e7       	ldi	r18, 0x7C	; 124
     1fa:	30 e0       	ldi	r19, 0x00	; 0
     1fc:	f9 01       	movw	r30, r18
     1fe:	20 81       	ld	r18, Z
     200:	2f 7d       	andi	r18, 0xDF	; 223
     202:	fc 01       	movw	r30, r24
     204:	20 83       	st	Z, r18
     206:	80 e3       	ldi	r24, 0x30	; 48
     208:	90 e0       	ldi	r25, 0x00	; 0
     20a:	20 e3       	ldi	r18, 0x30	; 48
     20c:	30 e0       	ldi	r19, 0x00	; 0
     20e:	f9 01       	movw	r30, r18
     210:	20 81       	ld	r18, Z
     212:	2e 7f       	andi	r18, 0xFE	; 254
     214:	fc 01       	movw	r30, r24
     216:	20 83       	st	Z, r18
     218:	8b e7       	ldi	r24, 0x7B	; 123
     21a:	90 e0       	ldi	r25, 0x00	; 0
     21c:	2b e7       	ldi	r18, 0x7B	; 123
     21e:	30 e0       	ldi	r19, 0x00	; 0
     220:	f9 01       	movw	r30, r18
     222:	20 81       	ld	r18, Z
     224:	27 7f       	andi	r18, 0xF7	; 247
     226:	fc 01       	movw	r30, r24
     228:	20 83       	st	Z, r18
     22a:	8c e7       	ldi	r24, 0x7C	; 124
     22c:	90 e0       	ldi	r25, 0x00	; 0
     22e:	2c e7       	ldi	r18, 0x7C	; 124
     230:	30 e0       	ldi	r19, 0x00	; 0
     232:	f9 01       	movw	r30, r18
     234:	20 81       	ld	r18, Z
     236:	20 7e       	andi	r18, 0xE0	; 224
     238:	fc 01       	movw	r30, r24
     23a:	20 83       	st	Z, r18
     23c:	8a e7       	ldi	r24, 0x7A	; 122
     23e:	90 e0       	ldi	r25, 0x00	; 0
     240:	2a e7       	ldi	r18, 0x7A	; 122
     242:	30 e0       	ldi	r19, 0x00	; 0
     244:	f9 01       	movw	r30, r18
     246:	20 81       	ld	r18, Z
     248:	27 60       	ori	r18, 0x07	; 7
     24a:	fc 01       	movw	r30, r24
     24c:	20 83       	st	Z, r18
     24e:	8b e7       	ldi	r24, 0x7B	; 123
     250:	90 e0       	ldi	r25, 0x00	; 0
     252:	2b e7       	ldi	r18, 0x7B	; 123
     254:	30 e0       	ldi	r19, 0x00	; 0
     256:	f9 01       	movw	r30, r18
     258:	20 81       	ld	r18, Z
     25a:	28 7f       	andi	r18, 0xF8	; 248
     25c:	fc 01       	movw	r30, r24
     25e:	20 83       	st	Z, r18
     260:	8a e7       	ldi	r24, 0x7A	; 122
     262:	90 e0       	ldi	r25, 0x00	; 0
     264:	2a e7       	ldi	r18, 0x7A	; 122
     266:	30 e0       	ldi	r19, 0x00	; 0
     268:	f9 01       	movw	r30, r18
     26a:	20 81       	ld	r18, Z
     26c:	20 68       	ori	r18, 0x80	; 128
     26e:	fc 01       	movw	r30, r24
     270:	20 83       	st	Z, r18
     272:	df 91       	pop	r29
     274:	cf 91       	pop	r28
     276:	08 95       	ret

00000278 <read_adc_out>:
     278:	cf 93       	push	r28
     27a:	df 93       	push	r29
     27c:	cd b7       	in	r28, 0x3d	; 61
     27e:	de b7       	in	r29, 0x3e	; 62
     280:	8a e7       	ldi	r24, 0x7A	; 122
     282:	90 e0       	ldi	r25, 0x00	; 0
     284:	2a e7       	ldi	r18, 0x7A	; 122
     286:	30 e0       	ldi	r19, 0x00	; 0
     288:	f9 01       	movw	r30, r18
     28a:	20 81       	ld	r18, Z
     28c:	20 64       	ori	r18, 0x40	; 64
     28e:	fc 01       	movw	r30, r24
     290:	20 83       	st	Z, r18
     292:	00 00       	nop
     294:	8a e7       	ldi	r24, 0x7A	; 122
     296:	90 e0       	ldi	r25, 0x00	; 0
     298:	fc 01       	movw	r30, r24
     29a:	80 81       	ld	r24, Z
     29c:	88 2f       	mov	r24, r24
     29e:	90 e0       	ldi	r25, 0x00	; 0
     2a0:	80 74       	andi	r24, 0x40	; 64
     2a2:	99 27       	eor	r25, r25
     2a4:	00 97       	sbiw	r24, 0x00	; 0
     2a6:	b1 f7       	brne	.-20     	; 0x294 <read_adc_out+0x1c>
     2a8:	89 e7       	ldi	r24, 0x79	; 121
     2aa:	90 e0       	ldi	r25, 0x00	; 0
     2ac:	fc 01       	movw	r30, r24
     2ae:	80 81       	ld	r24, Z
     2b0:	88 2f       	mov	r24, r24
     2b2:	90 e0       	ldi	r25, 0x00	; 0
     2b4:	df 91       	pop	r29
     2b6:	cf 91       	pop	r28
     2b8:	08 95       	ret

000002ba <main>:
#define FOSC 16000000
#define MYUBRR FOSC/16/BAUD-1



int main(void){
     2ba:	cf 93       	push	r28
     2bc:	df 93       	push	r29
     2be:	cd b7       	in	r28, 0x3d	; 61
     2c0:	de b7       	in	r29, 0x3e	; 62
     2c2:	a7 97       	sbiw	r28, 0x27	; 39
     2c4:	0f b6       	in	r0, 0x3f	; 63
     2c6:	f8 94       	cli
     2c8:	de bf       	out	0x3e, r29	; 62
     2ca:	0f be       	out	0x3f, r0	; 63
     2cc:	cd bf       	out	0x3d, r28	; 61
	UART_Init(MYUBRR);		
     2ce:	87 e6       	ldi	r24, 0x67	; 103
     2d0:	90 e0       	ldi	r25, 0x00	; 0
     2d2:	f9 d5       	rcall	.+3058   	; 0xec6 <UART_Init>
	printf("Atmega2560 start.\n");
     2d4:	87 e0       	ldi	r24, 0x07	; 7
     2d6:	92 e0       	ldi	r25, 0x02	; 2
     2d8:	0e 94 19 0a 	call	0x1432	; 0x1432 <puts>
	
	CAN_init();
     2dc:	53 d0       	rcall	.+166    	; 0x384 <CAN_init>
	motor_init();		//obs: calls can_init twice.
     2de:	50 d1       	rcall	.+672    	; 0x580 <motor_init>
	pwm_init();
     2e0:	1a d2       	rcall	.+1076   	; 0x716 <pwm_init>
	solenoid_init();
     2e2:	a8 d3       	rcall	.+1872   	; 0xa34 <solenoid_init>
	ir_init();
     2e4:	2e d1       	rcall	.+604    	; 0x542 <ir_init>
	//calibrate_encoder();
	
	CAN_struct send_msg;
	send_msg.ID = NODE2_ID;
     2e6:	86 e1       	ldi	r24, 0x16	; 22
     2e8:	8c 83       	std	Y+4, r24	; 0x04
	send_msg.length=4;
     2ea:	84 e0       	ldi	r24, 0x04	; 4
     2ec:	8d 83       	std	Y+5, r24	; 0x05
	
	CAN_struct rcv_msg;
	rcv_msg.ID = RCV_ID;
     2ee:	83 e0       	ldi	r24, 0x03	; 3
     2f0:	8e 8b       	std	Y+22, r24	; 0x16
	rcv_msg.length = 4;
     2f2:	84 e0       	ldi	r24, 0x04	; 4
     2f4:	8f 8b       	std	Y+23, r24	; 0x17
	
	send_msg.data[0] = 0;	//joy_x
     2f6:	1f 82       	std	Y+7, r1	; 0x07
     2f8:	1e 82       	std	Y+6, r1	; 0x06
	send_msg.data[1] = 0;	//slider_left
     2fa:	19 86       	std	Y+9, r1	; 0x09
     2fc:	18 86       	std	Y+8, r1	; 0x08
	send_msg.data[2] = 0;	//button_left / interrupt
     2fe:	1b 86       	std	Y+11, r1	; 0x0b
     300:	1a 86       	std	Y+10, r1	; 0x0a
	
	rcv_msg.data[3] = 0;	//highscore value
     302:	1f 8e       	std	Y+31, r1	; 0x1f
     304:	1e 8e       	std	Y+30, r1	; 0x1e
	
	while(1){
		printf("alive\n");
     306:	89 e1       	ldi	r24, 0x19	; 25
     308:	92 e0       	ldi	r25, 0x02	; 2
     30a:	0e 94 19 0a 	call	0x1432	; 0x1432 <puts>
		
		send_msg.data[3] = 0;	//highscore value			<---
     30e:	1d 86       	std	Y+13, r1	; 0x0d
     310:	1c 86       	std	Y+12, r1	; 0x0c
		
		rcv_msg.data[0] = 0;	//joy_x						<---
     312:	19 8e       	std	Y+25, r1	; 0x19
     314:	18 8e       	std	Y+24, r1	; 0x18
		rcv_msg.data[1] = 0;	//slider_left				<---
     316:	1b 8e       	std	Y+27, r1	; 0x1b
     318:	1a 8e       	std	Y+26, r1	; 0x1a
		rcv_msg.data[2] = 0;	//button_left / interrupt	<---
     31a:	1d 8e       	std	Y+29, r1	; 0x1d
     31c:	1c 8e       	std	Y+28, r1	; 0x1c
		
		rcv_CAN_message(&rcv_msg);
     31e:	ce 01       	movw	r24, r28
     320:	46 96       	adiw	r24, 0x16	; 22
     322:	a1 d0       	rcall	.+322    	; 0x466 <rcv_CAN_message>
		
		if (rcv_msg.data[0] != 0){		//joy_x
     324:	88 8d       	ldd	r24, Y+24	; 0x18
     326:	99 8d       	ldd	r25, Y+25	; 0x19
     328:	00 97       	sbiw	r24, 0x00	; 0
     32a:	b9 f0       	breq	.+46     	; 0x35a <main+0xa0>
			int8_t temp_joy_x= rcv_msg.data[0];
     32c:	88 8d       	ldd	r24, Y+24	; 0x18
     32e:	99 8d       	ldd	r25, Y+25	; 0x19
     330:	8a 83       	std	Y+2, r24	; 0x02
			set_motor_dir(temp_joy_x);
     332:	8a 81       	ldd	r24, Y+2	; 0x02
     334:	68 d1       	rcall	.+720    	; 0x606 <set_motor_dir>
			//uint8_t regulated_speed=speed_regulator(temp_joy_x, 0.01);
			uint8_t regulated_speed=abs(temp_joy_x);
     336:	8a 81       	ldd	r24, Y+2	; 0x02
     338:	99 27       	eor	r25, r25
     33a:	87 fd       	sbrc	r24, 7
     33c:	90 95       	com	r25
     33e:	99 23       	and	r25, r25
     340:	1c f4       	brge	.+6      	; 0x348 <main+0x8e>
     342:	91 95       	neg	r25
     344:	81 95       	neg	r24
     346:	91 09       	sbc	r25, r1
     348:	89 83       	std	Y+1, r24	; 0x01
			if (regulated_speed < 10){ regulated_speed = 0; }
     34a:	89 81       	ldd	r24, Y+1	; 0x01
     34c:	8a 30       	cpi	r24, 0x0A	; 10
     34e:	08 f4       	brcc	.+2      	; 0x352 <main+0x98>
     350:	19 82       	std	Y+1, r1	; 0x01
			send_motor_speed(regulated_speed);
     352:	89 81       	ldd	r24, Y+1	; 0x01
     354:	88 2f       	mov	r24, r24
     356:	90 e0       	ldi	r25, 0x00	; 0
     358:	3d d1       	rcall	.+634    	; 0x5d4 <send_motor_speed>
		}
		
		if (rcv_msg.data[1] != 0){		//slider_left
     35a:	8a 8d       	ldd	r24, Y+26	; 0x1a
     35c:	9b 8d       	ldd	r25, Y+27	; 0x1b
     35e:	00 97       	sbiw	r24, 0x00	; 0
     360:	29 f0       	breq	.+10     	; 0x36c <main+0xb2>
			uint8_t temp_slider = rcv_msg.data[1];
     362:	8a 8d       	ldd	r24, Y+26	; 0x1a
     364:	9b 8d       	ldd	r25, Y+27	; 0x1b
     366:	8b 83       	std	Y+3, r24	; 0x03
			set_pwm_duty_cycle(temp_slider);
     368:	8b 81       	ldd	r24, Y+3	; 0x03
     36a:	32 d2       	rcall	.+1124   	; 0x7d0 <set_pwm_duty_cycle>
		}
		
		if (rcv_msg.data[2] != 0){		//button_left / interrupt
     36c:	8c 8d       	ldd	r24, Y+28	; 0x1c
     36e:	9d 8d       	ldd	r25, Y+29	; 0x1d
     370:	00 97       	sbiw	r24, 0x00	; 0
     372:	09 f0       	breq	.+2      	; 0x376 <main+0xbc>
			//printf("CAN button data\n");
			push_solenoid();
     374:	78 d3       	rcall	.+1776   	; 0xa66 <push_solenoid>
		}
		
		send_msg.data[3] = score_count();
     376:	b5 d2       	rcall	.+1386   	; 0x8e2 <score_count>
     378:	9d 87       	std	Y+13, r25	; 0x0d
     37a:	8c 87       	std	Y+12, r24	; 0x0c

		
		
		send_CAN_message(& send_msg);
     37c:	ce 01       	movw	r24, r28
     37e:	04 96       	adiw	r24, 0x04	; 4
     380:	19 d0       	rcall	.+50     	; 0x3b4 <send_CAN_message>
	
	}
     382:	c1 cf       	rjmp	.-126    	; 0x306 <main+0x4c>

00000384 <CAN_init>:
     384:	cf 93       	push	r28
     386:	df 93       	push	r29
     388:	cd b7       	in	r28, 0x3d	; 61
     38a:	de b7       	in	r29, 0x3e	; 62
     38c:	5c d1       	rcall	.+696    	; 0x646 <MCP2515_init>
     38e:	4f ef       	ldi	r20, 0xFF	; 255
     390:	60 e6       	ldi	r22, 0x60	; 96
     392:	80 e6       	ldi	r24, 0x60	; 96
     394:	9d d1       	rcall	.+826    	; 0x6d0 <bit_modify_MCP2515>
     396:	40 e0       	ldi	r20, 0x00	; 0
     398:	64 e0       	ldi	r22, 0x04	; 4
     39a:	80 e6       	ldi	r24, 0x60	; 96
     39c:	99 d1       	rcall	.+818    	; 0x6d0 <bit_modify_MCP2515>
     39e:	41 e0       	ldi	r20, 0x01	; 1
     3a0:	65 e0       	ldi	r22, 0x05	; 5
     3a2:	8b e2       	ldi	r24, 0x2B	; 43
     3a4:	95 d1       	rcall	.+810    	; 0x6d0 <bit_modify_MCP2515>
     3a6:	40 e0       	ldi	r20, 0x00	; 0
     3a8:	60 ef       	ldi	r22, 0xF0	; 240
     3aa:	8f e0       	ldi	r24, 0x0F	; 15
     3ac:	91 d1       	rcall	.+802    	; 0x6d0 <bit_modify_MCP2515>
     3ae:	df 91       	pop	r29
     3b0:	cf 91       	pop	r28
     3b2:	08 95       	ret

000003b4 <send_CAN_message>:
     3b4:	cf 93       	push	r28
     3b6:	df 93       	push	r29
     3b8:	00 d0       	rcall	.+0      	; 0x3ba <send_CAN_message+0x6>
     3ba:	1f 92       	push	r1
     3bc:	cd b7       	in	r28, 0x3d	; 61
     3be:	de b7       	in	r29, 0x3e	; 62
     3c0:	9c 83       	std	Y+4, r25	; 0x04
     3c2:	8b 83       	std	Y+3, r24	; 0x03
     3c4:	00 00       	nop
     3c6:	80 e3       	ldi	r24, 0x30	; 48
     3c8:	47 d1       	rcall	.+654    	; 0x658 <read_MCP2515>
     3ca:	88 2f       	mov	r24, r24
     3cc:	90 e0       	ldi	r25, 0x00	; 0
     3ce:	88 70       	andi	r24, 0x08	; 8
     3d0:	99 27       	eor	r25, r25
     3d2:	00 97       	sbiw	r24, 0x00	; 0
     3d4:	c1 f7       	brne	.-16     	; 0x3c6 <send_CAN_message+0x12>
     3d6:	8b 81       	ldd	r24, Y+3	; 0x03
     3d8:	9c 81       	ldd	r25, Y+4	; 0x04
     3da:	fc 01       	movw	r30, r24
     3dc:	80 81       	ld	r24, Z
     3de:	82 95       	swap	r24
     3e0:	88 0f       	add	r24, r24
     3e2:	80 7e       	andi	r24, 0xE0	; 224
     3e4:	68 2f       	mov	r22, r24
     3e6:	82 e3       	ldi	r24, 0x32	; 50
     3e8:	4c d1       	rcall	.+664    	; 0x682 <write_MCP2515>
     3ea:	8b 81       	ldd	r24, Y+3	; 0x03
     3ec:	9c 81       	ldd	r25, Y+4	; 0x04
     3ee:	fc 01       	movw	r30, r24
     3f0:	80 81       	ld	r24, Z
     3f2:	86 95       	lsr	r24
     3f4:	86 95       	lsr	r24
     3f6:	86 95       	lsr	r24
     3f8:	68 2f       	mov	r22, r24
     3fa:	81 e3       	ldi	r24, 0x31	; 49
     3fc:	42 d1       	rcall	.+644    	; 0x682 <write_MCP2515>
     3fe:	8b 81       	ldd	r24, Y+3	; 0x03
     400:	9c 81       	ldd	r25, Y+4	; 0x04
     402:	fc 01       	movw	r30, r24
     404:	81 81       	ldd	r24, Z+1	; 0x01
     406:	68 2f       	mov	r22, r24
     408:	85 e3       	ldi	r24, 0x35	; 53
     40a:	3b d1       	rcall	.+630    	; 0x682 <write_MCP2515>
     40c:	1a 82       	std	Y+2, r1	; 0x02
     40e:	19 82       	std	Y+1, r1	; 0x01
     410:	16 c0       	rjmp	.+44     	; 0x43e <send_CAN_message+0x8a>
     412:	2b 81       	ldd	r18, Y+3	; 0x03
     414:	3c 81       	ldd	r19, Y+4	; 0x04
     416:	89 81       	ldd	r24, Y+1	; 0x01
     418:	9a 81       	ldd	r25, Y+2	; 0x02
     41a:	01 96       	adiw	r24, 0x01	; 1
     41c:	88 0f       	add	r24, r24
     41e:	99 1f       	adc	r25, r25
     420:	82 0f       	add	r24, r18
     422:	93 1f       	adc	r25, r19
     424:	fc 01       	movw	r30, r24
     426:	80 81       	ld	r24, Z
     428:	91 81       	ldd	r25, Z+1	; 0x01
     42a:	98 2f       	mov	r25, r24
     42c:	89 81       	ldd	r24, Y+1	; 0x01
     42e:	8a 5c       	subi	r24, 0xCA	; 202
     430:	69 2f       	mov	r22, r25
     432:	27 d1       	rcall	.+590    	; 0x682 <write_MCP2515>
     434:	89 81       	ldd	r24, Y+1	; 0x01
     436:	9a 81       	ldd	r25, Y+2	; 0x02
     438:	01 96       	adiw	r24, 0x01	; 1
     43a:	9a 83       	std	Y+2, r25	; 0x02
     43c:	89 83       	std	Y+1, r24	; 0x01
     43e:	8b 81       	ldd	r24, Y+3	; 0x03
     440:	9c 81       	ldd	r25, Y+4	; 0x04
     442:	fc 01       	movw	r30, r24
     444:	81 81       	ldd	r24, Z+1	; 0x01
     446:	28 2f       	mov	r18, r24
     448:	30 e0       	ldi	r19, 0x00	; 0
     44a:	89 81       	ldd	r24, Y+1	; 0x01
     44c:	9a 81       	ldd	r25, Y+2	; 0x02
     44e:	82 17       	cp	r24, r18
     450:	93 07       	cpc	r25, r19
     452:	fc f2       	brlt	.-66     	; 0x412 <send_CAN_message+0x5e>
     454:	81 e0       	ldi	r24, 0x01	; 1
     456:	2a d1       	rcall	.+596    	; 0x6ac <request_to_send_MCP2515>
     458:	0f 90       	pop	r0
     45a:	0f 90       	pop	r0
     45c:	0f 90       	pop	r0
     45e:	0f 90       	pop	r0
     460:	df 91       	pop	r29
     462:	cf 91       	pop	r28
     464:	08 95       	ret

00000466 <rcv_CAN_message>:
     466:	1f 93       	push	r17
     468:	cf 93       	push	r28
     46a:	df 93       	push	r29
     46c:	00 d0       	rcall	.+0      	; 0x46e <rcv_CAN_message+0x8>
     46e:	1f 92       	push	r1
     470:	cd b7       	in	r28, 0x3d	; 61
     472:	de b7       	in	r29, 0x3e	; 62
     474:	9c 83       	std	Y+4, r25	; 0x04
     476:	8b 83       	std	Y+3, r24	; 0x03
     478:	8b 81       	ldd	r24, Y+3	; 0x03
     47a:	9c 81       	ldd	r25, Y+4	; 0x04
     47c:	fc 01       	movw	r30, r24
     47e:	13 82       	std	Z+3, r1	; 0x03
     480:	12 82       	std	Z+2, r1	; 0x02
     482:	8b 81       	ldd	r24, Y+3	; 0x03
     484:	9c 81       	ldd	r25, Y+4	; 0x04
     486:	fc 01       	movw	r30, r24
     488:	10 82       	st	Z, r1
     48a:	8b 81       	ldd	r24, Y+3	; 0x03
     48c:	9c 81       	ldd	r25, Y+4	; 0x04
     48e:	fc 01       	movw	r30, r24
     490:	11 82       	std	Z+1, r1	; 0x01
     492:	00 00       	nop
     494:	8c e2       	ldi	r24, 0x2C	; 44
     496:	e0 d0       	rcall	.+448    	; 0x658 <read_MCP2515>
     498:	88 2f       	mov	r24, r24
     49a:	90 e0       	ldi	r25, 0x00	; 0
     49c:	81 70       	andi	r24, 0x01	; 1
     49e:	99 27       	eor	r25, r25
     4a0:	00 97       	sbiw	r24, 0x00	; 0
     4a2:	c1 f3       	breq	.-16     	; 0x494 <rcv_CAN_message+0x2e>
     4a4:	81 e6       	ldi	r24, 0x61	; 97
     4a6:	d8 d0       	rcall	.+432    	; 0x658 <read_MCP2515>
     4a8:	88 2f       	mov	r24, r24
     4aa:	90 e0       	ldi	r25, 0x00	; 0
     4ac:	88 0f       	add	r24, r24
     4ae:	99 1f       	adc	r25, r25
     4b0:	88 0f       	add	r24, r24
     4b2:	99 1f       	adc	r25, r25
     4b4:	88 0f       	add	r24, r24
     4b6:	99 1f       	adc	r25, r25
     4b8:	18 2f       	mov	r17, r24
     4ba:	82 e6       	ldi	r24, 0x62	; 98
     4bc:	cd d0       	rcall	.+410    	; 0x658 <read_MCP2515>
     4be:	82 95       	swap	r24
     4c0:	86 95       	lsr	r24
     4c2:	87 70       	andi	r24, 0x07	; 7
     4c4:	81 2b       	or	r24, r17
     4c6:	28 2f       	mov	r18, r24
     4c8:	8b 81       	ldd	r24, Y+3	; 0x03
     4ca:	9c 81       	ldd	r25, Y+4	; 0x04
     4cc:	fc 01       	movw	r30, r24
     4ce:	20 83       	st	Z, r18
     4d0:	85 e6       	ldi	r24, 0x65	; 101
     4d2:	c2 d0       	rcall	.+388    	; 0x658 <read_MCP2515>
     4d4:	28 2f       	mov	r18, r24
     4d6:	2f 70       	andi	r18, 0x0F	; 15
     4d8:	8b 81       	ldd	r24, Y+3	; 0x03
     4da:	9c 81       	ldd	r25, Y+4	; 0x04
     4dc:	fc 01       	movw	r30, r24
     4de:	21 83       	std	Z+1, r18	; 0x01
     4e0:	1a 82       	std	Y+2, r1	; 0x02
     4e2:	19 82       	std	Y+1, r1	; 0x01
     4e4:	17 c0       	rjmp	.+46     	; 0x514 <rcv_CAN_message+0xae>
     4e6:	89 81       	ldd	r24, Y+1	; 0x01
     4e8:	8a 59       	subi	r24, 0x9A	; 154
     4ea:	b6 d0       	rcall	.+364    	; 0x658 <read_MCP2515>
     4ec:	88 2f       	mov	r24, r24
     4ee:	90 e0       	ldi	r25, 0x00	; 0
     4f0:	9c 01       	movw	r18, r24
     4f2:	4b 81       	ldd	r20, Y+3	; 0x03
     4f4:	5c 81       	ldd	r21, Y+4	; 0x04
     4f6:	89 81       	ldd	r24, Y+1	; 0x01
     4f8:	9a 81       	ldd	r25, Y+2	; 0x02
     4fa:	01 96       	adiw	r24, 0x01	; 1
     4fc:	88 0f       	add	r24, r24
     4fe:	99 1f       	adc	r25, r25
     500:	84 0f       	add	r24, r20
     502:	95 1f       	adc	r25, r21
     504:	fc 01       	movw	r30, r24
     506:	31 83       	std	Z+1, r19	; 0x01
     508:	20 83       	st	Z, r18
     50a:	89 81       	ldd	r24, Y+1	; 0x01
     50c:	9a 81       	ldd	r25, Y+2	; 0x02
     50e:	01 96       	adiw	r24, 0x01	; 1
     510:	9a 83       	std	Y+2, r25	; 0x02
     512:	89 83       	std	Y+1, r24	; 0x01
     514:	8b 81       	ldd	r24, Y+3	; 0x03
     516:	9c 81       	ldd	r25, Y+4	; 0x04
     518:	fc 01       	movw	r30, r24
     51a:	81 81       	ldd	r24, Z+1	; 0x01
     51c:	28 2f       	mov	r18, r24
     51e:	30 e0       	ldi	r19, 0x00	; 0
     520:	89 81       	ldd	r24, Y+1	; 0x01
     522:	9a 81       	ldd	r25, Y+2	; 0x02
     524:	82 17       	cp	r24, r18
     526:	93 07       	cpc	r25, r19
     528:	f4 f2       	brlt	.-68     	; 0x4e6 <rcv_CAN_message+0x80>
     52a:	40 e0       	ldi	r20, 0x00	; 0
     52c:	61 e0       	ldi	r22, 0x01	; 1
     52e:	8c e2       	ldi	r24, 0x2C	; 44
     530:	cf d0       	rcall	.+414    	; 0x6d0 <bit_modify_MCP2515>
     532:	0f 90       	pop	r0
     534:	0f 90       	pop	r0
     536:	0f 90       	pop	r0
     538:	0f 90       	pop	r0
     53a:	df 91       	pop	r29
     53c:	cf 91       	pop	r28
     53e:	1f 91       	pop	r17
     540:	08 95       	ret

00000542 <ir_init>:

#include "adc.h"



void ir_init(){
     542:	cf 93       	push	r28
     544:	df 93       	push	r29
     546:	cd b7       	in	r28, 0x3d	; 61
     548:	de b7       	in	r29, 0x3e	; 62
	adc_init();
     54a:	3e de       	rcall	.-900    	; 0x1c8 <adc_init>
}
     54c:	df 91       	pop	r29
     54e:	cf 91       	pop	r28
     550:	08 95       	ret

00000552 <triggered_ir>:

/* Read IR LED and say if it's triggered/blocked. */
int triggered_ir(){
     552:	cf 93       	push	r28
     554:	df 93       	push	r29
     556:	1f 92       	push	r1
     558:	1f 92       	push	r1
     55a:	cd b7       	in	r28, 0x3d	; 61
     55c:	de b7       	in	r29, 0x3e	; 62
	int out = read_adc_out();
     55e:	8c de       	rcall	.-744    	; 0x278 <read_adc_out>
     560:	9a 83       	std	Y+2, r25	; 0x02
     562:	89 83       	std	Y+1, r24	; 0x01
	if (out){
     564:	89 81       	ldd	r24, Y+1	; 0x01
     566:	9a 81       	ldd	r25, Y+2	; 0x02
     568:	00 97       	sbiw	r24, 0x00	; 0
     56a:	19 f0       	breq	.+6      	; 0x572 <triggered_ir+0x20>
		return 0;
     56c:	80 e0       	ldi	r24, 0x00	; 0
     56e:	90 e0       	ldi	r25, 0x00	; 0
     570:	02 c0       	rjmp	.+4      	; 0x576 <triggered_ir+0x24>
	}
	
	
	return 1;
     572:	81 e0       	ldi	r24, 0x01	; 1
     574:	90 e0       	ldi	r25, 0x00	; 0
}
     576:	0f 90       	pop	r0
     578:	0f 90       	pop	r0
     57a:	df 91       	pop	r29
     57c:	cf 91       	pop	r28
     57e:	08 95       	ret

00000580 <motor_init>:
     580:	cf 93       	push	r28
     582:	df 93       	push	r29
     584:	cd b7       	in	r28, 0x3d	; 61
     586:	de b7       	in	r29, 0x3e	; 62
     588:	74 d3       	rcall	.+1768   	; 0xc72 <TWI_Master_Initialise>
     58a:	fc de       	rcall	.-520    	; 0x384 <CAN_init>
     58c:	8a e2       	ldi	r24, 0x2A	; 42
     58e:	90 e0       	ldi	r25, 0x00	; 0
     590:	2a e2       	ldi	r18, 0x2A	; 42
     592:	30 e0       	ldi	r19, 0x00	; 0
     594:	f9 01       	movw	r30, r18
     596:	20 81       	ld	r18, Z
     598:	23 60       	ori	r18, 0x03	; 3
     59a:	fc 01       	movw	r30, r24
     59c:	20 83       	st	Z, r18
     59e:	87 e0       	ldi	r24, 0x07	; 7
     5a0:	91 e0       	ldi	r25, 0x01	; 1
     5a2:	fc 01       	movw	r30, r24
     5a4:	10 82       	st	Z, r1
     5a6:	88 eb       	ldi	r24, 0xB8	; 184
     5a8:	90 e0       	ldi	r25, 0x00	; 0
     5aa:	2c e0       	ldi	r18, 0x0C	; 12
     5ac:	fc 01       	movw	r30, r24
     5ae:	20 83       	st	Z, r18
     5b0:	81 e0       	ldi	r24, 0x01	; 1
     5b2:	91 e0       	ldi	r25, 0x01	; 1
     5b4:	2f ef       	ldi	r18, 0xFF	; 255
     5b6:	fc 01       	movw	r30, r24
     5b8:	20 83       	st	Z, r18
     5ba:	82 e0       	ldi	r24, 0x02	; 2
     5bc:	91 e0       	ldi	r25, 0x01	; 1
     5be:	22 e0       	ldi	r18, 0x02	; 2
     5c0:	31 e0       	ldi	r19, 0x01	; 1
     5c2:	f9 01       	movw	r30, r18
     5c4:	20 81       	ld	r18, Z
     5c6:	22 65       	ori	r18, 0x52	; 82
     5c8:	fc 01       	movw	r30, r24
     5ca:	20 83       	st	Z, r18
     5cc:	78 94       	sei
     5ce:	df 91       	pop	r29
     5d0:	cf 91       	pop	r28
     5d2:	08 95       	ret

000005d4 <send_motor_speed>:
     5d4:	cf 93       	push	r28
     5d6:	df 93       	push	r29
     5d8:	00 d0       	rcall	.+0      	; 0x5da <send_motor_speed+0x6>
     5da:	1f 92       	push	r1
     5dc:	1f 92       	push	r1
     5de:	cd b7       	in	r28, 0x3d	; 61
     5e0:	de b7       	in	r29, 0x3e	; 62
     5e2:	8d 83       	std	Y+5, r24	; 0x05
     5e4:	80 e5       	ldi	r24, 0x50	; 80
     5e6:	89 83       	std	Y+1, r24	; 0x01
     5e8:	1a 82       	std	Y+2, r1	; 0x02
     5ea:	8d 81       	ldd	r24, Y+5	; 0x05
     5ec:	8b 83       	std	Y+3, r24	; 0x03
     5ee:	63 e0       	ldi	r22, 0x03	; 3
     5f0:	ce 01       	movw	r24, r28
     5f2:	01 96       	adiw	r24, 0x01	; 1
     5f4:	60 d3       	rcall	.+1728   	; 0xcb6 <TWI_Start_Transceiver_With_Data>
     5f6:	0f 90       	pop	r0
     5f8:	0f 90       	pop	r0
     5fa:	0f 90       	pop	r0
     5fc:	0f 90       	pop	r0
     5fe:	0f 90       	pop	r0
     600:	df 91       	pop	r29
     602:	cf 91       	pop	r28
     604:	08 95       	ret

00000606 <set_motor_dir>:
     606:	cf 93       	push	r28
     608:	df 93       	push	r29
     60a:	1f 92       	push	r1
     60c:	cd b7       	in	r28, 0x3d	; 61
     60e:	de b7       	in	r29, 0x3e	; 62
     610:	89 83       	std	Y+1, r24	; 0x01
     612:	89 81       	ldd	r24, Y+1	; 0x01
     614:	18 16       	cp	r1, r24
     616:	54 f4       	brge	.+20     	; 0x62c <set_motor_dir+0x26>
     618:	82 e0       	ldi	r24, 0x02	; 2
     61a:	91 e0       	ldi	r25, 0x01	; 1
     61c:	22 e0       	ldi	r18, 0x02	; 2
     61e:	31 e0       	ldi	r19, 0x01	; 1
     620:	f9 01       	movw	r30, r18
     622:	20 81       	ld	r18, Z
     624:	22 60       	ori	r18, 0x02	; 2
     626:	fc 01       	movw	r30, r24
     628:	20 83       	st	Z, r18
     62a:	09 c0       	rjmp	.+18     	; 0x63e <set_motor_dir+0x38>
     62c:	82 e0       	ldi	r24, 0x02	; 2
     62e:	91 e0       	ldi	r25, 0x01	; 1
     630:	22 e0       	ldi	r18, 0x02	; 2
     632:	31 e0       	ldi	r19, 0x01	; 1
     634:	f9 01       	movw	r30, r18
     636:	20 81       	ld	r18, Z
     638:	2d 7f       	andi	r18, 0xFD	; 253
     63a:	fc 01       	movw	r30, r24
     63c:	20 83       	st	Z, r18
     63e:	0f 90       	pop	r0
     640:	df 91       	pop	r29
     642:	cf 91       	pop	r28
     644:	08 95       	ret

00000646 <MCP2515_init>:
     646:	cf 93       	push	r28
     648:	df 93       	push	r29
     64a:	cd b7       	in	r28, 0x3d	; 61
     64c:	de b7       	in	r29, 0x3e	; 62
     64e:	9c d2       	rcall	.+1336   	; 0xb88 <SPI_master_init>
     650:	57 d0       	rcall	.+174    	; 0x700 <reset_MCP2515>
     652:	df 91       	pop	r29
     654:	cf 91       	pop	r28
     656:	08 95       	ret

00000658 <read_MCP2515>:
     658:	cf 93       	push	r28
     65a:	df 93       	push	r29
     65c:	1f 92       	push	r1
     65e:	1f 92       	push	r1
     660:	cd b7       	in	r28, 0x3d	; 61
     662:	de b7       	in	r29, 0x3e	; 62
     664:	8a 83       	std	Y+2, r24	; 0x02
     666:	f5 d2       	rcall	.+1514   	; 0xc52 <spi_chipselect_deactivate>
     668:	83 e0       	ldi	r24, 0x03	; 3
     66a:	b9 d2       	rcall	.+1394   	; 0xbde <send_master_SPI>
     66c:	8a 81       	ldd	r24, Y+2	; 0x02
     66e:	b7 d2       	rcall	.+1390   	; 0xbde <send_master_SPI>
     670:	cc d2       	rcall	.+1432   	; 0xc0a <read_master_SPI>
     672:	89 83       	std	Y+1, r24	; 0x01
     674:	de d2       	rcall	.+1468   	; 0xc32 <spi_chipselect_activate>
     676:	89 81       	ldd	r24, Y+1	; 0x01
     678:	0f 90       	pop	r0
     67a:	0f 90       	pop	r0
     67c:	df 91       	pop	r29
     67e:	cf 91       	pop	r28
     680:	08 95       	ret

00000682 <write_MCP2515>:
     682:	cf 93       	push	r28
     684:	df 93       	push	r29
     686:	1f 92       	push	r1
     688:	1f 92       	push	r1
     68a:	cd b7       	in	r28, 0x3d	; 61
     68c:	de b7       	in	r29, 0x3e	; 62
     68e:	89 83       	std	Y+1, r24	; 0x01
     690:	6a 83       	std	Y+2, r22	; 0x02
     692:	df d2       	rcall	.+1470   	; 0xc52 <spi_chipselect_deactivate>
     694:	82 e0       	ldi	r24, 0x02	; 2
     696:	a3 d2       	rcall	.+1350   	; 0xbde <send_master_SPI>
     698:	89 81       	ldd	r24, Y+1	; 0x01
     69a:	a1 d2       	rcall	.+1346   	; 0xbde <send_master_SPI>
     69c:	8a 81       	ldd	r24, Y+2	; 0x02
     69e:	9f d2       	rcall	.+1342   	; 0xbde <send_master_SPI>
     6a0:	c8 d2       	rcall	.+1424   	; 0xc32 <spi_chipselect_activate>
     6a2:	0f 90       	pop	r0
     6a4:	0f 90       	pop	r0
     6a6:	df 91       	pop	r29
     6a8:	cf 91       	pop	r28
     6aa:	08 95       	ret

000006ac <request_to_send_MCP2515>:
     6ac:	cf 93       	push	r28
     6ae:	df 93       	push	r29
     6b0:	1f 92       	push	r1
     6b2:	cd b7       	in	r28, 0x3d	; 61
     6b4:	de b7       	in	r29, 0x3e	; 62
     6b6:	89 83       	std	Y+1, r24	; 0x01
     6b8:	cc d2       	rcall	.+1432   	; 0xc52 <spi_chipselect_deactivate>
     6ba:	89 81       	ldd	r24, Y+1	; 0x01
     6bc:	87 70       	andi	r24, 0x07	; 7
     6be:	89 83       	std	Y+1, r24	; 0x01
     6c0:	89 81       	ldd	r24, Y+1	; 0x01
     6c2:	80 58       	subi	r24, 0x80	; 128
     6c4:	8c d2       	rcall	.+1304   	; 0xbde <send_master_SPI>
     6c6:	b5 d2       	rcall	.+1386   	; 0xc32 <spi_chipselect_activate>
     6c8:	0f 90       	pop	r0
     6ca:	df 91       	pop	r29
     6cc:	cf 91       	pop	r28
     6ce:	08 95       	ret

000006d0 <bit_modify_MCP2515>:
     6d0:	cf 93       	push	r28
     6d2:	df 93       	push	r29
     6d4:	00 d0       	rcall	.+0      	; 0x6d6 <bit_modify_MCP2515+0x6>
     6d6:	cd b7       	in	r28, 0x3d	; 61
     6d8:	de b7       	in	r29, 0x3e	; 62
     6da:	89 83       	std	Y+1, r24	; 0x01
     6dc:	6a 83       	std	Y+2, r22	; 0x02
     6de:	4b 83       	std	Y+3, r20	; 0x03
     6e0:	b8 d2       	rcall	.+1392   	; 0xc52 <spi_chipselect_deactivate>
     6e2:	85 e0       	ldi	r24, 0x05	; 5
     6e4:	7c d2       	rcall	.+1272   	; 0xbde <send_master_SPI>
     6e6:	89 81       	ldd	r24, Y+1	; 0x01
     6e8:	7a d2       	rcall	.+1268   	; 0xbde <send_master_SPI>
     6ea:	8a 81       	ldd	r24, Y+2	; 0x02
     6ec:	78 d2       	rcall	.+1264   	; 0xbde <send_master_SPI>
     6ee:	8b 81       	ldd	r24, Y+3	; 0x03
     6f0:	76 d2       	rcall	.+1260   	; 0xbde <send_master_SPI>
     6f2:	9f d2       	rcall	.+1342   	; 0xc32 <spi_chipselect_activate>
     6f4:	0f 90       	pop	r0
     6f6:	0f 90       	pop	r0
     6f8:	0f 90       	pop	r0
     6fa:	df 91       	pop	r29
     6fc:	cf 91       	pop	r28
     6fe:	08 95       	ret

00000700 <reset_MCP2515>:
     700:	cf 93       	push	r28
     702:	df 93       	push	r29
     704:	cd b7       	in	r28, 0x3d	; 61
     706:	de b7       	in	r29, 0x3e	; 62
     708:	a4 d2       	rcall	.+1352   	; 0xc52 <spi_chipselect_deactivate>
     70a:	80 ec       	ldi	r24, 0xC0	; 192
     70c:	68 d2       	rcall	.+1232   	; 0xbde <send_master_SPI>
     70e:	91 d2       	rcall	.+1314   	; 0xc32 <spi_chipselect_activate>
     710:	df 91       	pop	r29
     712:	cf 91       	pop	r28
     714:	08 95       	ret

00000716 <pwm_init>:
#define SLIDE_NEUTRAL 20
#define SLIDE_MAX 255
#define SLIDE_MIN 0
#define SLIDE_CENTER (SLIDE_MAX/2)

void pwm_init(){
     716:	cf 93       	push	r28
     718:	df 93       	push	r29
     71a:	cd b7       	in	r28, 0x3d	; 61
     71c:	de b7       	in	r29, 0x3e	; 62
	/* Set period to 20 ms. */

	ICR1 = TIMER1_PERIOD;
     71e:	86 e8       	ldi	r24, 0x86	; 134
     720:	90 e0       	ldi	r25, 0x00	; 0
     722:	21 ee       	ldi	r18, 0xE1	; 225
     724:	34 e0       	ldi	r19, 0x04	; 4
     726:	fc 01       	movw	r30, r24
     728:	31 83       	std	Z+1, r19	; 0x01
     72a:	20 83       	st	Z, r18
	
	/* Initialize duty cycle to 1,5 ms for "neutral" position. */
	OCR1A = DUTY_CYCLE_CENTER;
     72c:	88 e8       	ldi	r24, 0x88	; 136
     72e:	90 e0       	ldi	r25, 0x00	; 0
     730:	2e e5       	ldi	r18, 0x5E	; 94
     732:	30 e0       	ldi	r19, 0x00	; 0
     734:	fc 01       	movw	r30, r24
     736:	31 83       	std	Z+1, r19	; 0x01
     738:	20 83       	st	Z, r18
	
	/* Set DDRB OC1A as output. */
	DDRB |= (1<<PB5);
     73a:	84 e2       	ldi	r24, 0x24	; 36
     73c:	90 e0       	ldi	r25, 0x00	; 0
     73e:	24 e2       	ldi	r18, 0x24	; 36
     740:	30 e0       	ldi	r19, 0x00	; 0
     742:	f9 01       	movw	r30, r18
     744:	20 81       	ld	r18, Z
     746:	20 62       	ori	r18, 0x20	; 32
     748:	fc 01       	movw	r30, r24
     74a:	20 83       	st	Z, r18
	
	/* Set Waveform Generation Mode 14 (fast PWM). */
	TCCR1A &= ~(1<<WGM10);
     74c:	80 e8       	ldi	r24, 0x80	; 128
     74e:	90 e0       	ldi	r25, 0x00	; 0
     750:	20 e8       	ldi	r18, 0x80	; 128
     752:	30 e0       	ldi	r19, 0x00	; 0
     754:	f9 01       	movw	r30, r18
     756:	20 81       	ld	r18, Z
     758:	2e 7f       	andi	r18, 0xFE	; 254
     75a:	fc 01       	movw	r30, r24
     75c:	20 83       	st	Z, r18
	TCCR1A |= (1<<WGM11);
     75e:	80 e8       	ldi	r24, 0x80	; 128
     760:	90 e0       	ldi	r25, 0x00	; 0
     762:	20 e8       	ldi	r18, 0x80	; 128
     764:	30 e0       	ldi	r19, 0x00	; 0
     766:	f9 01       	movw	r30, r18
     768:	20 81       	ld	r18, Z
     76a:	22 60       	ori	r18, 0x02	; 2
     76c:	fc 01       	movw	r30, r24
     76e:	20 83       	st	Z, r18
	TCCR1B |= ((1<<WGM13) | (1<<WGM12));
     770:	81 e8       	ldi	r24, 0x81	; 129
     772:	90 e0       	ldi	r25, 0x00	; 0
     774:	21 e8       	ldi	r18, 0x81	; 129
     776:	30 e0       	ldi	r19, 0x00	; 0
     778:	f9 01       	movw	r30, r18
     77a:	20 81       	ld	r18, Z
     77c:	28 61       	ori	r18, 0x18	; 24
     77e:	fc 01       	movw	r30, r24
     780:	20 83       	st	Z, r18
	
	/* Compare output mode for fast PWM. */
	TCCR1A &= ~(1<<COM1A0);
     782:	80 e8       	ldi	r24, 0x80	; 128
     784:	90 e0       	ldi	r25, 0x00	; 0
     786:	20 e8       	ldi	r18, 0x80	; 128
     788:	30 e0       	ldi	r19, 0x00	; 0
     78a:	f9 01       	movw	r30, r18
     78c:	20 81       	ld	r18, Z
     78e:	2f 7b       	andi	r18, 0xBF	; 191
     790:	fc 01       	movw	r30, r24
     792:	20 83       	st	Z, r18
	TCCR1A |= (1<<COM1A1);
     794:	80 e8       	ldi	r24, 0x80	; 128
     796:	90 e0       	ldi	r25, 0x00	; 0
     798:	20 e8       	ldi	r18, 0x80	; 128
     79a:	30 e0       	ldi	r19, 0x00	; 0
     79c:	f9 01       	movw	r30, r18
     79e:	20 81       	ld	r18, Z
     7a0:	20 68       	ori	r18, 0x80	; 128
     7a2:	fc 01       	movw	r30, r24
     7a4:	20 83       	st	Z, r18
	
	/* Prescaler 256. */
	TCCR1B &= ~((1<<CS11) | (1<<CS10));
     7a6:	81 e8       	ldi	r24, 0x81	; 129
     7a8:	90 e0       	ldi	r25, 0x00	; 0
     7aa:	21 e8       	ldi	r18, 0x81	; 129
     7ac:	30 e0       	ldi	r19, 0x00	; 0
     7ae:	f9 01       	movw	r30, r18
     7b0:	20 81       	ld	r18, Z
     7b2:	2c 7f       	andi	r18, 0xFC	; 252
     7b4:	fc 01       	movw	r30, r24
     7b6:	20 83       	st	Z, r18
	TCCR1B |= (1<<CS12);
     7b8:	81 e8       	ldi	r24, 0x81	; 129
     7ba:	90 e0       	ldi	r25, 0x00	; 0
     7bc:	21 e8       	ldi	r18, 0x81	; 129
     7be:	30 e0       	ldi	r19, 0x00	; 0
     7c0:	f9 01       	movw	r30, r18
     7c2:	20 81       	ld	r18, Z
     7c4:	24 60       	ori	r18, 0x04	; 4
     7c6:	fc 01       	movw	r30, r24
     7c8:	20 83       	st	Z, r18
}
     7ca:	df 91       	pop	r29
     7cc:	cf 91       	pop	r28
     7ce:	08 95       	ret

000007d0 <set_pwm_duty_cycle>:



void set_pwm_duty_cycle(uint8_t input_slide_pos){
     7d0:	0f 93       	push	r16
     7d2:	1f 93       	push	r17
     7d4:	cf 93       	push	r28
     7d6:	df 93       	push	r29
     7d8:	00 d0       	rcall	.+0      	; 0x7da <set_pwm_duty_cycle+0xa>
     7da:	cd b7       	in	r28, 0x3d	; 61
     7dc:	de b7       	in	r29, 0x3e	; 62
     7de:	8b 83       	std	Y+3, r24	; 0x03
	//printf("Position %i \n", input_slide_pos);
	if (input_slide_pos >= SLIDE_MAX){
     7e0:	8b 81       	ldd	r24, Y+3	; 0x03
     7e2:	8f 3f       	cpi	r24, 0xFF	; 255
     7e4:	41 f4       	brne	.+16     	; 0x7f6 <set_pwm_duty_cycle+0x26>
		OCR1A = DUTY_CYCLE_CENTER + DUTY_MAX;
     7e6:	88 e8       	ldi	r24, 0x88	; 136
     7e8:	90 e0       	ldi	r25, 0x00	; 0
     7ea:	23 e8       	ldi	r18, 0x83	; 131
     7ec:	30 e0       	ldi	r19, 0x00	; 0
     7ee:	fc 01       	movw	r30, r24
     7f0:	31 83       	std	Z+1, r19	; 0x01
     7f2:	20 83       	st	Z, r18
     7f4:	6e c0       	rjmp	.+220    	; 0x8d2 <set_pwm_duty_cycle+0x102>
	}
	else if (input_slide_pos <= SLIDE_MIN){
     7f6:	8b 81       	ldd	r24, Y+3	; 0x03
     7f8:	88 23       	and	r24, r24
     7fa:	41 f4       	brne	.+16     	; 0x80c <set_pwm_duty_cycle+0x3c>
		OCR1A = DUTY_CYCLE_CENTER - DUTY_MAX;
     7fc:	88 e8       	ldi	r24, 0x88	; 136
     7fe:	90 e0       	ldi	r25, 0x00	; 0
     800:	29 e3       	ldi	r18, 0x39	; 57
     802:	30 e0       	ldi	r19, 0x00	; 0
     804:	fc 01       	movw	r30, r24
     806:	31 83       	std	Z+1, r19	; 0x01
     808:	20 83       	st	Z, r18
     80a:	63 c0       	rjmp	.+198    	; 0x8d2 <set_pwm_duty_cycle+0x102>
	}
	else if (input_slide_pos >= SLIDE_CENTER+SLIDE_NEUTRAL){
     80c:	8b 81       	ldd	r24, Y+3	; 0x03
     80e:	83 39       	cpi	r24, 0x93	; 147
     810:	58 f1       	brcs	.+86     	; 0x868 <set_pwm_duty_cycle+0x98>
		int8_t input_slide_pos_int = input_slide_pos -127;
     812:	8b 81       	ldd	r24, Y+3	; 0x03
     814:	8f 57       	subi	r24, 0x7F	; 127
     816:	89 83       	std	Y+1, r24	; 0x01
		OCR1A = DUTY_CYCLE_CENTER + (input_slide_pos_int / DUTY_CONVERT_FACTOR);
     818:	08 e8       	ldi	r16, 0x88	; 136
     81a:	10 e0       	ldi	r17, 0x00	; 0
     81c:	89 81       	ldd	r24, Y+1	; 0x01
     81e:	99 27       	eor	r25, r25
     820:	87 fd       	sbrc	r24, 7
     822:	90 95       	com	r25
     824:	a9 2f       	mov	r26, r25
     826:	b9 2f       	mov	r27, r25
     828:	bc 01       	movw	r22, r24
     82a:	cd 01       	movw	r24, r26
     82c:	9b d4       	rcall	.+2358   	; 0x1164 <__floatsisf>
     82e:	dc 01       	movw	r26, r24
     830:	cb 01       	movw	r24, r22
     832:	20 e0       	ldi	r18, 0x00	; 0
     834:	30 e0       	ldi	r19, 0x00	; 0
     836:	40 e6       	ldi	r20, 0x60	; 96
     838:	50 e4       	ldi	r21, 0x40	; 64
     83a:	bc 01       	movw	r22, r24
     83c:	cd 01       	movw	r24, r26
     83e:	fc d3       	rcall	.+2040   	; 0x1038 <__divsf3>
     840:	dc 01       	movw	r26, r24
     842:	cb 01       	movw	r24, r22
     844:	20 e0       	ldi	r18, 0x00	; 0
     846:	30 e0       	ldi	r19, 0x00	; 0
     848:	4c eb       	ldi	r20, 0xBC	; 188
     84a:	52 e4       	ldi	r21, 0x42	; 66
     84c:	bc 01       	movw	r22, r24
     84e:	cd 01       	movw	r24, r26
     850:	8b d3       	rcall	.+1814   	; 0xf68 <__addsf3>
     852:	dc 01       	movw	r26, r24
     854:	cb 01       	movw	r24, r22
     856:	bc 01       	movw	r22, r24
     858:	cd 01       	movw	r24, r26
     85a:	56 d4       	rcall	.+2220   	; 0x1108 <__fixunssfsi>
     85c:	dc 01       	movw	r26, r24
     85e:	cb 01       	movw	r24, r22
     860:	f8 01       	movw	r30, r16
     862:	91 83       	std	Z+1, r25	; 0x01
     864:	80 83       	st	Z, r24
     866:	35 c0       	rjmp	.+106    	; 0x8d2 <set_pwm_duty_cycle+0x102>
	}
	else if (input_slide_pos <= SLIDE_CENTER-SLIDE_NEUTRAL){
     868:	8b 81       	ldd	r24, Y+3	; 0x03
     86a:	8c 36       	cpi	r24, 0x6C	; 108
     86c:	58 f5       	brcc	.+86     	; 0x8c4 <set_pwm_duty_cycle+0xf4>
		int8_t input_slide_pos_int = input_slide_pos -127;
     86e:	8b 81       	ldd	r24, Y+3	; 0x03
     870:	8f 57       	subi	r24, 0x7F	; 127
     872:	8a 83       	std	Y+2, r24	; 0x02
		OCR1A = DUTY_CYCLE_CENTER + (input_slide_pos_int / DUTY_CONVERT_FACTOR);
     874:	08 e8       	ldi	r16, 0x88	; 136
     876:	10 e0       	ldi	r17, 0x00	; 0
     878:	8a 81       	ldd	r24, Y+2	; 0x02
     87a:	99 27       	eor	r25, r25
     87c:	87 fd       	sbrc	r24, 7
     87e:	90 95       	com	r25
     880:	a9 2f       	mov	r26, r25
     882:	b9 2f       	mov	r27, r25
     884:	bc 01       	movw	r22, r24
     886:	cd 01       	movw	r24, r26
     888:	6d d4       	rcall	.+2266   	; 0x1164 <__floatsisf>
     88a:	dc 01       	movw	r26, r24
     88c:	cb 01       	movw	r24, r22
     88e:	20 e0       	ldi	r18, 0x00	; 0
     890:	30 e0       	ldi	r19, 0x00	; 0
     892:	40 e6       	ldi	r20, 0x60	; 96
     894:	50 e4       	ldi	r21, 0x40	; 64
     896:	bc 01       	movw	r22, r24
     898:	cd 01       	movw	r24, r26
     89a:	ce d3       	rcall	.+1948   	; 0x1038 <__divsf3>
     89c:	dc 01       	movw	r26, r24
     89e:	cb 01       	movw	r24, r22
     8a0:	20 e0       	ldi	r18, 0x00	; 0
     8a2:	30 e0       	ldi	r19, 0x00	; 0
     8a4:	4c eb       	ldi	r20, 0xBC	; 188
     8a6:	52 e4       	ldi	r21, 0x42	; 66
     8a8:	bc 01       	movw	r22, r24
     8aa:	cd 01       	movw	r24, r26
     8ac:	5d d3       	rcall	.+1722   	; 0xf68 <__addsf3>
     8ae:	dc 01       	movw	r26, r24
     8b0:	cb 01       	movw	r24, r22
     8b2:	bc 01       	movw	r22, r24
     8b4:	cd 01       	movw	r24, r26
     8b6:	28 d4       	rcall	.+2128   	; 0x1108 <__fixunssfsi>
     8b8:	dc 01       	movw	r26, r24
     8ba:	cb 01       	movw	r24, r22
     8bc:	f8 01       	movw	r30, r16
     8be:	91 83       	std	Z+1, r25	; 0x01
     8c0:	80 83       	st	Z, r24
     8c2:	07 c0       	rjmp	.+14     	; 0x8d2 <set_pwm_duty_cycle+0x102>
	}
	else {
		OCR1A = DUTY_CYCLE_CENTER;
     8c4:	88 e8       	ldi	r24, 0x88	; 136
     8c6:	90 e0       	ldi	r25, 0x00	; 0
     8c8:	2e e5       	ldi	r18, 0x5E	; 94
     8ca:	30 e0       	ldi	r19, 0x00	; 0
     8cc:	fc 01       	movw	r30, r24
     8ce:	31 83       	std	Z+1, r19	; 0x01
     8d0:	20 83       	st	Z, r18
	}
}
     8d2:	0f 90       	pop	r0
     8d4:	0f 90       	pop	r0
     8d6:	0f 90       	pop	r0
     8d8:	df 91       	pop	r29
     8da:	cf 91       	pop	r28
     8dc:	1f 91       	pop	r17
     8de:	0f 91       	pop	r16
     8e0:	08 95       	ret

000008e2 <score_count>:
     8e2:	cf 93       	push	r28
     8e4:	df 93       	push	r29
     8e6:	cd b7       	in	r28, 0x3d	; 61
     8e8:	de b7       	in	r29, 0x3e	; 62
     8ea:	2f 97       	sbiw	r28, 0x0f	; 15
     8ec:	0f b6       	in	r0, 0x3f	; 63
     8ee:	f8 94       	cli
     8f0:	de bf       	out	0x3e, r29	; 62
     8f2:	0f be       	out	0x3f, r0	; 63
     8f4:	cd bf       	out	0x3d, r28	; 61
     8f6:	2d de       	rcall	.-934    	; 0x552 <triggered_ir>
     8f8:	89 83       	std	Y+1, r24	; 0x01
     8fa:	89 81       	ldd	r24, Y+1	; 0x01
     8fc:	28 2f       	mov	r18, r24
     8fe:	33 27       	eor	r19, r19
     900:	27 fd       	sbrc	r18, 7
     902:	30 95       	com	r19
     904:	80 91 22 02 	lds	r24, 0x0222
     908:	90 91 23 02 	lds	r25, 0x0223
     90c:	28 17       	cp	r18, r24
     90e:	39 07       	cpc	r19, r25
     910:	09 f4       	brne	.+2      	; 0x914 <score_count+0x32>
     912:	83 c0       	rjmp	.+262    	; 0xa1a <score_count+0x138>
     914:	89 81       	ldd	r24, Y+1	; 0x01
     916:	28 2f       	mov	r18, r24
     918:	33 27       	eor	r19, r19
     91a:	27 fd       	sbrc	r18, 7
     91c:	30 95       	com	r19
     91e:	80 91 20 02 	lds	r24, 0x0220
     922:	90 91 21 02 	lds	r25, 0x0221
     926:	82 0f       	add	r24, r18
     928:	93 1f       	adc	r25, r19
     92a:	90 93 21 02 	sts	0x0221, r25
     92e:	80 93 20 02 	sts	0x0220, r24
     932:	89 81       	ldd	r24, Y+1	; 0x01
     934:	99 27       	eor	r25, r25
     936:	87 fd       	sbrc	r24, 7
     938:	90 95       	com	r25
     93a:	90 93 23 02 	sts	0x0223, r25
     93e:	80 93 22 02 	sts	0x0222, r24
     942:	80 e0       	ldi	r24, 0x00	; 0
     944:	90 e0       	ldi	r25, 0x00	; 0
     946:	aa e7       	ldi	r26, 0x7A	; 122
     948:	b4 e4       	ldi	r27, 0x44	; 68
     94a:	8a 83       	std	Y+2, r24	; 0x02
     94c:	9b 83       	std	Y+3, r25	; 0x03
     94e:	ac 83       	std	Y+4, r26	; 0x04
     950:	bd 83       	std	Y+5, r27	; 0x05

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
     952:	20 e0       	ldi	r18, 0x00	; 0
     954:	30 e0       	ldi	r19, 0x00	; 0
     956:	4a e7       	ldi	r20, 0x7A	; 122
     958:	55 e4       	ldi	r21, 0x45	; 69
     95a:	6a 81       	ldd	r22, Y+2	; 0x02
     95c:	7b 81       	ldd	r23, Y+3	; 0x03
     95e:	8c 81       	ldd	r24, Y+4	; 0x04
     960:	9d 81       	ldd	r25, Y+5	; 0x05
     962:	b4 d4       	rcall	.+2408   	; 0x12cc <__mulsf3>
     964:	dc 01       	movw	r26, r24
     966:	cb 01       	movw	r24, r22
     968:	8e 83       	std	Y+6, r24	; 0x06
     96a:	9f 83       	std	Y+7, r25	; 0x07
     96c:	a8 87       	std	Y+8, r26	; 0x08
     96e:	b9 87       	std	Y+9, r27	; 0x09
	if (__tmp < 1.0)
     970:	20 e0       	ldi	r18, 0x00	; 0
     972:	30 e0       	ldi	r19, 0x00	; 0
     974:	40 e8       	ldi	r20, 0x80	; 128
     976:	5f e3       	ldi	r21, 0x3F	; 63
     978:	6e 81       	ldd	r22, Y+6	; 0x06
     97a:	7f 81       	ldd	r23, Y+7	; 0x07
     97c:	88 85       	ldd	r24, Y+8	; 0x08
     97e:	99 85       	ldd	r25, Y+9	; 0x09
     980:	57 d3       	rcall	.+1710   	; 0x1030 <__cmpsf2>
     982:	88 23       	and	r24, r24
     984:	2c f4       	brge	.+10     	; 0x990 <score_count+0xae>
		__ticks = 1;
     986:	81 e0       	ldi	r24, 0x01	; 1
     988:	90 e0       	ldi	r25, 0x00	; 0
     98a:	9b 87       	std	Y+11, r25	; 0x0b
     98c:	8a 87       	std	Y+10, r24	; 0x0a
     98e:	3b c0       	rjmp	.+118    	; 0xa06 <score_count+0x124>
	else if (__tmp > 65535)
     990:	20 e0       	ldi	r18, 0x00	; 0
     992:	3f ef       	ldi	r19, 0xFF	; 255
     994:	4f e7       	ldi	r20, 0x7F	; 127
     996:	57 e4       	ldi	r21, 0x47	; 71
     998:	6e 81       	ldd	r22, Y+6	; 0x06
     99a:	7f 81       	ldd	r23, Y+7	; 0x07
     99c:	88 85       	ldd	r24, Y+8	; 0x08
     99e:	99 85       	ldd	r25, Y+9	; 0x09
     9a0:	91 d4       	rcall	.+2338   	; 0x12c4 <__gesf2>
     9a2:	18 16       	cp	r1, r24
     9a4:	3c f5       	brge	.+78     	; 0x9f4 <score_count+0x112>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     9a6:	20 e0       	ldi	r18, 0x00	; 0
     9a8:	30 e0       	ldi	r19, 0x00	; 0
     9aa:	40 e2       	ldi	r20, 0x20	; 32
     9ac:	51 e4       	ldi	r21, 0x41	; 65
     9ae:	6a 81       	ldd	r22, Y+2	; 0x02
     9b0:	7b 81       	ldd	r23, Y+3	; 0x03
     9b2:	8c 81       	ldd	r24, Y+4	; 0x04
     9b4:	9d 81       	ldd	r25, Y+5	; 0x05
     9b6:	8a d4       	rcall	.+2324   	; 0x12cc <__mulsf3>
     9b8:	dc 01       	movw	r26, r24
     9ba:	cb 01       	movw	r24, r22
     9bc:	bc 01       	movw	r22, r24
     9be:	cd 01       	movw	r24, r26
     9c0:	a3 d3       	rcall	.+1862   	; 0x1108 <__fixunssfsi>
     9c2:	dc 01       	movw	r26, r24
     9c4:	cb 01       	movw	r24, r22
     9c6:	9b 87       	std	Y+11, r25	; 0x0b
     9c8:	8a 87       	std	Y+10, r24	; 0x0a
     9ca:	0f c0       	rjmp	.+30     	; 0x9ea <score_count+0x108>
     9cc:	80 e9       	ldi	r24, 0x90	; 144
     9ce:	91 e0       	ldi	r25, 0x01	; 1
     9d0:	9d 87       	std	Y+13, r25	; 0x0d
     9d2:	8c 87       	std	Y+12, r24	; 0x0c
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
     9d4:	8c 85       	ldd	r24, Y+12	; 0x0c
     9d6:	9d 85       	ldd	r25, Y+13	; 0x0d
     9d8:	01 97       	sbiw	r24, 0x01	; 1
     9da:	f1 f7       	brne	.-4      	; 0x9d8 <score_count+0xf6>
     9dc:	9d 87       	std	Y+13, r25	; 0x0d
     9de:	8c 87       	std	Y+12, r24	; 0x0c
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     9e0:	8a 85       	ldd	r24, Y+10	; 0x0a
     9e2:	9b 85       	ldd	r25, Y+11	; 0x0b
     9e4:	01 97       	sbiw	r24, 0x01	; 1
     9e6:	9b 87       	std	Y+11, r25	; 0x0b
     9e8:	8a 87       	std	Y+10, r24	; 0x0a
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     9ea:	8a 85       	ldd	r24, Y+10	; 0x0a
     9ec:	9b 85       	ldd	r25, Y+11	; 0x0b
     9ee:	00 97       	sbiw	r24, 0x00	; 0
     9f0:	69 f7       	brne	.-38     	; 0x9cc <score_count+0xea>
     9f2:	13 c0       	rjmp	.+38     	; 0xa1a <score_count+0x138>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     9f4:	6e 81       	ldd	r22, Y+6	; 0x06
     9f6:	7f 81       	ldd	r23, Y+7	; 0x07
     9f8:	88 85       	ldd	r24, Y+8	; 0x08
     9fa:	99 85       	ldd	r25, Y+9	; 0x09
     9fc:	85 d3       	rcall	.+1802   	; 0x1108 <__fixunssfsi>
     9fe:	dc 01       	movw	r26, r24
     a00:	cb 01       	movw	r24, r22
     a02:	9b 87       	std	Y+11, r25	; 0x0b
     a04:	8a 87       	std	Y+10, r24	; 0x0a
     a06:	8a 85       	ldd	r24, Y+10	; 0x0a
     a08:	9b 85       	ldd	r25, Y+11	; 0x0b
     a0a:	9f 87       	std	Y+15, r25	; 0x0f
     a0c:	8e 87       	std	Y+14, r24	; 0x0e
     a0e:	8e 85       	ldd	r24, Y+14	; 0x0e
     a10:	9f 85       	ldd	r25, Y+15	; 0x0f
     a12:	01 97       	sbiw	r24, 0x01	; 1
     a14:	f1 f7       	brne	.-4      	; 0xa12 <score_count+0x130>
     a16:	9f 87       	std	Y+15, r25	; 0x0f
     a18:	8e 87       	std	Y+14, r24	; 0x0e
     a1a:	89 81       	ldd	r24, Y+1	; 0x01
     a1c:	99 27       	eor	r25, r25
     a1e:	87 fd       	sbrc	r24, 7
     a20:	90 95       	com	r25
     a22:	2f 96       	adiw	r28, 0x0f	; 15
     a24:	0f b6       	in	r0, 0x3f	; 63
     a26:	f8 94       	cli
     a28:	de bf       	out	0x3e, r29	; 62
     a2a:	0f be       	out	0x3f, r0	; 63
     a2c:	cd bf       	out	0x3d, r28	; 61
     a2e:	df 91       	pop	r29
     a30:	cf 91       	pop	r28
     a32:	08 95       	ret

00000a34 <solenoid_init>:
     a34:	cf 93       	push	r28
     a36:	df 93       	push	r29
     a38:	cd b7       	in	r28, 0x3d	; 61
     a3a:	de b7       	in	r29, 0x3e	; 62
     a3c:	8a e0       	ldi	r24, 0x0A	; 10
     a3e:	91 e0       	ldi	r25, 0x01	; 1
     a40:	2a e0       	ldi	r18, 0x0A	; 10
     a42:	31 e0       	ldi	r19, 0x01	; 1
     a44:	f9 01       	movw	r30, r18
     a46:	20 81       	ld	r18, Z
     a48:	20 68       	ori	r18, 0x80	; 128
     a4a:	fc 01       	movw	r30, r24
     a4c:	20 83       	st	Z, r18
     a4e:	8b e0       	ldi	r24, 0x0B	; 11
     a50:	91 e0       	ldi	r25, 0x01	; 1
     a52:	2b e0       	ldi	r18, 0x0B	; 11
     a54:	31 e0       	ldi	r19, 0x01	; 1
     a56:	f9 01       	movw	r30, r18
     a58:	20 81       	ld	r18, Z
     a5a:	20 68       	ori	r18, 0x80	; 128
     a5c:	fc 01       	movw	r30, r24
     a5e:	20 83       	st	Z, r18
     a60:	df 91       	pop	r29
     a62:	cf 91       	pop	r28
     a64:	08 95       	ret

00000a66 <push_solenoid>:
     a66:	cf 93       	push	r28
     a68:	df 93       	push	r29
     a6a:	cd b7       	in	r28, 0x3d	; 61
     a6c:	de b7       	in	r29, 0x3e	; 62
     a6e:	2e 97       	sbiw	r28, 0x0e	; 14
     a70:	0f b6       	in	r0, 0x3f	; 63
     a72:	f8 94       	cli
     a74:	de bf       	out	0x3e, r29	; 62
     a76:	0f be       	out	0x3f, r0	; 63
     a78:	cd bf       	out	0x3d, r28	; 61
     a7a:	8b e0       	ldi	r24, 0x0B	; 11
     a7c:	91 e0       	ldi	r25, 0x01	; 1
     a7e:	2b e0       	ldi	r18, 0x0B	; 11
     a80:	31 e0       	ldi	r19, 0x01	; 1
     a82:	f9 01       	movw	r30, r18
     a84:	20 81       	ld	r18, Z
     a86:	2f 77       	andi	r18, 0x7F	; 127
     a88:	fc 01       	movw	r30, r24
     a8a:	20 83       	st	Z, r18
     a8c:	80 e0       	ldi	r24, 0x00	; 0
     a8e:	90 e0       	ldi	r25, 0x00	; 0
     a90:	af e2       	ldi	r26, 0x2F	; 47
     a92:	b4 e4       	ldi	r27, 0x44	; 68
     a94:	89 83       	std	Y+1, r24	; 0x01
     a96:	9a 83       	std	Y+2, r25	; 0x02
     a98:	ab 83       	std	Y+3, r26	; 0x03
     a9a:	bc 83       	std	Y+4, r27	; 0x04

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
     a9c:	20 e0       	ldi	r18, 0x00	; 0
     a9e:	30 e0       	ldi	r19, 0x00	; 0
     aa0:	4a e7       	ldi	r20, 0x7A	; 122
     aa2:	53 e4       	ldi	r21, 0x43	; 67
     aa4:	69 81       	ldd	r22, Y+1	; 0x01
     aa6:	7a 81       	ldd	r23, Y+2	; 0x02
     aa8:	8b 81       	ldd	r24, Y+3	; 0x03
     aaa:	9c 81       	ldd	r25, Y+4	; 0x04
     aac:	0f d4       	rcall	.+2078   	; 0x12cc <__mulsf3>
     aae:	dc 01       	movw	r26, r24
     ab0:	cb 01       	movw	r24, r22
     ab2:	8d 83       	std	Y+5, r24	; 0x05
     ab4:	9e 83       	std	Y+6, r25	; 0x06
     ab6:	af 83       	std	Y+7, r26	; 0x07
     ab8:	b8 87       	std	Y+8, r27	; 0x08
	if (__tmp < 1.0)
     aba:	20 e0       	ldi	r18, 0x00	; 0
     abc:	30 e0       	ldi	r19, 0x00	; 0
     abe:	40 e8       	ldi	r20, 0x80	; 128
     ac0:	5f e3       	ldi	r21, 0x3F	; 63
     ac2:	6d 81       	ldd	r22, Y+5	; 0x05
     ac4:	7e 81       	ldd	r23, Y+6	; 0x06
     ac6:	8f 81       	ldd	r24, Y+7	; 0x07
     ac8:	98 85       	ldd	r25, Y+8	; 0x08
     aca:	b2 d2       	rcall	.+1380   	; 0x1030 <__cmpsf2>
     acc:	88 23       	and	r24, r24
     ace:	2c f4       	brge	.+10     	; 0xada <push_solenoid+0x74>
		__ticks = 1;
     ad0:	81 e0       	ldi	r24, 0x01	; 1
     ad2:	90 e0       	ldi	r25, 0x00	; 0
     ad4:	9a 87       	std	Y+10, r25	; 0x0a
     ad6:	89 87       	std	Y+9, r24	; 0x09
     ad8:	3b c0       	rjmp	.+118    	; 0xb50 <push_solenoid+0xea>
	else if (__tmp > 65535)
     ada:	20 e0       	ldi	r18, 0x00	; 0
     adc:	3f ef       	ldi	r19, 0xFF	; 255
     ade:	4f e7       	ldi	r20, 0x7F	; 127
     ae0:	57 e4       	ldi	r21, 0x47	; 71
     ae2:	6d 81       	ldd	r22, Y+5	; 0x05
     ae4:	7e 81       	ldd	r23, Y+6	; 0x06
     ae6:	8f 81       	ldd	r24, Y+7	; 0x07
     ae8:	98 85       	ldd	r25, Y+8	; 0x08
     aea:	ec d3       	rcall	.+2008   	; 0x12c4 <__gesf2>
     aec:	18 16       	cp	r1, r24
     aee:	3c f5       	brge	.+78     	; 0xb3e <push_solenoid+0xd8>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     af0:	20 e0       	ldi	r18, 0x00	; 0
     af2:	30 e0       	ldi	r19, 0x00	; 0
     af4:	40 e2       	ldi	r20, 0x20	; 32
     af6:	51 e4       	ldi	r21, 0x41	; 65
     af8:	69 81       	ldd	r22, Y+1	; 0x01
     afa:	7a 81       	ldd	r23, Y+2	; 0x02
     afc:	8b 81       	ldd	r24, Y+3	; 0x03
     afe:	9c 81       	ldd	r25, Y+4	; 0x04
     b00:	e5 d3       	rcall	.+1994   	; 0x12cc <__mulsf3>
     b02:	dc 01       	movw	r26, r24
     b04:	cb 01       	movw	r24, r22
     b06:	bc 01       	movw	r22, r24
     b08:	cd 01       	movw	r24, r26
     b0a:	fe d2       	rcall	.+1532   	; 0x1108 <__fixunssfsi>
     b0c:	dc 01       	movw	r26, r24
     b0e:	cb 01       	movw	r24, r22
     b10:	9a 87       	std	Y+10, r25	; 0x0a
     b12:	89 87       	std	Y+9, r24	; 0x09
     b14:	0f c0       	rjmp	.+30     	; 0xb34 <push_solenoid+0xce>
     b16:	89 e1       	ldi	r24, 0x19	; 25
     b18:	90 e0       	ldi	r25, 0x00	; 0
     b1a:	9c 87       	std	Y+12, r25	; 0x0c
     b1c:	8b 87       	std	Y+11, r24	; 0x0b
     b1e:	8b 85       	ldd	r24, Y+11	; 0x0b
     b20:	9c 85       	ldd	r25, Y+12	; 0x0c
     b22:	01 97       	sbiw	r24, 0x01	; 1
     b24:	f1 f7       	brne	.-4      	; 0xb22 <push_solenoid+0xbc>
     b26:	9c 87       	std	Y+12, r25	; 0x0c
     b28:	8b 87       	std	Y+11, r24	; 0x0b
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     b2a:	89 85       	ldd	r24, Y+9	; 0x09
     b2c:	9a 85       	ldd	r25, Y+10	; 0x0a
     b2e:	01 97       	sbiw	r24, 0x01	; 1
     b30:	9a 87       	std	Y+10, r25	; 0x0a
     b32:	89 87       	std	Y+9, r24	; 0x09
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     b34:	89 85       	ldd	r24, Y+9	; 0x09
     b36:	9a 85       	ldd	r25, Y+10	; 0x0a
     b38:	00 97       	sbiw	r24, 0x00	; 0
     b3a:	69 f7       	brne	.-38     	; 0xb16 <push_solenoid+0xb0>
     b3c:	13 c0       	rjmp	.+38     	; 0xb64 <push_solenoid+0xfe>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     b3e:	6d 81       	ldd	r22, Y+5	; 0x05
     b40:	7e 81       	ldd	r23, Y+6	; 0x06
     b42:	8f 81       	ldd	r24, Y+7	; 0x07
     b44:	98 85       	ldd	r25, Y+8	; 0x08
     b46:	e0 d2       	rcall	.+1472   	; 0x1108 <__fixunssfsi>
     b48:	dc 01       	movw	r26, r24
     b4a:	cb 01       	movw	r24, r22
     b4c:	9a 87       	std	Y+10, r25	; 0x0a
     b4e:	89 87       	std	Y+9, r24	; 0x09
     b50:	89 85       	ldd	r24, Y+9	; 0x09
     b52:	9a 85       	ldd	r25, Y+10	; 0x0a
     b54:	9e 87       	std	Y+14, r25	; 0x0e
     b56:	8d 87       	std	Y+13, r24	; 0x0d
     b58:	8d 85       	ldd	r24, Y+13	; 0x0d
     b5a:	9e 85       	ldd	r25, Y+14	; 0x0e
     b5c:	01 97       	sbiw	r24, 0x01	; 1
     b5e:	f1 f7       	brne	.-4      	; 0xb5c <push_solenoid+0xf6>
     b60:	9e 87       	std	Y+14, r25	; 0x0e
     b62:	8d 87       	std	Y+13, r24	; 0x0d
     b64:	8b e0       	ldi	r24, 0x0B	; 11
     b66:	91 e0       	ldi	r25, 0x01	; 1
     b68:	2b e0       	ldi	r18, 0x0B	; 11
     b6a:	31 e0       	ldi	r19, 0x01	; 1
     b6c:	f9 01       	movw	r30, r18
     b6e:	20 81       	ld	r18, Z
     b70:	20 68       	ori	r18, 0x80	; 128
     b72:	fc 01       	movw	r30, r24
     b74:	20 83       	st	Z, r18
     b76:	2e 96       	adiw	r28, 0x0e	; 14
     b78:	0f b6       	in	r0, 0x3f	; 63
     b7a:	f8 94       	cli
     b7c:	de bf       	out	0x3e, r29	; 62
     b7e:	0f be       	out	0x3f, r0	; 63
     b80:	cd bf       	out	0x3d, r28	; 61
     b82:	df 91       	pop	r29
     b84:	cf 91       	pop	r28
     b86:	08 95       	ret

00000b88 <SPI_master_init>:
     b88:	cf 93       	push	r28
     b8a:	df 93       	push	r29
     b8c:	cd b7       	in	r28, 0x3d	; 61
     b8e:	de b7       	in	r29, 0x3e	; 62
     b90:	84 e2       	ldi	r24, 0x24	; 36
     b92:	90 e0       	ldi	r25, 0x00	; 0
     b94:	24 e2       	ldi	r18, 0x24	; 36
     b96:	30 e0       	ldi	r19, 0x00	; 0
     b98:	f9 01       	movw	r30, r18
     b9a:	20 81       	ld	r18, Z
     b9c:	27 68       	ori	r18, 0x87	; 135
     b9e:	fc 01       	movw	r30, r24
     ba0:	20 83       	st	Z, r18
     ba2:	84 e2       	ldi	r24, 0x24	; 36
     ba4:	90 e0       	ldi	r25, 0x00	; 0
     ba6:	24 e2       	ldi	r18, 0x24	; 36
     ba8:	30 e0       	ldi	r19, 0x00	; 0
     baa:	f9 01       	movw	r30, r18
     bac:	20 81       	ld	r18, Z
     bae:	27 7f       	andi	r18, 0xF7	; 247
     bb0:	fc 01       	movw	r30, r24
     bb2:	20 83       	st	Z, r18
     bb4:	85 e2       	ldi	r24, 0x25	; 37
     bb6:	90 e0       	ldi	r25, 0x00	; 0
     bb8:	25 e2       	ldi	r18, 0x25	; 37
     bba:	30 e0       	ldi	r19, 0x00	; 0
     bbc:	f9 01       	movw	r30, r18
     bbe:	20 81       	ld	r18, Z
     bc0:	28 60       	ori	r18, 0x08	; 8
     bc2:	fc 01       	movw	r30, r24
     bc4:	20 83       	st	Z, r18
     bc6:	8c e4       	ldi	r24, 0x4C	; 76
     bc8:	90 e0       	ldi	r25, 0x00	; 0
     bca:	2c e4       	ldi	r18, 0x4C	; 76
     bcc:	30 e0       	ldi	r19, 0x00	; 0
     bce:	f9 01       	movw	r30, r18
     bd0:	20 81       	ld	r18, Z
     bd2:	22 65       	ori	r18, 0x52	; 82
     bd4:	fc 01       	movw	r30, r24
     bd6:	20 83       	st	Z, r18
     bd8:	df 91       	pop	r29
     bda:	cf 91       	pop	r28
     bdc:	08 95       	ret

00000bde <send_master_SPI>:
     bde:	cf 93       	push	r28
     be0:	df 93       	push	r29
     be2:	1f 92       	push	r1
     be4:	cd b7       	in	r28, 0x3d	; 61
     be6:	de b7       	in	r29, 0x3e	; 62
     be8:	89 83       	std	Y+1, r24	; 0x01
     bea:	8e e4       	ldi	r24, 0x4E	; 78
     bec:	90 e0       	ldi	r25, 0x00	; 0
     bee:	29 81       	ldd	r18, Y+1	; 0x01
     bf0:	fc 01       	movw	r30, r24
     bf2:	20 83       	st	Z, r18
     bf4:	00 00       	nop
     bf6:	8d e4       	ldi	r24, 0x4D	; 77
     bf8:	90 e0       	ldi	r25, 0x00	; 0
     bfa:	fc 01       	movw	r30, r24
     bfc:	80 81       	ld	r24, Z
     bfe:	88 23       	and	r24, r24
     c00:	d4 f7       	brge	.-12     	; 0xbf6 <send_master_SPI+0x18>
     c02:	0f 90       	pop	r0
     c04:	df 91       	pop	r29
     c06:	cf 91       	pop	r28
     c08:	08 95       	ret

00000c0a <read_master_SPI>:
     c0a:	cf 93       	push	r28
     c0c:	df 93       	push	r29
     c0e:	cd b7       	in	r28, 0x3d	; 61
     c10:	de b7       	in	r29, 0x3e	; 62
     c12:	8f ef       	ldi	r24, 0xFF	; 255
     c14:	e4 df       	rcall	.-56     	; 0xbde <send_master_SPI>
     c16:	00 00       	nop
     c18:	8d e4       	ldi	r24, 0x4D	; 77
     c1a:	90 e0       	ldi	r25, 0x00	; 0
     c1c:	fc 01       	movw	r30, r24
     c1e:	80 81       	ld	r24, Z
     c20:	88 23       	and	r24, r24
     c22:	d4 f7       	brge	.-12     	; 0xc18 <read_master_SPI+0xe>
     c24:	8e e4       	ldi	r24, 0x4E	; 78
     c26:	90 e0       	ldi	r25, 0x00	; 0
     c28:	fc 01       	movw	r30, r24
     c2a:	80 81       	ld	r24, Z
     c2c:	df 91       	pop	r29
     c2e:	cf 91       	pop	r28
     c30:	08 95       	ret

00000c32 <spi_chipselect_activate>:
     c32:	cf 93       	push	r28
     c34:	df 93       	push	r29
     c36:	cd b7       	in	r28, 0x3d	; 61
     c38:	de b7       	in	r29, 0x3e	; 62
     c3a:	85 e2       	ldi	r24, 0x25	; 37
     c3c:	90 e0       	ldi	r25, 0x00	; 0
     c3e:	25 e2       	ldi	r18, 0x25	; 37
     c40:	30 e0       	ldi	r19, 0x00	; 0
     c42:	f9 01       	movw	r30, r18
     c44:	20 81       	ld	r18, Z
     c46:	20 68       	ori	r18, 0x80	; 128
     c48:	fc 01       	movw	r30, r24
     c4a:	20 83       	st	Z, r18
     c4c:	df 91       	pop	r29
     c4e:	cf 91       	pop	r28
     c50:	08 95       	ret

00000c52 <spi_chipselect_deactivate>:
     c52:	cf 93       	push	r28
     c54:	df 93       	push	r29
     c56:	cd b7       	in	r28, 0x3d	; 61
     c58:	de b7       	in	r29, 0x3e	; 62
     c5a:	85 e2       	ldi	r24, 0x25	; 37
     c5c:	90 e0       	ldi	r25, 0x00	; 0
     c5e:	25 e2       	ldi	r18, 0x25	; 37
     c60:	30 e0       	ldi	r19, 0x00	; 0
     c62:	f9 01       	movw	r30, r18
     c64:	20 81       	ld	r18, Z
     c66:	2f 77       	andi	r18, 0x7F	; 127
     c68:	fc 01       	movw	r30, r24
     c6a:	20 83       	st	Z, r18
     c6c:	df 91       	pop	r29
     c6e:	cf 91       	pop	r28
     c70:	08 95       	ret

00000c72 <TWI_Master_Initialise>:
     c72:	cf 93       	push	r28
     c74:	df 93       	push	r29
     c76:	cd b7       	in	r28, 0x3d	; 61
     c78:	de b7       	in	r29, 0x3e	; 62
     c7a:	88 eb       	ldi	r24, 0xB8	; 184
     c7c:	90 e0       	ldi	r25, 0x00	; 0
     c7e:	2c e0       	ldi	r18, 0x0C	; 12
     c80:	fc 01       	movw	r30, r24
     c82:	20 83       	st	Z, r18
     c84:	8b eb       	ldi	r24, 0xBB	; 187
     c86:	90 e0       	ldi	r25, 0x00	; 0
     c88:	2f ef       	ldi	r18, 0xFF	; 255
     c8a:	fc 01       	movw	r30, r24
     c8c:	20 83       	st	Z, r18
     c8e:	8c eb       	ldi	r24, 0xBC	; 188
     c90:	90 e0       	ldi	r25, 0x00	; 0
     c92:	24 e0       	ldi	r18, 0x04	; 4
     c94:	fc 01       	movw	r30, r24
     c96:	20 83       	st	Z, r18
     c98:	df 91       	pop	r29
     c9a:	cf 91       	pop	r28
     c9c:	08 95       	ret

00000c9e <TWI_Transceiver_Busy>:
     c9e:	cf 93       	push	r28
     ca0:	df 93       	push	r29
     ca2:	cd b7       	in	r28, 0x3d	; 61
     ca4:	de b7       	in	r29, 0x3e	; 62
     ca6:	8c eb       	ldi	r24, 0xBC	; 188
     ca8:	90 e0       	ldi	r25, 0x00	; 0
     caa:	fc 01       	movw	r30, r24
     cac:	80 81       	ld	r24, Z
     cae:	81 70       	andi	r24, 0x01	; 1
     cb0:	df 91       	pop	r29
     cb2:	cf 91       	pop	r28
     cb4:	08 95       	ret

00000cb6 <TWI_Start_Transceiver_With_Data>:
     cb6:	cf 93       	push	r28
     cb8:	df 93       	push	r29
     cba:	00 d0       	rcall	.+0      	; 0xcbc <TWI_Start_Transceiver_With_Data+0x6>
     cbc:	1f 92       	push	r1
     cbe:	cd b7       	in	r28, 0x3d	; 61
     cc0:	de b7       	in	r29, 0x3e	; 62
     cc2:	9b 83       	std	Y+3, r25	; 0x03
     cc4:	8a 83       	std	Y+2, r24	; 0x02
     cc6:	6c 83       	std	Y+4, r22	; 0x04
     cc8:	00 00       	nop
     cca:	e9 df       	rcall	.-46     	; 0xc9e <TWI_Transceiver_Busy>
     ccc:	88 23       	and	r24, r24
     cce:	e9 f7       	brne	.-6      	; 0xcca <TWI_Start_Transceiver_With_Data+0x14>
     cd0:	8c 81       	ldd	r24, Y+4	; 0x04
     cd2:	80 93 28 02 	sts	0x0228, r24
     cd6:	8a 81       	ldd	r24, Y+2	; 0x02
     cd8:	9b 81       	ldd	r25, Y+3	; 0x03
     cda:	fc 01       	movw	r30, r24
     cdc:	80 81       	ld	r24, Z
     cde:	80 93 24 02 	sts	0x0224, r24
     ce2:	8a 81       	ldd	r24, Y+2	; 0x02
     ce4:	9b 81       	ldd	r25, Y+3	; 0x03
     ce6:	fc 01       	movw	r30, r24
     ce8:	80 81       	ld	r24, Z
     cea:	88 2f       	mov	r24, r24
     cec:	90 e0       	ldi	r25, 0x00	; 0
     cee:	81 70       	andi	r24, 0x01	; 1
     cf0:	99 27       	eor	r25, r25
     cf2:	00 97       	sbiw	r24, 0x00	; 0
     cf4:	d1 f4       	brne	.+52     	; 0xd2a <TWI_Start_Transceiver_With_Data+0x74>
     cf6:	81 e0       	ldi	r24, 0x01	; 1
     cf8:	89 83       	std	Y+1, r24	; 0x01
     cfa:	13 c0       	rjmp	.+38     	; 0xd22 <TWI_Start_Transceiver_With_Data+0x6c>
     cfc:	89 81       	ldd	r24, Y+1	; 0x01
     cfe:	88 2f       	mov	r24, r24
     d00:	90 e0       	ldi	r25, 0x00	; 0
     d02:	29 81       	ldd	r18, Y+1	; 0x01
     d04:	22 2f       	mov	r18, r18
     d06:	30 e0       	ldi	r19, 0x00	; 0
     d08:	4a 81       	ldd	r20, Y+2	; 0x02
     d0a:	5b 81       	ldd	r21, Y+3	; 0x03
     d0c:	24 0f       	add	r18, r20
     d0e:	35 1f       	adc	r19, r21
     d10:	f9 01       	movw	r30, r18
     d12:	20 81       	ld	r18, Z
     d14:	8c 5d       	subi	r24, 0xDC	; 220
     d16:	9d 4f       	sbci	r25, 0xFD	; 253
     d18:	fc 01       	movw	r30, r24
     d1a:	20 83       	st	Z, r18
     d1c:	89 81       	ldd	r24, Y+1	; 0x01
     d1e:	8f 5f       	subi	r24, 0xFF	; 255
     d20:	89 83       	std	Y+1, r24	; 0x01
     d22:	99 81       	ldd	r25, Y+1	; 0x01
     d24:	8c 81       	ldd	r24, Y+4	; 0x04
     d26:	98 17       	cp	r25, r24
     d28:	48 f3       	brcs	.-46     	; 0xcfc <TWI_Start_Transceiver_With_Data+0x46>
     d2a:	10 92 29 02 	sts	0x0229, r1
     d2e:	88 ef       	ldi	r24, 0xF8	; 248
     d30:	80 93 06 02 	sts	0x0206, r24
     d34:	8c eb       	ldi	r24, 0xBC	; 188
     d36:	90 e0       	ldi	r25, 0x00	; 0
     d38:	25 ea       	ldi	r18, 0xA5	; 165
     d3a:	fc 01       	movw	r30, r24
     d3c:	20 83       	st	Z, r18
     d3e:	0f 90       	pop	r0
     d40:	0f 90       	pop	r0
     d42:	0f 90       	pop	r0
     d44:	0f 90       	pop	r0
     d46:	df 91       	pop	r29
     d48:	cf 91       	pop	r28
     d4a:	08 95       	ret

00000d4c <__vector_39>:
     d4c:	1f 92       	push	r1
     d4e:	0f 92       	push	r0
     d50:	00 90 5f 00 	lds	r0, 0x005F
     d54:	0f 92       	push	r0
     d56:	11 24       	eor	r1, r1
     d58:	00 90 5b 00 	lds	r0, 0x005B
     d5c:	0f 92       	push	r0
     d5e:	2f 93       	push	r18
     d60:	3f 93       	push	r19
     d62:	4f 93       	push	r20
     d64:	5f 93       	push	r21
     d66:	8f 93       	push	r24
     d68:	9f 93       	push	r25
     d6a:	af 93       	push	r26
     d6c:	bf 93       	push	r27
     d6e:	ef 93       	push	r30
     d70:	ff 93       	push	r31
     d72:	cf 93       	push	r28
     d74:	df 93       	push	r29
     d76:	cd b7       	in	r28, 0x3d	; 61
     d78:	de b7       	in	r29, 0x3e	; 62
     d7a:	89 eb       	ldi	r24, 0xB9	; 185
     d7c:	90 e0       	ldi	r25, 0x00	; 0
     d7e:	fc 01       	movw	r30, r24
     d80:	80 81       	ld	r24, Z
     d82:	88 2f       	mov	r24, r24
     d84:	90 e0       	ldi	r25, 0x00	; 0
     d86:	aa 27       	eor	r26, r26
     d88:	97 fd       	sbrc	r25, 7
     d8a:	a0 95       	com	r26
     d8c:	ba 2f       	mov	r27, r26
     d8e:	48 e0       	ldi	r20, 0x08	; 8
     d90:	50 e0       	ldi	r21, 0x00	; 0
     d92:	20 e5       	ldi	r18, 0x50	; 80
     d94:	30 e0       	ldi	r19, 0x00	; 0
     d96:	84 1b       	sub	r24, r20
     d98:	95 0b       	sbc	r25, r21
     d9a:	28 17       	cp	r18, r24
     d9c:	39 07       	cpc	r19, r25
     d9e:	08 f4       	brcc	.+2      	; 0xda2 <__vector_39+0x56>
     da0:	72 c0       	rjmp	.+228    	; 0xe86 <__vector_39+0x13a>
     da2:	8e 58       	subi	r24, 0x8E	; 142
     da4:	9f 4f       	sbci	r25, 0xFF	; 255
     da6:	fc 01       	movw	r30, r24
     da8:	f4 c2       	rjmp	.+1512   	; 0x1392 <__tablejump2__>
     daa:	10 92 2a 02 	sts	0x022A, r1
     dae:	90 91 2a 02 	lds	r25, 0x022A
     db2:	80 91 28 02 	lds	r24, 0x0228
     db6:	98 17       	cp	r25, r24
     db8:	b0 f4       	brcc	.+44     	; 0xde6 <__vector_39+0x9a>
     dba:	8b eb       	ldi	r24, 0xBB	; 187
     dbc:	90 e0       	ldi	r25, 0x00	; 0
     dbe:	20 91 2a 02 	lds	r18, 0x022A
     dc2:	31 e0       	ldi	r19, 0x01	; 1
     dc4:	32 0f       	add	r19, r18
     dc6:	30 93 2a 02 	sts	0x022A, r19
     dca:	22 2f       	mov	r18, r18
     dcc:	30 e0       	ldi	r19, 0x00	; 0
     dce:	2c 5d       	subi	r18, 0xDC	; 220
     dd0:	3d 4f       	sbci	r19, 0xFD	; 253
     dd2:	f9 01       	movw	r30, r18
     dd4:	20 81       	ld	r18, Z
     dd6:	fc 01       	movw	r30, r24
     dd8:	20 83       	st	Z, r18
     dda:	8c eb       	ldi	r24, 0xBC	; 188
     ddc:	90 e0       	ldi	r25, 0x00	; 0
     dde:	25 e8       	ldi	r18, 0x85	; 133
     de0:	fc 01       	movw	r30, r24
     de2:	20 83       	st	Z, r18
     de4:	5b c0       	rjmp	.+182    	; 0xe9c <__vector_39+0x150>
     de6:	80 91 29 02 	lds	r24, 0x0229
     dea:	81 60       	ori	r24, 0x01	; 1
     dec:	80 93 29 02 	sts	0x0229, r24
     df0:	8c eb       	ldi	r24, 0xBC	; 188
     df2:	90 e0       	ldi	r25, 0x00	; 0
     df4:	24 e9       	ldi	r18, 0x94	; 148
     df6:	fc 01       	movw	r30, r24
     df8:	20 83       	st	Z, r18
     dfa:	50 c0       	rjmp	.+160    	; 0xe9c <__vector_39+0x150>
     dfc:	80 91 2a 02 	lds	r24, 0x022A
     e00:	91 e0       	ldi	r25, 0x01	; 1
     e02:	98 0f       	add	r25, r24
     e04:	90 93 2a 02 	sts	0x022A, r25
     e08:	88 2f       	mov	r24, r24
     e0a:	90 e0       	ldi	r25, 0x00	; 0
     e0c:	2b eb       	ldi	r18, 0xBB	; 187
     e0e:	30 e0       	ldi	r19, 0x00	; 0
     e10:	f9 01       	movw	r30, r18
     e12:	20 81       	ld	r18, Z
     e14:	8c 5d       	subi	r24, 0xDC	; 220
     e16:	9d 4f       	sbci	r25, 0xFD	; 253
     e18:	fc 01       	movw	r30, r24
     e1a:	20 83       	st	Z, r18
     e1c:	80 91 2a 02 	lds	r24, 0x022A
     e20:	28 2f       	mov	r18, r24
     e22:	30 e0       	ldi	r19, 0x00	; 0
     e24:	80 91 28 02 	lds	r24, 0x0228
     e28:	88 2f       	mov	r24, r24
     e2a:	90 e0       	ldi	r25, 0x00	; 0
     e2c:	01 97       	sbiw	r24, 0x01	; 1
     e2e:	28 17       	cp	r18, r24
     e30:	39 07       	cpc	r19, r25
     e32:	34 f4       	brge	.+12     	; 0xe40 <__vector_39+0xf4>
     e34:	8c eb       	ldi	r24, 0xBC	; 188
     e36:	90 e0       	ldi	r25, 0x00	; 0
     e38:	25 ec       	ldi	r18, 0xC5	; 197
     e3a:	fc 01       	movw	r30, r24
     e3c:	20 83       	st	Z, r18
     e3e:	2e c0       	rjmp	.+92     	; 0xe9c <__vector_39+0x150>
     e40:	8c eb       	ldi	r24, 0xBC	; 188
     e42:	90 e0       	ldi	r25, 0x00	; 0
     e44:	25 e8       	ldi	r18, 0x85	; 133
     e46:	fc 01       	movw	r30, r24
     e48:	20 83       	st	Z, r18
     e4a:	28 c0       	rjmp	.+80     	; 0xe9c <__vector_39+0x150>
     e4c:	80 91 2a 02 	lds	r24, 0x022A
     e50:	88 2f       	mov	r24, r24
     e52:	90 e0       	ldi	r25, 0x00	; 0
     e54:	2b eb       	ldi	r18, 0xBB	; 187
     e56:	30 e0       	ldi	r19, 0x00	; 0
     e58:	f9 01       	movw	r30, r18
     e5a:	20 81       	ld	r18, Z
     e5c:	8c 5d       	subi	r24, 0xDC	; 220
     e5e:	9d 4f       	sbci	r25, 0xFD	; 253
     e60:	fc 01       	movw	r30, r24
     e62:	20 83       	st	Z, r18
     e64:	80 91 29 02 	lds	r24, 0x0229
     e68:	81 60       	ori	r24, 0x01	; 1
     e6a:	80 93 29 02 	sts	0x0229, r24
     e6e:	8c eb       	ldi	r24, 0xBC	; 188
     e70:	90 e0       	ldi	r25, 0x00	; 0
     e72:	24 e9       	ldi	r18, 0x94	; 148
     e74:	fc 01       	movw	r30, r24
     e76:	20 83       	st	Z, r18
     e78:	11 c0       	rjmp	.+34     	; 0xe9c <__vector_39+0x150>
     e7a:	8c eb       	ldi	r24, 0xBC	; 188
     e7c:	90 e0       	ldi	r25, 0x00	; 0
     e7e:	25 ea       	ldi	r18, 0xA5	; 165
     e80:	fc 01       	movw	r30, r24
     e82:	20 83       	st	Z, r18
     e84:	0b c0       	rjmp	.+22     	; 0xe9c <__vector_39+0x150>
     e86:	89 eb       	ldi	r24, 0xB9	; 185
     e88:	90 e0       	ldi	r25, 0x00	; 0
     e8a:	fc 01       	movw	r30, r24
     e8c:	80 81       	ld	r24, Z
     e8e:	80 93 06 02 	sts	0x0206, r24
     e92:	8c eb       	ldi	r24, 0xBC	; 188
     e94:	90 e0       	ldi	r25, 0x00	; 0
     e96:	24 e0       	ldi	r18, 0x04	; 4
     e98:	fc 01       	movw	r30, r24
     e9a:	20 83       	st	Z, r18
     e9c:	df 91       	pop	r29
     e9e:	cf 91       	pop	r28
     ea0:	ff 91       	pop	r31
     ea2:	ef 91       	pop	r30
     ea4:	bf 91       	pop	r27
     ea6:	af 91       	pop	r26
     ea8:	9f 91       	pop	r25
     eaa:	8f 91       	pop	r24
     eac:	5f 91       	pop	r21
     eae:	4f 91       	pop	r20
     eb0:	3f 91       	pop	r19
     eb2:	2f 91       	pop	r18
     eb4:	0f 90       	pop	r0
     eb6:	00 92 5b 00 	sts	0x005B, r0
     eba:	0f 90       	pop	r0
     ebc:	00 92 5f 00 	sts	0x005F, r0
     ec0:	0f 90       	pop	r0
     ec2:	1f 90       	pop	r1
     ec4:	18 95       	reti

00000ec6 <UART_Init>:
     ec6:	cf 93       	push	r28
     ec8:	df 93       	push	r29
     eca:	1f 92       	push	r1
     ecc:	1f 92       	push	r1
     ece:	cd b7       	in	r28, 0x3d	; 61
     ed0:	de b7       	in	r29, 0x3e	; 62
     ed2:	9a 83       	std	Y+2, r25	; 0x02
     ed4:	89 83       	std	Y+1, r24	; 0x01
     ed6:	85 ec       	ldi	r24, 0xC5	; 197
     ed8:	90 e0       	ldi	r25, 0x00	; 0
     eda:	29 81       	ldd	r18, Y+1	; 0x01
     edc:	3a 81       	ldd	r19, Y+2	; 0x02
     ede:	23 2f       	mov	r18, r19
     ee0:	33 27       	eor	r19, r19
     ee2:	fc 01       	movw	r30, r24
     ee4:	20 83       	st	Z, r18
     ee6:	84 ec       	ldi	r24, 0xC4	; 196
     ee8:	90 e0       	ldi	r25, 0x00	; 0
     eea:	29 81       	ldd	r18, Y+1	; 0x01
     eec:	fc 01       	movw	r30, r24
     eee:	20 83       	st	Z, r18
     ef0:	81 ec       	ldi	r24, 0xC1	; 193
     ef2:	90 e0       	ldi	r25, 0x00	; 0
     ef4:	28 e1       	ldi	r18, 0x18	; 24
     ef6:	fc 01       	movw	r30, r24
     ef8:	20 83       	st	Z, r18
     efa:	61 ea       	ldi	r22, 0xA1	; 161
     efc:	77 e0       	ldi	r23, 0x07	; 7
     efe:	87 e8       	ldi	r24, 0x87	; 135
     f00:	97 e0       	ldi	r25, 0x07	; 7
     f02:	4d d2       	rcall	.+1178   	; 0x139e <fdevopen>
     f04:	0f 90       	pop	r0
     f06:	0f 90       	pop	r0
     f08:	df 91       	pop	r29
     f0a:	cf 91       	pop	r28
     f0c:	08 95       	ret

00000f0e <UART_Transmit>:
     f0e:	cf 93       	push	r28
     f10:	df 93       	push	r29
     f12:	1f 92       	push	r1
     f14:	cd b7       	in	r28, 0x3d	; 61
     f16:	de b7       	in	r29, 0x3e	; 62
     f18:	89 83       	std	Y+1, r24	; 0x01
     f1a:	00 00       	nop
     f1c:	80 ec       	ldi	r24, 0xC0	; 192
     f1e:	90 e0       	ldi	r25, 0x00	; 0
     f20:	fc 01       	movw	r30, r24
     f22:	80 81       	ld	r24, Z
     f24:	88 2f       	mov	r24, r24
     f26:	90 e0       	ldi	r25, 0x00	; 0
     f28:	80 72       	andi	r24, 0x20	; 32
     f2a:	99 27       	eor	r25, r25
     f2c:	00 97       	sbiw	r24, 0x00	; 0
     f2e:	b1 f3       	breq	.-20     	; 0xf1c <UART_Transmit+0xe>
     f30:	86 ec       	ldi	r24, 0xC6	; 198
     f32:	90 e0       	ldi	r25, 0x00	; 0
     f34:	29 81       	ldd	r18, Y+1	; 0x01
     f36:	fc 01       	movw	r30, r24
     f38:	20 83       	st	Z, r18
     f3a:	0f 90       	pop	r0
     f3c:	df 91       	pop	r29
     f3e:	cf 91       	pop	r28
     f40:	08 95       	ret

00000f42 <UART_Receive>:
     f42:	cf 93       	push	r28
     f44:	df 93       	push	r29
     f46:	cd b7       	in	r28, 0x3d	; 61
     f48:	de b7       	in	r29, 0x3e	; 62
     f4a:	00 00       	nop
     f4c:	80 ec       	ldi	r24, 0xC0	; 192
     f4e:	90 e0       	ldi	r25, 0x00	; 0
     f50:	fc 01       	movw	r30, r24
     f52:	80 81       	ld	r24, Z
     f54:	88 23       	and	r24, r24
     f56:	d4 f7       	brge	.-12     	; 0xf4c <UART_Receive+0xa>
     f58:	86 ec       	ldi	r24, 0xC6	; 198
     f5a:	90 e0       	ldi	r25, 0x00	; 0
     f5c:	fc 01       	movw	r30, r24
     f5e:	80 81       	ld	r24, Z
     f60:	df 91       	pop	r29
     f62:	cf 91       	pop	r28
     f64:	08 95       	ret

00000f66 <__subsf3>:
     f66:	50 58       	subi	r21, 0x80	; 128

00000f68 <__addsf3>:
     f68:	bb 27       	eor	r27, r27
     f6a:	aa 27       	eor	r26, r26
     f6c:	0e d0       	rcall	.+28     	; 0xf8a <__addsf3x>
     f6e:	70 c1       	rjmp	.+736    	; 0x1250 <__fp_round>
     f70:	61 d1       	rcall	.+706    	; 0x1234 <__fp_pscA>
     f72:	30 f0       	brcs	.+12     	; 0xf80 <__addsf3+0x18>
     f74:	66 d1       	rcall	.+716    	; 0x1242 <__fp_pscB>
     f76:	20 f0       	brcs	.+8      	; 0xf80 <__addsf3+0x18>
     f78:	31 f4       	brne	.+12     	; 0xf86 <__addsf3+0x1e>
     f7a:	9f 3f       	cpi	r25, 0xFF	; 255
     f7c:	11 f4       	brne	.+4      	; 0xf82 <__addsf3+0x1a>
     f7e:	1e f4       	brtc	.+6      	; 0xf86 <__addsf3+0x1e>
     f80:	56 c1       	rjmp	.+684    	; 0x122e <__fp_nan>
     f82:	0e f4       	brtc	.+2      	; 0xf86 <__addsf3+0x1e>
     f84:	e0 95       	com	r30
     f86:	e7 fb       	bst	r30, 7
     f88:	4c c1       	rjmp	.+664    	; 0x1222 <__fp_inf>

00000f8a <__addsf3x>:
     f8a:	e9 2f       	mov	r30, r25
     f8c:	72 d1       	rcall	.+740    	; 0x1272 <__fp_split3>
     f8e:	80 f3       	brcs	.-32     	; 0xf70 <__addsf3+0x8>
     f90:	ba 17       	cp	r27, r26
     f92:	62 07       	cpc	r22, r18
     f94:	73 07       	cpc	r23, r19
     f96:	84 07       	cpc	r24, r20
     f98:	95 07       	cpc	r25, r21
     f9a:	18 f0       	brcs	.+6      	; 0xfa2 <__addsf3x+0x18>
     f9c:	71 f4       	brne	.+28     	; 0xfba <__addsf3x+0x30>
     f9e:	9e f5       	brtc	.+102    	; 0x1006 <__addsf3x+0x7c>
     fa0:	8a c1       	rjmp	.+788    	; 0x12b6 <__fp_zero>
     fa2:	0e f4       	brtc	.+2      	; 0xfa6 <__addsf3x+0x1c>
     fa4:	e0 95       	com	r30
     fa6:	0b 2e       	mov	r0, r27
     fa8:	ba 2f       	mov	r27, r26
     faa:	a0 2d       	mov	r26, r0
     fac:	0b 01       	movw	r0, r22
     fae:	b9 01       	movw	r22, r18
     fb0:	90 01       	movw	r18, r0
     fb2:	0c 01       	movw	r0, r24
     fb4:	ca 01       	movw	r24, r20
     fb6:	a0 01       	movw	r20, r0
     fb8:	11 24       	eor	r1, r1
     fba:	ff 27       	eor	r31, r31
     fbc:	59 1b       	sub	r21, r25
     fbe:	99 f0       	breq	.+38     	; 0xfe6 <__addsf3x+0x5c>
     fc0:	59 3f       	cpi	r21, 0xF9	; 249
     fc2:	50 f4       	brcc	.+20     	; 0xfd8 <__addsf3x+0x4e>
     fc4:	50 3e       	cpi	r21, 0xE0	; 224
     fc6:	68 f1       	brcs	.+90     	; 0x1022 <__addsf3x+0x98>
     fc8:	1a 16       	cp	r1, r26
     fca:	f0 40       	sbci	r31, 0x00	; 0
     fcc:	a2 2f       	mov	r26, r18
     fce:	23 2f       	mov	r18, r19
     fd0:	34 2f       	mov	r19, r20
     fd2:	44 27       	eor	r20, r20
     fd4:	58 5f       	subi	r21, 0xF8	; 248
     fd6:	f3 cf       	rjmp	.-26     	; 0xfbe <__addsf3x+0x34>
     fd8:	46 95       	lsr	r20
     fda:	37 95       	ror	r19
     fdc:	27 95       	ror	r18
     fde:	a7 95       	ror	r26
     fe0:	f0 40       	sbci	r31, 0x00	; 0
     fe2:	53 95       	inc	r21
     fe4:	c9 f7       	brne	.-14     	; 0xfd8 <__addsf3x+0x4e>
     fe6:	7e f4       	brtc	.+30     	; 0x1006 <__addsf3x+0x7c>
     fe8:	1f 16       	cp	r1, r31
     fea:	ba 0b       	sbc	r27, r26
     fec:	62 0b       	sbc	r22, r18
     fee:	73 0b       	sbc	r23, r19
     ff0:	84 0b       	sbc	r24, r20
     ff2:	ba f0       	brmi	.+46     	; 0x1022 <__addsf3x+0x98>
     ff4:	91 50       	subi	r25, 0x01	; 1
     ff6:	a1 f0       	breq	.+40     	; 0x1020 <__addsf3x+0x96>
     ff8:	ff 0f       	add	r31, r31
     ffa:	bb 1f       	adc	r27, r27
     ffc:	66 1f       	adc	r22, r22
     ffe:	77 1f       	adc	r23, r23
    1000:	88 1f       	adc	r24, r24
    1002:	c2 f7       	brpl	.-16     	; 0xff4 <__addsf3x+0x6a>
    1004:	0e c0       	rjmp	.+28     	; 0x1022 <__addsf3x+0x98>
    1006:	ba 0f       	add	r27, r26
    1008:	62 1f       	adc	r22, r18
    100a:	73 1f       	adc	r23, r19
    100c:	84 1f       	adc	r24, r20
    100e:	48 f4       	brcc	.+18     	; 0x1022 <__addsf3x+0x98>
    1010:	87 95       	ror	r24
    1012:	77 95       	ror	r23
    1014:	67 95       	ror	r22
    1016:	b7 95       	ror	r27
    1018:	f7 95       	ror	r31
    101a:	9e 3f       	cpi	r25, 0xFE	; 254
    101c:	08 f0       	brcs	.+2      	; 0x1020 <__addsf3x+0x96>
    101e:	b3 cf       	rjmp	.-154    	; 0xf86 <__addsf3+0x1e>
    1020:	93 95       	inc	r25
    1022:	88 0f       	add	r24, r24
    1024:	08 f0       	brcs	.+2      	; 0x1028 <__addsf3x+0x9e>
    1026:	99 27       	eor	r25, r25
    1028:	ee 0f       	add	r30, r30
    102a:	97 95       	ror	r25
    102c:	87 95       	ror	r24
    102e:	08 95       	ret

00001030 <__cmpsf2>:
    1030:	d4 d0       	rcall	.+424    	; 0x11da <__fp_cmp>
    1032:	08 f4       	brcc	.+2      	; 0x1036 <__cmpsf2+0x6>
    1034:	81 e0       	ldi	r24, 0x01	; 1
    1036:	08 95       	ret

00001038 <__divsf3>:
    1038:	0c d0       	rcall	.+24     	; 0x1052 <__divsf3x>
    103a:	0a c1       	rjmp	.+532    	; 0x1250 <__fp_round>
    103c:	02 d1       	rcall	.+516    	; 0x1242 <__fp_pscB>
    103e:	40 f0       	brcs	.+16     	; 0x1050 <__divsf3+0x18>
    1040:	f9 d0       	rcall	.+498    	; 0x1234 <__fp_pscA>
    1042:	30 f0       	brcs	.+12     	; 0x1050 <__divsf3+0x18>
    1044:	21 f4       	brne	.+8      	; 0x104e <__divsf3+0x16>
    1046:	5f 3f       	cpi	r21, 0xFF	; 255
    1048:	19 f0       	breq	.+6      	; 0x1050 <__divsf3+0x18>
    104a:	eb c0       	rjmp	.+470    	; 0x1222 <__fp_inf>
    104c:	51 11       	cpse	r21, r1
    104e:	34 c1       	rjmp	.+616    	; 0x12b8 <__fp_szero>
    1050:	ee c0       	rjmp	.+476    	; 0x122e <__fp_nan>

00001052 <__divsf3x>:
    1052:	0f d1       	rcall	.+542    	; 0x1272 <__fp_split3>
    1054:	98 f3       	brcs	.-26     	; 0x103c <__divsf3+0x4>

00001056 <__divsf3_pse>:
    1056:	99 23       	and	r25, r25
    1058:	c9 f3       	breq	.-14     	; 0x104c <__divsf3+0x14>
    105a:	55 23       	and	r21, r21
    105c:	b1 f3       	breq	.-20     	; 0x104a <__divsf3+0x12>
    105e:	95 1b       	sub	r25, r21
    1060:	55 0b       	sbc	r21, r21
    1062:	bb 27       	eor	r27, r27
    1064:	aa 27       	eor	r26, r26
    1066:	62 17       	cp	r22, r18
    1068:	73 07       	cpc	r23, r19
    106a:	84 07       	cpc	r24, r20
    106c:	38 f0       	brcs	.+14     	; 0x107c <__divsf3_pse+0x26>
    106e:	9f 5f       	subi	r25, 0xFF	; 255
    1070:	5f 4f       	sbci	r21, 0xFF	; 255
    1072:	22 0f       	add	r18, r18
    1074:	33 1f       	adc	r19, r19
    1076:	44 1f       	adc	r20, r20
    1078:	aa 1f       	adc	r26, r26
    107a:	a9 f3       	breq	.-22     	; 0x1066 <__divsf3_pse+0x10>
    107c:	33 d0       	rcall	.+102    	; 0x10e4 <__divsf3_pse+0x8e>
    107e:	0e 2e       	mov	r0, r30
    1080:	3a f0       	brmi	.+14     	; 0x1090 <__divsf3_pse+0x3a>
    1082:	e0 e8       	ldi	r30, 0x80	; 128
    1084:	30 d0       	rcall	.+96     	; 0x10e6 <__divsf3_pse+0x90>
    1086:	91 50       	subi	r25, 0x01	; 1
    1088:	50 40       	sbci	r21, 0x00	; 0
    108a:	e6 95       	lsr	r30
    108c:	00 1c       	adc	r0, r0
    108e:	ca f7       	brpl	.-14     	; 0x1082 <__divsf3_pse+0x2c>
    1090:	29 d0       	rcall	.+82     	; 0x10e4 <__divsf3_pse+0x8e>
    1092:	fe 2f       	mov	r31, r30
    1094:	27 d0       	rcall	.+78     	; 0x10e4 <__divsf3_pse+0x8e>
    1096:	66 0f       	add	r22, r22
    1098:	77 1f       	adc	r23, r23
    109a:	88 1f       	adc	r24, r24
    109c:	bb 1f       	adc	r27, r27
    109e:	26 17       	cp	r18, r22
    10a0:	37 07       	cpc	r19, r23
    10a2:	48 07       	cpc	r20, r24
    10a4:	ab 07       	cpc	r26, r27
    10a6:	b0 e8       	ldi	r27, 0x80	; 128
    10a8:	09 f0       	breq	.+2      	; 0x10ac <__divsf3_pse+0x56>
    10aa:	bb 0b       	sbc	r27, r27
    10ac:	80 2d       	mov	r24, r0
    10ae:	bf 01       	movw	r22, r30
    10b0:	ff 27       	eor	r31, r31
    10b2:	93 58       	subi	r25, 0x83	; 131
    10b4:	5f 4f       	sbci	r21, 0xFF	; 255
    10b6:	2a f0       	brmi	.+10     	; 0x10c2 <__divsf3_pse+0x6c>
    10b8:	9e 3f       	cpi	r25, 0xFE	; 254
    10ba:	51 05       	cpc	r21, r1
    10bc:	68 f0       	brcs	.+26     	; 0x10d8 <__divsf3_pse+0x82>
    10be:	b1 c0       	rjmp	.+354    	; 0x1222 <__fp_inf>
    10c0:	fb c0       	rjmp	.+502    	; 0x12b8 <__fp_szero>
    10c2:	5f 3f       	cpi	r21, 0xFF	; 255
    10c4:	ec f3       	brlt	.-6      	; 0x10c0 <__divsf3_pse+0x6a>
    10c6:	98 3e       	cpi	r25, 0xE8	; 232
    10c8:	dc f3       	brlt	.-10     	; 0x10c0 <__divsf3_pse+0x6a>
    10ca:	86 95       	lsr	r24
    10cc:	77 95       	ror	r23
    10ce:	67 95       	ror	r22
    10d0:	b7 95       	ror	r27
    10d2:	f7 95       	ror	r31
    10d4:	9f 5f       	subi	r25, 0xFF	; 255
    10d6:	c9 f7       	brne	.-14     	; 0x10ca <__divsf3_pse+0x74>
    10d8:	88 0f       	add	r24, r24
    10da:	91 1d       	adc	r25, r1
    10dc:	96 95       	lsr	r25
    10de:	87 95       	ror	r24
    10e0:	97 f9       	bld	r25, 7
    10e2:	08 95       	ret
    10e4:	e1 e0       	ldi	r30, 0x01	; 1
    10e6:	66 0f       	add	r22, r22
    10e8:	77 1f       	adc	r23, r23
    10ea:	88 1f       	adc	r24, r24
    10ec:	bb 1f       	adc	r27, r27
    10ee:	62 17       	cp	r22, r18
    10f0:	73 07       	cpc	r23, r19
    10f2:	84 07       	cpc	r24, r20
    10f4:	ba 07       	cpc	r27, r26
    10f6:	20 f0       	brcs	.+8      	; 0x1100 <__divsf3_pse+0xaa>
    10f8:	62 1b       	sub	r22, r18
    10fa:	73 0b       	sbc	r23, r19
    10fc:	84 0b       	sbc	r24, r20
    10fe:	ba 0b       	sbc	r27, r26
    1100:	ee 1f       	adc	r30, r30
    1102:	88 f7       	brcc	.-30     	; 0x10e6 <__divsf3_pse+0x90>
    1104:	e0 95       	com	r30
    1106:	08 95       	ret

00001108 <__fixunssfsi>:
    1108:	bc d0       	rcall	.+376    	; 0x1282 <__fp_splitA>
    110a:	88 f0       	brcs	.+34     	; 0x112e <__fixunssfsi+0x26>
    110c:	9f 57       	subi	r25, 0x7F	; 127
    110e:	90 f0       	brcs	.+36     	; 0x1134 <__fixunssfsi+0x2c>
    1110:	b9 2f       	mov	r27, r25
    1112:	99 27       	eor	r25, r25
    1114:	b7 51       	subi	r27, 0x17	; 23
    1116:	a0 f0       	brcs	.+40     	; 0x1140 <__fixunssfsi+0x38>
    1118:	d1 f0       	breq	.+52     	; 0x114e <__fixunssfsi+0x46>
    111a:	66 0f       	add	r22, r22
    111c:	77 1f       	adc	r23, r23
    111e:	88 1f       	adc	r24, r24
    1120:	99 1f       	adc	r25, r25
    1122:	1a f0       	brmi	.+6      	; 0x112a <__fixunssfsi+0x22>
    1124:	ba 95       	dec	r27
    1126:	c9 f7       	brne	.-14     	; 0x111a <__fixunssfsi+0x12>
    1128:	12 c0       	rjmp	.+36     	; 0x114e <__fixunssfsi+0x46>
    112a:	b1 30       	cpi	r27, 0x01	; 1
    112c:	81 f0       	breq	.+32     	; 0x114e <__fixunssfsi+0x46>
    112e:	c3 d0       	rcall	.+390    	; 0x12b6 <__fp_zero>
    1130:	b1 e0       	ldi	r27, 0x01	; 1
    1132:	08 95       	ret
    1134:	c0 c0       	rjmp	.+384    	; 0x12b6 <__fp_zero>
    1136:	67 2f       	mov	r22, r23
    1138:	78 2f       	mov	r23, r24
    113a:	88 27       	eor	r24, r24
    113c:	b8 5f       	subi	r27, 0xF8	; 248
    113e:	39 f0       	breq	.+14     	; 0x114e <__fixunssfsi+0x46>
    1140:	b9 3f       	cpi	r27, 0xF9	; 249
    1142:	cc f3       	brlt	.-14     	; 0x1136 <__fixunssfsi+0x2e>
    1144:	86 95       	lsr	r24
    1146:	77 95       	ror	r23
    1148:	67 95       	ror	r22
    114a:	b3 95       	inc	r27
    114c:	d9 f7       	brne	.-10     	; 0x1144 <__fixunssfsi+0x3c>
    114e:	3e f4       	brtc	.+14     	; 0x115e <__fixunssfsi+0x56>
    1150:	90 95       	com	r25
    1152:	80 95       	com	r24
    1154:	70 95       	com	r23
    1156:	61 95       	neg	r22
    1158:	7f 4f       	sbci	r23, 0xFF	; 255
    115a:	8f 4f       	sbci	r24, 0xFF	; 255
    115c:	9f 4f       	sbci	r25, 0xFF	; 255
    115e:	08 95       	ret

00001160 <__floatunsisf>:
    1160:	e8 94       	clt
    1162:	09 c0       	rjmp	.+18     	; 0x1176 <__floatsisf+0x12>

00001164 <__floatsisf>:
    1164:	97 fb       	bst	r25, 7
    1166:	3e f4       	brtc	.+14     	; 0x1176 <__floatsisf+0x12>
    1168:	90 95       	com	r25
    116a:	80 95       	com	r24
    116c:	70 95       	com	r23
    116e:	61 95       	neg	r22
    1170:	7f 4f       	sbci	r23, 0xFF	; 255
    1172:	8f 4f       	sbci	r24, 0xFF	; 255
    1174:	9f 4f       	sbci	r25, 0xFF	; 255
    1176:	99 23       	and	r25, r25
    1178:	a9 f0       	breq	.+42     	; 0x11a4 <__floatsisf+0x40>
    117a:	f9 2f       	mov	r31, r25
    117c:	96 e9       	ldi	r25, 0x96	; 150
    117e:	bb 27       	eor	r27, r27
    1180:	93 95       	inc	r25
    1182:	f6 95       	lsr	r31
    1184:	87 95       	ror	r24
    1186:	77 95       	ror	r23
    1188:	67 95       	ror	r22
    118a:	b7 95       	ror	r27
    118c:	f1 11       	cpse	r31, r1
    118e:	f8 cf       	rjmp	.-16     	; 0x1180 <__floatsisf+0x1c>
    1190:	fa f4       	brpl	.+62     	; 0x11d0 <__floatsisf+0x6c>
    1192:	bb 0f       	add	r27, r27
    1194:	11 f4       	brne	.+4      	; 0x119a <__floatsisf+0x36>
    1196:	60 ff       	sbrs	r22, 0
    1198:	1b c0       	rjmp	.+54     	; 0x11d0 <__floatsisf+0x6c>
    119a:	6f 5f       	subi	r22, 0xFF	; 255
    119c:	7f 4f       	sbci	r23, 0xFF	; 255
    119e:	8f 4f       	sbci	r24, 0xFF	; 255
    11a0:	9f 4f       	sbci	r25, 0xFF	; 255
    11a2:	16 c0       	rjmp	.+44     	; 0x11d0 <__floatsisf+0x6c>
    11a4:	88 23       	and	r24, r24
    11a6:	11 f0       	breq	.+4      	; 0x11ac <__floatsisf+0x48>
    11a8:	96 e9       	ldi	r25, 0x96	; 150
    11aa:	11 c0       	rjmp	.+34     	; 0x11ce <__floatsisf+0x6a>
    11ac:	77 23       	and	r23, r23
    11ae:	21 f0       	breq	.+8      	; 0x11b8 <__floatsisf+0x54>
    11b0:	9e e8       	ldi	r25, 0x8E	; 142
    11b2:	87 2f       	mov	r24, r23
    11b4:	76 2f       	mov	r23, r22
    11b6:	05 c0       	rjmp	.+10     	; 0x11c2 <__floatsisf+0x5e>
    11b8:	66 23       	and	r22, r22
    11ba:	71 f0       	breq	.+28     	; 0x11d8 <__floatsisf+0x74>
    11bc:	96 e8       	ldi	r25, 0x86	; 134
    11be:	86 2f       	mov	r24, r22
    11c0:	70 e0       	ldi	r23, 0x00	; 0
    11c2:	60 e0       	ldi	r22, 0x00	; 0
    11c4:	2a f0       	brmi	.+10     	; 0x11d0 <__floatsisf+0x6c>
    11c6:	9a 95       	dec	r25
    11c8:	66 0f       	add	r22, r22
    11ca:	77 1f       	adc	r23, r23
    11cc:	88 1f       	adc	r24, r24
    11ce:	da f7       	brpl	.-10     	; 0x11c6 <__floatsisf+0x62>
    11d0:	88 0f       	add	r24, r24
    11d2:	96 95       	lsr	r25
    11d4:	87 95       	ror	r24
    11d6:	97 f9       	bld	r25, 7
    11d8:	08 95       	ret

000011da <__fp_cmp>:
    11da:	99 0f       	add	r25, r25
    11dc:	00 08       	sbc	r0, r0
    11de:	55 0f       	add	r21, r21
    11e0:	aa 0b       	sbc	r26, r26
    11e2:	e0 e8       	ldi	r30, 0x80	; 128
    11e4:	fe ef       	ldi	r31, 0xFE	; 254
    11e6:	16 16       	cp	r1, r22
    11e8:	17 06       	cpc	r1, r23
    11ea:	e8 07       	cpc	r30, r24
    11ec:	f9 07       	cpc	r31, r25
    11ee:	c0 f0       	brcs	.+48     	; 0x1220 <__fp_cmp+0x46>
    11f0:	12 16       	cp	r1, r18
    11f2:	13 06       	cpc	r1, r19
    11f4:	e4 07       	cpc	r30, r20
    11f6:	f5 07       	cpc	r31, r21
    11f8:	98 f0       	brcs	.+38     	; 0x1220 <__fp_cmp+0x46>
    11fa:	62 1b       	sub	r22, r18
    11fc:	73 0b       	sbc	r23, r19
    11fe:	84 0b       	sbc	r24, r20
    1200:	95 0b       	sbc	r25, r21
    1202:	39 f4       	brne	.+14     	; 0x1212 <__fp_cmp+0x38>
    1204:	0a 26       	eor	r0, r26
    1206:	61 f0       	breq	.+24     	; 0x1220 <__fp_cmp+0x46>
    1208:	23 2b       	or	r18, r19
    120a:	24 2b       	or	r18, r20
    120c:	25 2b       	or	r18, r21
    120e:	21 f4       	brne	.+8      	; 0x1218 <__fp_cmp+0x3e>
    1210:	08 95       	ret
    1212:	0a 26       	eor	r0, r26
    1214:	09 f4       	brne	.+2      	; 0x1218 <__fp_cmp+0x3e>
    1216:	a1 40       	sbci	r26, 0x01	; 1
    1218:	a6 95       	lsr	r26
    121a:	8f ef       	ldi	r24, 0xFF	; 255
    121c:	81 1d       	adc	r24, r1
    121e:	81 1d       	adc	r24, r1
    1220:	08 95       	ret

00001222 <__fp_inf>:
    1222:	97 f9       	bld	r25, 7
    1224:	9f 67       	ori	r25, 0x7F	; 127
    1226:	80 e8       	ldi	r24, 0x80	; 128
    1228:	70 e0       	ldi	r23, 0x00	; 0
    122a:	60 e0       	ldi	r22, 0x00	; 0
    122c:	08 95       	ret

0000122e <__fp_nan>:
    122e:	9f ef       	ldi	r25, 0xFF	; 255
    1230:	80 ec       	ldi	r24, 0xC0	; 192
    1232:	08 95       	ret

00001234 <__fp_pscA>:
    1234:	00 24       	eor	r0, r0
    1236:	0a 94       	dec	r0
    1238:	16 16       	cp	r1, r22
    123a:	17 06       	cpc	r1, r23
    123c:	18 06       	cpc	r1, r24
    123e:	09 06       	cpc	r0, r25
    1240:	08 95       	ret

00001242 <__fp_pscB>:
    1242:	00 24       	eor	r0, r0
    1244:	0a 94       	dec	r0
    1246:	12 16       	cp	r1, r18
    1248:	13 06       	cpc	r1, r19
    124a:	14 06       	cpc	r1, r20
    124c:	05 06       	cpc	r0, r21
    124e:	08 95       	ret

00001250 <__fp_round>:
    1250:	09 2e       	mov	r0, r25
    1252:	03 94       	inc	r0
    1254:	00 0c       	add	r0, r0
    1256:	11 f4       	brne	.+4      	; 0x125c <__fp_round+0xc>
    1258:	88 23       	and	r24, r24
    125a:	52 f0       	brmi	.+20     	; 0x1270 <__fp_round+0x20>
    125c:	bb 0f       	add	r27, r27
    125e:	40 f4       	brcc	.+16     	; 0x1270 <__fp_round+0x20>
    1260:	bf 2b       	or	r27, r31
    1262:	11 f4       	brne	.+4      	; 0x1268 <__fp_round+0x18>
    1264:	60 ff       	sbrs	r22, 0
    1266:	04 c0       	rjmp	.+8      	; 0x1270 <__fp_round+0x20>
    1268:	6f 5f       	subi	r22, 0xFF	; 255
    126a:	7f 4f       	sbci	r23, 0xFF	; 255
    126c:	8f 4f       	sbci	r24, 0xFF	; 255
    126e:	9f 4f       	sbci	r25, 0xFF	; 255
    1270:	08 95       	ret

00001272 <__fp_split3>:
    1272:	57 fd       	sbrc	r21, 7
    1274:	90 58       	subi	r25, 0x80	; 128
    1276:	44 0f       	add	r20, r20
    1278:	55 1f       	adc	r21, r21
    127a:	59 f0       	breq	.+22     	; 0x1292 <__fp_splitA+0x10>
    127c:	5f 3f       	cpi	r21, 0xFF	; 255
    127e:	71 f0       	breq	.+28     	; 0x129c <__fp_splitA+0x1a>
    1280:	47 95       	ror	r20

00001282 <__fp_splitA>:
    1282:	88 0f       	add	r24, r24
    1284:	97 fb       	bst	r25, 7
    1286:	99 1f       	adc	r25, r25
    1288:	61 f0       	breq	.+24     	; 0x12a2 <__fp_splitA+0x20>
    128a:	9f 3f       	cpi	r25, 0xFF	; 255
    128c:	79 f0       	breq	.+30     	; 0x12ac <__fp_splitA+0x2a>
    128e:	87 95       	ror	r24
    1290:	08 95       	ret
    1292:	12 16       	cp	r1, r18
    1294:	13 06       	cpc	r1, r19
    1296:	14 06       	cpc	r1, r20
    1298:	55 1f       	adc	r21, r21
    129a:	f2 cf       	rjmp	.-28     	; 0x1280 <__fp_split3+0xe>
    129c:	46 95       	lsr	r20
    129e:	f1 df       	rcall	.-30     	; 0x1282 <__fp_splitA>
    12a0:	08 c0       	rjmp	.+16     	; 0x12b2 <__fp_splitA+0x30>
    12a2:	16 16       	cp	r1, r22
    12a4:	17 06       	cpc	r1, r23
    12a6:	18 06       	cpc	r1, r24
    12a8:	99 1f       	adc	r25, r25
    12aa:	f1 cf       	rjmp	.-30     	; 0x128e <__fp_splitA+0xc>
    12ac:	86 95       	lsr	r24
    12ae:	71 05       	cpc	r23, r1
    12b0:	61 05       	cpc	r22, r1
    12b2:	08 94       	sec
    12b4:	08 95       	ret

000012b6 <__fp_zero>:
    12b6:	e8 94       	clt

000012b8 <__fp_szero>:
    12b8:	bb 27       	eor	r27, r27
    12ba:	66 27       	eor	r22, r22
    12bc:	77 27       	eor	r23, r23
    12be:	cb 01       	movw	r24, r22
    12c0:	97 f9       	bld	r25, 7
    12c2:	08 95       	ret

000012c4 <__gesf2>:
    12c4:	8a df       	rcall	.-236    	; 0x11da <__fp_cmp>
    12c6:	08 f4       	brcc	.+2      	; 0x12ca <__gesf2+0x6>
    12c8:	8f ef       	ldi	r24, 0xFF	; 255
    12ca:	08 95       	ret

000012cc <__mulsf3>:
    12cc:	0b d0       	rcall	.+22     	; 0x12e4 <__mulsf3x>
    12ce:	c0 cf       	rjmp	.-128    	; 0x1250 <__fp_round>
    12d0:	b1 df       	rcall	.-158    	; 0x1234 <__fp_pscA>
    12d2:	28 f0       	brcs	.+10     	; 0x12de <__mulsf3+0x12>
    12d4:	b6 df       	rcall	.-148    	; 0x1242 <__fp_pscB>
    12d6:	18 f0       	brcs	.+6      	; 0x12de <__mulsf3+0x12>
    12d8:	95 23       	and	r25, r21
    12da:	09 f0       	breq	.+2      	; 0x12de <__mulsf3+0x12>
    12dc:	a2 cf       	rjmp	.-188    	; 0x1222 <__fp_inf>
    12de:	a7 cf       	rjmp	.-178    	; 0x122e <__fp_nan>
    12e0:	11 24       	eor	r1, r1
    12e2:	ea cf       	rjmp	.-44     	; 0x12b8 <__fp_szero>

000012e4 <__mulsf3x>:
    12e4:	c6 df       	rcall	.-116    	; 0x1272 <__fp_split3>
    12e6:	a0 f3       	brcs	.-24     	; 0x12d0 <__mulsf3+0x4>

000012e8 <__mulsf3_pse>:
    12e8:	95 9f       	mul	r25, r21
    12ea:	d1 f3       	breq	.-12     	; 0x12e0 <__mulsf3+0x14>
    12ec:	95 0f       	add	r25, r21
    12ee:	50 e0       	ldi	r21, 0x00	; 0
    12f0:	55 1f       	adc	r21, r21
    12f2:	62 9f       	mul	r22, r18
    12f4:	f0 01       	movw	r30, r0
    12f6:	72 9f       	mul	r23, r18
    12f8:	bb 27       	eor	r27, r27
    12fa:	f0 0d       	add	r31, r0
    12fc:	b1 1d       	adc	r27, r1
    12fe:	63 9f       	mul	r22, r19
    1300:	aa 27       	eor	r26, r26
    1302:	f0 0d       	add	r31, r0
    1304:	b1 1d       	adc	r27, r1
    1306:	aa 1f       	adc	r26, r26
    1308:	64 9f       	mul	r22, r20
    130a:	66 27       	eor	r22, r22
    130c:	b0 0d       	add	r27, r0
    130e:	a1 1d       	adc	r26, r1
    1310:	66 1f       	adc	r22, r22
    1312:	82 9f       	mul	r24, r18
    1314:	22 27       	eor	r18, r18
    1316:	b0 0d       	add	r27, r0
    1318:	a1 1d       	adc	r26, r1
    131a:	62 1f       	adc	r22, r18
    131c:	73 9f       	mul	r23, r19
    131e:	b0 0d       	add	r27, r0
    1320:	a1 1d       	adc	r26, r1
    1322:	62 1f       	adc	r22, r18
    1324:	83 9f       	mul	r24, r19
    1326:	a0 0d       	add	r26, r0
    1328:	61 1d       	adc	r22, r1
    132a:	22 1f       	adc	r18, r18
    132c:	74 9f       	mul	r23, r20
    132e:	33 27       	eor	r19, r19
    1330:	a0 0d       	add	r26, r0
    1332:	61 1d       	adc	r22, r1
    1334:	23 1f       	adc	r18, r19
    1336:	84 9f       	mul	r24, r20
    1338:	60 0d       	add	r22, r0
    133a:	21 1d       	adc	r18, r1
    133c:	82 2f       	mov	r24, r18
    133e:	76 2f       	mov	r23, r22
    1340:	6a 2f       	mov	r22, r26
    1342:	11 24       	eor	r1, r1
    1344:	9f 57       	subi	r25, 0x7F	; 127
    1346:	50 40       	sbci	r21, 0x00	; 0
    1348:	8a f0       	brmi	.+34     	; 0x136c <__mulsf3_pse+0x84>
    134a:	e1 f0       	breq	.+56     	; 0x1384 <__mulsf3_pse+0x9c>
    134c:	88 23       	and	r24, r24
    134e:	4a f0       	brmi	.+18     	; 0x1362 <__mulsf3_pse+0x7a>
    1350:	ee 0f       	add	r30, r30
    1352:	ff 1f       	adc	r31, r31
    1354:	bb 1f       	adc	r27, r27
    1356:	66 1f       	adc	r22, r22
    1358:	77 1f       	adc	r23, r23
    135a:	88 1f       	adc	r24, r24
    135c:	91 50       	subi	r25, 0x01	; 1
    135e:	50 40       	sbci	r21, 0x00	; 0
    1360:	a9 f7       	brne	.-22     	; 0x134c <__mulsf3_pse+0x64>
    1362:	9e 3f       	cpi	r25, 0xFE	; 254
    1364:	51 05       	cpc	r21, r1
    1366:	70 f0       	brcs	.+28     	; 0x1384 <__mulsf3_pse+0x9c>
    1368:	5c cf       	rjmp	.-328    	; 0x1222 <__fp_inf>
    136a:	a6 cf       	rjmp	.-180    	; 0x12b8 <__fp_szero>
    136c:	5f 3f       	cpi	r21, 0xFF	; 255
    136e:	ec f3       	brlt	.-6      	; 0x136a <__mulsf3_pse+0x82>
    1370:	98 3e       	cpi	r25, 0xE8	; 232
    1372:	dc f3       	brlt	.-10     	; 0x136a <__mulsf3_pse+0x82>
    1374:	86 95       	lsr	r24
    1376:	77 95       	ror	r23
    1378:	67 95       	ror	r22
    137a:	b7 95       	ror	r27
    137c:	f7 95       	ror	r31
    137e:	e7 95       	ror	r30
    1380:	9f 5f       	subi	r25, 0xFF	; 255
    1382:	c1 f7       	brne	.-16     	; 0x1374 <__mulsf3_pse+0x8c>
    1384:	fe 2b       	or	r31, r30
    1386:	88 0f       	add	r24, r24
    1388:	91 1d       	adc	r25, r1
    138a:	96 95       	lsr	r25
    138c:	87 95       	ror	r24
    138e:	97 f9       	bld	r25, 7
    1390:	08 95       	ret

00001392 <__tablejump2__>:
    1392:	ee 0f       	add	r30, r30
    1394:	ff 1f       	adc	r31, r31

00001396 <__tablejump__>:
    1396:	05 90       	lpm	r0, Z+
    1398:	f4 91       	lpm	r31, Z
    139a:	e0 2d       	mov	r30, r0
    139c:	19 94       	eijmp

0000139e <fdevopen>:
    139e:	0f 93       	push	r16
    13a0:	1f 93       	push	r17
    13a2:	cf 93       	push	r28
    13a4:	df 93       	push	r29
    13a6:	ec 01       	movw	r28, r24
    13a8:	8b 01       	movw	r16, r22
    13aa:	00 97       	sbiw	r24, 0x00	; 0
    13ac:	31 f4       	brne	.+12     	; 0x13ba <fdevopen+0x1c>
    13ae:	61 15       	cp	r22, r1
    13b0:	71 05       	cpc	r23, r1
    13b2:	19 f4       	brne	.+6      	; 0x13ba <fdevopen+0x1c>
    13b4:	80 e0       	ldi	r24, 0x00	; 0
    13b6:	90 e0       	ldi	r25, 0x00	; 0
    13b8:	37 c0       	rjmp	.+110    	; 0x1428 <fdevopen+0x8a>
    13ba:	6e e0       	ldi	r22, 0x0E	; 14
    13bc:	70 e0       	ldi	r23, 0x00	; 0
    13be:	81 e0       	ldi	r24, 0x01	; 1
    13c0:	90 e0       	ldi	r25, 0x00	; 0
    13c2:	64 d0       	rcall	.+200    	; 0x148c <calloc>
    13c4:	fc 01       	movw	r30, r24
    13c6:	00 97       	sbiw	r24, 0x00	; 0
    13c8:	a9 f3       	breq	.-22     	; 0x13b4 <fdevopen+0x16>
    13ca:	80 e8       	ldi	r24, 0x80	; 128
    13cc:	83 83       	std	Z+3, r24	; 0x03
    13ce:	01 15       	cp	r16, r1
    13d0:	11 05       	cpc	r17, r1
    13d2:	71 f0       	breq	.+28     	; 0x13f0 <fdevopen+0x52>
    13d4:	13 87       	std	Z+11, r17	; 0x0b
    13d6:	02 87       	std	Z+10, r16	; 0x0a
    13d8:	81 e8       	ldi	r24, 0x81	; 129
    13da:	83 83       	std	Z+3, r24	; 0x03
    13dc:	80 91 2b 02 	lds	r24, 0x022B
    13e0:	90 91 2c 02 	lds	r25, 0x022C
    13e4:	89 2b       	or	r24, r25
    13e6:	21 f4       	brne	.+8      	; 0x13f0 <fdevopen+0x52>
    13e8:	f0 93 2c 02 	sts	0x022C, r31
    13ec:	e0 93 2b 02 	sts	0x022B, r30
    13f0:	20 97       	sbiw	r28, 0x00	; 0
    13f2:	c9 f0       	breq	.+50     	; 0x1426 <fdevopen+0x88>
    13f4:	d1 87       	std	Z+9, r29	; 0x09
    13f6:	c0 87       	std	Z+8, r28	; 0x08
    13f8:	83 81       	ldd	r24, Z+3	; 0x03
    13fa:	82 60       	ori	r24, 0x02	; 2
    13fc:	83 83       	std	Z+3, r24	; 0x03
    13fe:	80 91 2d 02 	lds	r24, 0x022D
    1402:	90 91 2e 02 	lds	r25, 0x022E
    1406:	89 2b       	or	r24, r25
    1408:	71 f4       	brne	.+28     	; 0x1426 <fdevopen+0x88>
    140a:	f0 93 2e 02 	sts	0x022E, r31
    140e:	e0 93 2d 02 	sts	0x022D, r30
    1412:	80 91 2f 02 	lds	r24, 0x022F
    1416:	90 91 30 02 	lds	r25, 0x0230
    141a:	89 2b       	or	r24, r25
    141c:	21 f4       	brne	.+8      	; 0x1426 <fdevopen+0x88>
    141e:	f0 93 30 02 	sts	0x0230, r31
    1422:	e0 93 2f 02 	sts	0x022F, r30
    1426:	cf 01       	movw	r24, r30
    1428:	df 91       	pop	r29
    142a:	cf 91       	pop	r28
    142c:	1f 91       	pop	r17
    142e:	0f 91       	pop	r16
    1430:	08 95       	ret

00001432 <puts>:
    1432:	0f 93       	push	r16
    1434:	1f 93       	push	r17
    1436:	cf 93       	push	r28
    1438:	df 93       	push	r29
    143a:	e0 91 2d 02 	lds	r30, 0x022D
    143e:	f0 91 2e 02 	lds	r31, 0x022E
    1442:	23 81       	ldd	r18, Z+3	; 0x03
    1444:	21 ff       	sbrs	r18, 1
    1446:	1b c0       	rjmp	.+54     	; 0x147e <puts+0x4c>
    1448:	ec 01       	movw	r28, r24
    144a:	00 e0       	ldi	r16, 0x00	; 0
    144c:	10 e0       	ldi	r17, 0x00	; 0
    144e:	89 91       	ld	r24, Y+
    1450:	60 91 2d 02 	lds	r22, 0x022D
    1454:	70 91 2e 02 	lds	r23, 0x022E
    1458:	db 01       	movw	r26, r22
    145a:	18 96       	adiw	r26, 0x08	; 8
    145c:	ed 91       	ld	r30, X+
    145e:	fc 91       	ld	r31, X
    1460:	19 97       	sbiw	r26, 0x09	; 9
    1462:	88 23       	and	r24, r24
    1464:	31 f0       	breq	.+12     	; 0x1472 <puts+0x40>
    1466:	19 95       	eicall
    1468:	89 2b       	or	r24, r25
    146a:	89 f3       	breq	.-30     	; 0x144e <puts+0x1c>
    146c:	0f ef       	ldi	r16, 0xFF	; 255
    146e:	1f ef       	ldi	r17, 0xFF	; 255
    1470:	ee cf       	rjmp	.-36     	; 0x144e <puts+0x1c>
    1472:	8a e0       	ldi	r24, 0x0A	; 10
    1474:	19 95       	eicall
    1476:	89 2b       	or	r24, r25
    1478:	11 f4       	brne	.+4      	; 0x147e <puts+0x4c>
    147a:	c8 01       	movw	r24, r16
    147c:	02 c0       	rjmp	.+4      	; 0x1482 <puts+0x50>
    147e:	8f ef       	ldi	r24, 0xFF	; 255
    1480:	9f ef       	ldi	r25, 0xFF	; 255
    1482:	df 91       	pop	r29
    1484:	cf 91       	pop	r28
    1486:	1f 91       	pop	r17
    1488:	0f 91       	pop	r16
    148a:	08 95       	ret

0000148c <calloc>:
    148c:	0f 93       	push	r16
    148e:	1f 93       	push	r17
    1490:	cf 93       	push	r28
    1492:	df 93       	push	r29
    1494:	86 9f       	mul	r24, r22
    1496:	80 01       	movw	r16, r0
    1498:	87 9f       	mul	r24, r23
    149a:	10 0d       	add	r17, r0
    149c:	96 9f       	mul	r25, r22
    149e:	10 0d       	add	r17, r0
    14a0:	11 24       	eor	r1, r1
    14a2:	c8 01       	movw	r24, r16
    14a4:	0d d0       	rcall	.+26     	; 0x14c0 <malloc>
    14a6:	ec 01       	movw	r28, r24
    14a8:	00 97       	sbiw	r24, 0x00	; 0
    14aa:	21 f0       	breq	.+8      	; 0x14b4 <calloc+0x28>
    14ac:	a8 01       	movw	r20, r16
    14ae:	60 e0       	ldi	r22, 0x00	; 0
    14b0:	70 e0       	ldi	r23, 0x00	; 0
    14b2:	2d d1       	rcall	.+602    	; 0x170e <memset>
    14b4:	ce 01       	movw	r24, r28
    14b6:	df 91       	pop	r29
    14b8:	cf 91       	pop	r28
    14ba:	1f 91       	pop	r17
    14bc:	0f 91       	pop	r16
    14be:	08 95       	ret

000014c0 <malloc>:
    14c0:	cf 93       	push	r28
    14c2:	df 93       	push	r29
    14c4:	82 30       	cpi	r24, 0x02	; 2
    14c6:	91 05       	cpc	r25, r1
    14c8:	10 f4       	brcc	.+4      	; 0x14ce <malloc+0xe>
    14ca:	82 e0       	ldi	r24, 0x02	; 2
    14cc:	90 e0       	ldi	r25, 0x00	; 0
    14ce:	e0 91 33 02 	lds	r30, 0x0233
    14d2:	f0 91 34 02 	lds	r31, 0x0234
    14d6:	20 e0       	ldi	r18, 0x00	; 0
    14d8:	30 e0       	ldi	r19, 0x00	; 0
    14da:	a0 e0       	ldi	r26, 0x00	; 0
    14dc:	b0 e0       	ldi	r27, 0x00	; 0
    14de:	30 97       	sbiw	r30, 0x00	; 0
    14e0:	39 f1       	breq	.+78     	; 0x1530 <malloc+0x70>
    14e2:	40 81       	ld	r20, Z
    14e4:	51 81       	ldd	r21, Z+1	; 0x01
    14e6:	48 17       	cp	r20, r24
    14e8:	59 07       	cpc	r21, r25
    14ea:	b8 f0       	brcs	.+46     	; 0x151a <malloc+0x5a>
    14ec:	48 17       	cp	r20, r24
    14ee:	59 07       	cpc	r21, r25
    14f0:	71 f4       	brne	.+28     	; 0x150e <malloc+0x4e>
    14f2:	82 81       	ldd	r24, Z+2	; 0x02
    14f4:	93 81       	ldd	r25, Z+3	; 0x03
    14f6:	10 97       	sbiw	r26, 0x00	; 0
    14f8:	29 f0       	breq	.+10     	; 0x1504 <malloc+0x44>
    14fa:	13 96       	adiw	r26, 0x03	; 3
    14fc:	9c 93       	st	X, r25
    14fe:	8e 93       	st	-X, r24
    1500:	12 97       	sbiw	r26, 0x02	; 2
    1502:	2c c0       	rjmp	.+88     	; 0x155c <malloc+0x9c>
    1504:	90 93 34 02 	sts	0x0234, r25
    1508:	80 93 33 02 	sts	0x0233, r24
    150c:	27 c0       	rjmp	.+78     	; 0x155c <malloc+0x9c>
    150e:	21 15       	cp	r18, r1
    1510:	31 05       	cpc	r19, r1
    1512:	31 f0       	breq	.+12     	; 0x1520 <malloc+0x60>
    1514:	42 17       	cp	r20, r18
    1516:	53 07       	cpc	r21, r19
    1518:	18 f0       	brcs	.+6      	; 0x1520 <malloc+0x60>
    151a:	a9 01       	movw	r20, r18
    151c:	db 01       	movw	r26, r22
    151e:	01 c0       	rjmp	.+2      	; 0x1522 <malloc+0x62>
    1520:	ef 01       	movw	r28, r30
    1522:	9a 01       	movw	r18, r20
    1524:	bd 01       	movw	r22, r26
    1526:	df 01       	movw	r26, r30
    1528:	02 80       	ldd	r0, Z+2	; 0x02
    152a:	f3 81       	ldd	r31, Z+3	; 0x03
    152c:	e0 2d       	mov	r30, r0
    152e:	d7 cf       	rjmp	.-82     	; 0x14de <malloc+0x1e>
    1530:	21 15       	cp	r18, r1
    1532:	31 05       	cpc	r19, r1
    1534:	f9 f0       	breq	.+62     	; 0x1574 <malloc+0xb4>
    1536:	28 1b       	sub	r18, r24
    1538:	39 0b       	sbc	r19, r25
    153a:	24 30       	cpi	r18, 0x04	; 4
    153c:	31 05       	cpc	r19, r1
    153e:	80 f4       	brcc	.+32     	; 0x1560 <malloc+0xa0>
    1540:	8a 81       	ldd	r24, Y+2	; 0x02
    1542:	9b 81       	ldd	r25, Y+3	; 0x03
    1544:	61 15       	cp	r22, r1
    1546:	71 05       	cpc	r23, r1
    1548:	21 f0       	breq	.+8      	; 0x1552 <malloc+0x92>
    154a:	fb 01       	movw	r30, r22
    154c:	93 83       	std	Z+3, r25	; 0x03
    154e:	82 83       	std	Z+2, r24	; 0x02
    1550:	04 c0       	rjmp	.+8      	; 0x155a <malloc+0x9a>
    1552:	90 93 34 02 	sts	0x0234, r25
    1556:	80 93 33 02 	sts	0x0233, r24
    155a:	fe 01       	movw	r30, r28
    155c:	32 96       	adiw	r30, 0x02	; 2
    155e:	44 c0       	rjmp	.+136    	; 0x15e8 <malloc+0x128>
    1560:	fe 01       	movw	r30, r28
    1562:	e2 0f       	add	r30, r18
    1564:	f3 1f       	adc	r31, r19
    1566:	81 93       	st	Z+, r24
    1568:	91 93       	st	Z+, r25
    156a:	22 50       	subi	r18, 0x02	; 2
    156c:	31 09       	sbc	r19, r1
    156e:	39 83       	std	Y+1, r19	; 0x01
    1570:	28 83       	st	Y, r18
    1572:	3a c0       	rjmp	.+116    	; 0x15e8 <malloc+0x128>
    1574:	20 91 31 02 	lds	r18, 0x0231
    1578:	30 91 32 02 	lds	r19, 0x0232
    157c:	23 2b       	or	r18, r19
    157e:	41 f4       	brne	.+16     	; 0x1590 <malloc+0xd0>
    1580:	20 91 02 02 	lds	r18, 0x0202
    1584:	30 91 03 02 	lds	r19, 0x0203
    1588:	30 93 32 02 	sts	0x0232, r19
    158c:	20 93 31 02 	sts	0x0231, r18
    1590:	20 91 00 02 	lds	r18, 0x0200
    1594:	30 91 01 02 	lds	r19, 0x0201
    1598:	21 15       	cp	r18, r1
    159a:	31 05       	cpc	r19, r1
    159c:	41 f4       	brne	.+16     	; 0x15ae <malloc+0xee>
    159e:	2d b7       	in	r18, 0x3d	; 61
    15a0:	3e b7       	in	r19, 0x3e	; 62
    15a2:	40 91 04 02 	lds	r20, 0x0204
    15a6:	50 91 05 02 	lds	r21, 0x0205
    15aa:	24 1b       	sub	r18, r20
    15ac:	35 0b       	sbc	r19, r21
    15ae:	e0 91 31 02 	lds	r30, 0x0231
    15b2:	f0 91 32 02 	lds	r31, 0x0232
    15b6:	e2 17       	cp	r30, r18
    15b8:	f3 07       	cpc	r31, r19
    15ba:	a0 f4       	brcc	.+40     	; 0x15e4 <malloc+0x124>
    15bc:	2e 1b       	sub	r18, r30
    15be:	3f 0b       	sbc	r19, r31
    15c0:	28 17       	cp	r18, r24
    15c2:	39 07       	cpc	r19, r25
    15c4:	78 f0       	brcs	.+30     	; 0x15e4 <malloc+0x124>
    15c6:	ac 01       	movw	r20, r24
    15c8:	4e 5f       	subi	r20, 0xFE	; 254
    15ca:	5f 4f       	sbci	r21, 0xFF	; 255
    15cc:	24 17       	cp	r18, r20
    15ce:	35 07       	cpc	r19, r21
    15d0:	48 f0       	brcs	.+18     	; 0x15e4 <malloc+0x124>
    15d2:	4e 0f       	add	r20, r30
    15d4:	5f 1f       	adc	r21, r31
    15d6:	50 93 32 02 	sts	0x0232, r21
    15da:	40 93 31 02 	sts	0x0231, r20
    15de:	81 93       	st	Z+, r24
    15e0:	91 93       	st	Z+, r25
    15e2:	02 c0       	rjmp	.+4      	; 0x15e8 <malloc+0x128>
    15e4:	e0 e0       	ldi	r30, 0x00	; 0
    15e6:	f0 e0       	ldi	r31, 0x00	; 0
    15e8:	cf 01       	movw	r24, r30
    15ea:	df 91       	pop	r29
    15ec:	cf 91       	pop	r28
    15ee:	08 95       	ret

000015f0 <free>:
    15f0:	cf 93       	push	r28
    15f2:	df 93       	push	r29
    15f4:	00 97       	sbiw	r24, 0x00	; 0
    15f6:	09 f4       	brne	.+2      	; 0x15fa <free+0xa>
    15f8:	87 c0       	rjmp	.+270    	; 0x1708 <free+0x118>
    15fa:	fc 01       	movw	r30, r24
    15fc:	32 97       	sbiw	r30, 0x02	; 2
    15fe:	13 82       	std	Z+3, r1	; 0x03
    1600:	12 82       	std	Z+2, r1	; 0x02
    1602:	c0 91 33 02 	lds	r28, 0x0233
    1606:	d0 91 34 02 	lds	r29, 0x0234
    160a:	20 97       	sbiw	r28, 0x00	; 0
    160c:	81 f4       	brne	.+32     	; 0x162e <free+0x3e>
    160e:	20 81       	ld	r18, Z
    1610:	31 81       	ldd	r19, Z+1	; 0x01
    1612:	28 0f       	add	r18, r24
    1614:	39 1f       	adc	r19, r25
    1616:	80 91 31 02 	lds	r24, 0x0231
    161a:	90 91 32 02 	lds	r25, 0x0232
    161e:	82 17       	cp	r24, r18
    1620:	93 07       	cpc	r25, r19
    1622:	79 f5       	brne	.+94     	; 0x1682 <free+0x92>
    1624:	f0 93 32 02 	sts	0x0232, r31
    1628:	e0 93 31 02 	sts	0x0231, r30
    162c:	6d c0       	rjmp	.+218    	; 0x1708 <free+0x118>
    162e:	de 01       	movw	r26, r28
    1630:	20 e0       	ldi	r18, 0x00	; 0
    1632:	30 e0       	ldi	r19, 0x00	; 0
    1634:	ae 17       	cp	r26, r30
    1636:	bf 07       	cpc	r27, r31
    1638:	50 f4       	brcc	.+20     	; 0x164e <free+0x5e>
    163a:	12 96       	adiw	r26, 0x02	; 2
    163c:	4d 91       	ld	r20, X+
    163e:	5c 91       	ld	r21, X
    1640:	13 97       	sbiw	r26, 0x03	; 3
    1642:	9d 01       	movw	r18, r26
    1644:	41 15       	cp	r20, r1
    1646:	51 05       	cpc	r21, r1
    1648:	09 f1       	breq	.+66     	; 0x168c <free+0x9c>
    164a:	da 01       	movw	r26, r20
    164c:	f3 cf       	rjmp	.-26     	; 0x1634 <free+0x44>
    164e:	b3 83       	std	Z+3, r27	; 0x03
    1650:	a2 83       	std	Z+2, r26	; 0x02
    1652:	40 81       	ld	r20, Z
    1654:	51 81       	ldd	r21, Z+1	; 0x01
    1656:	84 0f       	add	r24, r20
    1658:	95 1f       	adc	r25, r21
    165a:	8a 17       	cp	r24, r26
    165c:	9b 07       	cpc	r25, r27
    165e:	71 f4       	brne	.+28     	; 0x167c <free+0x8c>
    1660:	8d 91       	ld	r24, X+
    1662:	9c 91       	ld	r25, X
    1664:	11 97       	sbiw	r26, 0x01	; 1
    1666:	84 0f       	add	r24, r20
    1668:	95 1f       	adc	r25, r21
    166a:	02 96       	adiw	r24, 0x02	; 2
    166c:	91 83       	std	Z+1, r25	; 0x01
    166e:	80 83       	st	Z, r24
    1670:	12 96       	adiw	r26, 0x02	; 2
    1672:	8d 91       	ld	r24, X+
    1674:	9c 91       	ld	r25, X
    1676:	13 97       	sbiw	r26, 0x03	; 3
    1678:	93 83       	std	Z+3, r25	; 0x03
    167a:	82 83       	std	Z+2, r24	; 0x02
    167c:	21 15       	cp	r18, r1
    167e:	31 05       	cpc	r19, r1
    1680:	29 f4       	brne	.+10     	; 0x168c <free+0x9c>
    1682:	f0 93 34 02 	sts	0x0234, r31
    1686:	e0 93 33 02 	sts	0x0233, r30
    168a:	3e c0       	rjmp	.+124    	; 0x1708 <free+0x118>
    168c:	d9 01       	movw	r26, r18
    168e:	13 96       	adiw	r26, 0x03	; 3
    1690:	fc 93       	st	X, r31
    1692:	ee 93       	st	-X, r30
    1694:	12 97       	sbiw	r26, 0x02	; 2
    1696:	4d 91       	ld	r20, X+
    1698:	5d 91       	ld	r21, X+
    169a:	a4 0f       	add	r26, r20
    169c:	b5 1f       	adc	r27, r21
    169e:	ea 17       	cp	r30, r26
    16a0:	fb 07       	cpc	r31, r27
    16a2:	79 f4       	brne	.+30     	; 0x16c2 <free+0xd2>
    16a4:	80 81       	ld	r24, Z
    16a6:	91 81       	ldd	r25, Z+1	; 0x01
    16a8:	84 0f       	add	r24, r20
    16aa:	95 1f       	adc	r25, r21
    16ac:	02 96       	adiw	r24, 0x02	; 2
    16ae:	d9 01       	movw	r26, r18
    16b0:	11 96       	adiw	r26, 0x01	; 1
    16b2:	9c 93       	st	X, r25
    16b4:	8e 93       	st	-X, r24
    16b6:	82 81       	ldd	r24, Z+2	; 0x02
    16b8:	93 81       	ldd	r25, Z+3	; 0x03
    16ba:	13 96       	adiw	r26, 0x03	; 3
    16bc:	9c 93       	st	X, r25
    16be:	8e 93       	st	-X, r24
    16c0:	12 97       	sbiw	r26, 0x02	; 2
    16c2:	e0 e0       	ldi	r30, 0x00	; 0
    16c4:	f0 e0       	ldi	r31, 0x00	; 0
    16c6:	8a 81       	ldd	r24, Y+2	; 0x02
    16c8:	9b 81       	ldd	r25, Y+3	; 0x03
    16ca:	00 97       	sbiw	r24, 0x00	; 0
    16cc:	19 f0       	breq	.+6      	; 0x16d4 <free+0xe4>
    16ce:	fe 01       	movw	r30, r28
    16d0:	ec 01       	movw	r28, r24
    16d2:	f9 cf       	rjmp	.-14     	; 0x16c6 <free+0xd6>
    16d4:	ce 01       	movw	r24, r28
    16d6:	02 96       	adiw	r24, 0x02	; 2
    16d8:	28 81       	ld	r18, Y
    16da:	39 81       	ldd	r19, Y+1	; 0x01
    16dc:	82 0f       	add	r24, r18
    16de:	93 1f       	adc	r25, r19
    16e0:	20 91 31 02 	lds	r18, 0x0231
    16e4:	30 91 32 02 	lds	r19, 0x0232
    16e8:	28 17       	cp	r18, r24
    16ea:	39 07       	cpc	r19, r25
    16ec:	69 f4       	brne	.+26     	; 0x1708 <free+0x118>
    16ee:	30 97       	sbiw	r30, 0x00	; 0
    16f0:	29 f4       	brne	.+10     	; 0x16fc <free+0x10c>
    16f2:	10 92 34 02 	sts	0x0234, r1
    16f6:	10 92 33 02 	sts	0x0233, r1
    16fa:	02 c0       	rjmp	.+4      	; 0x1700 <free+0x110>
    16fc:	13 82       	std	Z+3, r1	; 0x03
    16fe:	12 82       	std	Z+2, r1	; 0x02
    1700:	d0 93 32 02 	sts	0x0232, r29
    1704:	c0 93 31 02 	sts	0x0231, r28
    1708:	df 91       	pop	r29
    170a:	cf 91       	pop	r28
    170c:	08 95       	ret

0000170e <memset>:
    170e:	dc 01       	movw	r26, r24
    1710:	01 c0       	rjmp	.+2      	; 0x1714 <memset+0x6>
    1712:	6d 93       	st	X+, r22
    1714:	41 50       	subi	r20, 0x01	; 1
    1716:	50 40       	sbci	r21, 0x00	; 0
    1718:	e0 f7       	brcc	.-8      	; 0x1712 <memset+0x4>
    171a:	08 95       	ret

0000171c <_exit>:
    171c:	f8 94       	cli

0000171e <__stop_program>:
    171e:	ff cf       	rjmp	.-2      	; 0x171e <__stop_program>
