
Arduino_Atmega2560.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000084  00800200  00000c7a  00000d0e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000c7a  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000000a  00800284  00800284  00000d92  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00000d92  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 00000148  00000000  00000000  00000dee  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000e16  00000000  00000000  00000f36  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000726  00000000  00000000  00001d4c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   0000081f  00000000  00000000  00002472  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000002b0  00000000  00000000  00002c94  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000003e5  00000000  00000000  00002f44  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000581  00000000  00000000  00003329  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000100  00000000  00000000  000038aa  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	71 c0       	rjmp	.+226    	; 0xe4 <__ctors_end>
   2:	00 00       	nop
   4:	8e c0       	rjmp	.+284    	; 0x122 <__bad_interrupt>
   6:	00 00       	nop
   8:	8c c0       	rjmp	.+280    	; 0x122 <__bad_interrupt>
   a:	00 00       	nop
   c:	8a c0       	rjmp	.+276    	; 0x122 <__bad_interrupt>
   e:	00 00       	nop
  10:	88 c0       	rjmp	.+272    	; 0x122 <__bad_interrupt>
  12:	00 00       	nop
  14:	86 c0       	rjmp	.+268    	; 0x122 <__bad_interrupt>
  16:	00 00       	nop
  18:	84 c0       	rjmp	.+264    	; 0x122 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	82 c0       	rjmp	.+260    	; 0x122 <__bad_interrupt>
  1e:	00 00       	nop
  20:	80 c0       	rjmp	.+256    	; 0x122 <__bad_interrupt>
  22:	00 00       	nop
  24:	7e c0       	rjmp	.+252    	; 0x122 <__bad_interrupt>
  26:	00 00       	nop
  28:	7c c0       	rjmp	.+248    	; 0x122 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	7a c0       	rjmp	.+244    	; 0x122 <__bad_interrupt>
  2e:	00 00       	nop
  30:	78 c0       	rjmp	.+240    	; 0x122 <__bad_interrupt>
  32:	00 00       	nop
  34:	76 c0       	rjmp	.+236    	; 0x122 <__bad_interrupt>
  36:	00 00       	nop
  38:	74 c0       	rjmp	.+232    	; 0x122 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	72 c0       	rjmp	.+228    	; 0x122 <__bad_interrupt>
  3e:	00 00       	nop
  40:	70 c0       	rjmp	.+224    	; 0x122 <__bad_interrupt>
  42:	00 00       	nop
  44:	6e c0       	rjmp	.+220    	; 0x122 <__bad_interrupt>
  46:	00 00       	nop
  48:	6c c0       	rjmp	.+216    	; 0x122 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	6a c0       	rjmp	.+212    	; 0x122 <__bad_interrupt>
  4e:	00 00       	nop
  50:	68 c0       	rjmp	.+208    	; 0x122 <__bad_interrupt>
  52:	00 00       	nop
  54:	66 c0       	rjmp	.+204    	; 0x122 <__bad_interrupt>
  56:	00 00       	nop
  58:	64 c0       	rjmp	.+200    	; 0x122 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	62 c0       	rjmp	.+196    	; 0x122 <__bad_interrupt>
  5e:	00 00       	nop
  60:	60 c0       	rjmp	.+192    	; 0x122 <__bad_interrupt>
  62:	00 00       	nop
  64:	5e c0       	rjmp	.+188    	; 0x122 <__bad_interrupt>
  66:	00 00       	nop
  68:	5c c0       	rjmp	.+184    	; 0x122 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	5a c0       	rjmp	.+180    	; 0x122 <__bad_interrupt>
  6e:	00 00       	nop
  70:	58 c0       	rjmp	.+176    	; 0x122 <__bad_interrupt>
  72:	00 00       	nop
  74:	56 c0       	rjmp	.+172    	; 0x122 <__bad_interrupt>
  76:	00 00       	nop
  78:	54 c0       	rjmp	.+168    	; 0x122 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	52 c0       	rjmp	.+164    	; 0x122 <__bad_interrupt>
  7e:	00 00       	nop
  80:	50 c0       	rjmp	.+160    	; 0x122 <__bad_interrupt>
  82:	00 00       	nop
  84:	4e c0       	rjmp	.+156    	; 0x122 <__bad_interrupt>
  86:	00 00       	nop
  88:	4c c0       	rjmp	.+152    	; 0x122 <__bad_interrupt>
  8a:	00 00       	nop
  8c:	4a c0       	rjmp	.+148    	; 0x122 <__bad_interrupt>
  8e:	00 00       	nop
  90:	48 c0       	rjmp	.+144    	; 0x122 <__bad_interrupt>
  92:	00 00       	nop
  94:	46 c0       	rjmp	.+140    	; 0x122 <__bad_interrupt>
  96:	00 00       	nop
  98:	44 c0       	rjmp	.+136    	; 0x122 <__bad_interrupt>
  9a:	00 00       	nop
  9c:	42 c0       	rjmp	.+132    	; 0x122 <__bad_interrupt>
  9e:	00 00       	nop
  a0:	40 c0       	rjmp	.+128    	; 0x122 <__bad_interrupt>
  a2:	00 00       	nop
  a4:	3e c0       	rjmp	.+124    	; 0x122 <__bad_interrupt>
  a6:	00 00       	nop
  a8:	3c c0       	rjmp	.+120    	; 0x122 <__bad_interrupt>
  aa:	00 00       	nop
  ac:	3a c0       	rjmp	.+116    	; 0x122 <__bad_interrupt>
  ae:	00 00       	nop
  b0:	38 c0       	rjmp	.+112    	; 0x122 <__bad_interrupt>
  b2:	00 00       	nop
  b4:	36 c0       	rjmp	.+108    	; 0x122 <__bad_interrupt>
  b6:	00 00       	nop
  b8:	34 c0       	rjmp	.+104    	; 0x122 <__bad_interrupt>
  ba:	00 00       	nop
  bc:	32 c0       	rjmp	.+100    	; 0x122 <__bad_interrupt>
  be:	00 00       	nop
  c0:	30 c0       	rjmp	.+96     	; 0x122 <__bad_interrupt>
  c2:	00 00       	nop
  c4:	2e c0       	rjmp	.+92     	; 0x122 <__bad_interrupt>
  c6:	00 00       	nop
  c8:	2c c0       	rjmp	.+88     	; 0x122 <__bad_interrupt>
  ca:	00 00       	nop
  cc:	2a c0       	rjmp	.+84     	; 0x122 <__bad_interrupt>
  ce:	00 00       	nop
  d0:	28 c0       	rjmp	.+80     	; 0x122 <__bad_interrupt>
  d2:	00 00       	nop
  d4:	26 c0       	rjmp	.+76     	; 0x122 <__bad_interrupt>
  d6:	00 00       	nop
  d8:	24 c0       	rjmp	.+72     	; 0x122 <__bad_interrupt>
  da:	00 00       	nop
  dc:	22 c0       	rjmp	.+68     	; 0x122 <__bad_interrupt>
  de:	00 00       	nop
  e0:	20 c0       	rjmp	.+64     	; 0x122 <__bad_interrupt>
	...

000000e4 <__ctors_end>:
  e4:	11 24       	eor	r1, r1
  e6:	1f be       	out	0x3f, r1	; 63
  e8:	cf ef       	ldi	r28, 0xFF	; 255
  ea:	d1 e2       	ldi	r29, 0x21	; 33
  ec:	de bf       	out	0x3e, r29	; 62
  ee:	cd bf       	out	0x3d, r28	; 61
  f0:	00 e0       	ldi	r16, 0x00	; 0
  f2:	0c bf       	out	0x3c, r16	; 60

000000f4 <__do_copy_data>:
  f4:	12 e0       	ldi	r17, 0x02	; 2
  f6:	a0 e0       	ldi	r26, 0x00	; 0
  f8:	b2 e0       	ldi	r27, 0x02	; 2
  fa:	ea e7       	ldi	r30, 0x7A	; 122
  fc:	fc e0       	ldi	r31, 0x0C	; 12
  fe:	00 e0       	ldi	r16, 0x00	; 0
 100:	0b bf       	out	0x3b, r16	; 59
 102:	02 c0       	rjmp	.+4      	; 0x108 <__do_copy_data+0x14>
 104:	07 90       	elpm	r0, Z+
 106:	0d 92       	st	X+, r0
 108:	a4 38       	cpi	r26, 0x84	; 132
 10a:	b1 07       	cpc	r27, r17
 10c:	d9 f7       	brne	.-10     	; 0x104 <__do_copy_data+0x10>

0000010e <__do_clear_bss>:
 10e:	22 e0       	ldi	r18, 0x02	; 2
 110:	a4 e8       	ldi	r26, 0x84	; 132
 112:	b2 e0       	ldi	r27, 0x02	; 2
 114:	01 c0       	rjmp	.+2      	; 0x118 <.do_clear_bss_start>

00000116 <.do_clear_bss_loop>:
 116:	1d 92       	st	X+, r1

00000118 <.do_clear_bss_start>:
 118:	ae 38       	cpi	r26, 0x8E	; 142
 11a:	b2 07       	cpc	r27, r18
 11c:	e1 f7       	brne	.-8      	; 0x116 <.do_clear_bss_loop>
 11e:	02 d0       	rcall	.+4      	; 0x124 <main>
 120:	aa c5       	rjmp	.+2900   	; 0xc76 <_exit>

00000122 <__bad_interrupt>:
 122:	6e cf       	rjmp	.-292    	; 0x0 <__vectors>

00000124 <main>:
#define MYUBRR FOSC/16/BAUD-1


int main(void)
{
	UART_Init(MYUBRR);		
 124:	87 e6       	ldi	r24, 0x67	; 103
 126:	90 e0       	ldi	r25, 0x00	; 0
 128:	35 d1       	rcall	.+618    	; 0x394 <UART_Init>
	printf("Atmega2560 start.\n");
 12a:	86 e0       	ldi	r24, 0x06	; 6
 12c:	92 e0       	ldi	r25, 0x02	; 2
 12e:	9a d1       	rcall	.+820    	; 0x464 <puts>
	
	MCP2515_init();
 130:	05 d1       	rcall	.+522    	; 0x33c <MCP2515_init>
	
		char temp = read_MCP2515(MCP_CANCTRL);
		printf("temp: %c\n", temp);
	} */
	
	CAN_test();
 132:	a4 d0       	rcall	.+328    	; 0x27c <CAN_test>
 134:	80 e0       	ldi	r24, 0x00	; 0
 136:	90 e0       	ldi	r25, 0x00	; 0
 138:	08 95       	ret

0000013a <CAN_init>:
	
	//printf("TXB0CTRL: %x, CANCTRL: %x\n", read_MCP2515(MCP_TXB0CTRL), read_MCP2515(MCP_));
	
	/*ABORT TRANSMISSION?*/
	
}
 13a:	00 d1       	rcall	.+512    	; 0x33c <MCP2515_init>
 13c:	4f ef       	ldi	r20, 0xFF	; 255
 13e:	60 e6       	ldi	r22, 0x60	; 96
 140:	80 e6       	ldi	r24, 0x60	; 96
 142:	e3 d0       	rcall	.+454    	; 0x30a <bit_modify_MCP2515>
 144:	40 e0       	ldi	r20, 0x00	; 0
 146:	64 e0       	ldi	r22, 0x04	; 4
 148:	80 e6       	ldi	r24, 0x60	; 96
 14a:	df d0       	rcall	.+446    	; 0x30a <bit_modify_MCP2515>
 14c:	41 e0       	ldi	r20, 0x01	; 1
 14e:	65 e0       	ldi	r22, 0x05	; 5
 150:	8b e2       	ldi	r24, 0x2B	; 43
 152:	db d0       	rcall	.+438    	; 0x30a <bit_modify_MCP2515>
 154:	40 e0       	ldi	r20, 0x00	; 0
 156:	60 ef       	ldi	r22, 0xF0	; 240
 158:	8f e0       	ldi	r24, 0x0F	; 15
 15a:	d7 c0       	rjmp	.+430    	; 0x30a <bit_modify_MCP2515>
 15c:	08 95       	ret

0000015e <rcv_CAN_message>:


CAN_struct rcv_CAN_message(){
 15e:	9f 92       	push	r9
 160:	af 92       	push	r10
 162:	bf 92       	push	r11
 164:	cf 92       	push	r12
 166:	df 92       	push	r13
 168:	ef 92       	push	r14
 16a:	ff 92       	push	r15
 16c:	0f 93       	push	r16
 16e:	1f 93       	push	r17
 170:	cf 93       	push	r28
 172:	df 93       	push	r29
 174:	cd b7       	in	r28, 0x3d	; 61
 176:	de b7       	in	r29, 0x3e	; 62
 178:	62 97       	sbiw	r28, 0x12	; 18
 17a:	0f b6       	in	r0, 0x3f	; 63
 17c:	f8 94       	cli
 17e:	de bf       	out	0x3e, r29	; 62
 180:	0f be       	out	0x3f, r0	; 63
 182:	cd bf       	out	0x3d, r28	; 61
 184:	6c 01       	movw	r12, r24
	printf("MCP_RXB0CTRL: %x\n", read_MCP2515(MCP_RXB0CTRL));
 186:	80 e6       	ldi	r24, 0x60	; 96
 188:	b3 d0       	rcall	.+358    	; 0x2f0 <read_MCP2515>
 18a:	1f 92       	push	r1
 18c:	8f 93       	push	r24
 18e:	88 e1       	ldi	r24, 0x18	; 24
 190:	92 e0       	ldi	r25, 0x02	; 2
 192:	9f 93       	push	r25
 194:	8f 93       	push	r24
 196:	55 d1       	rcall	.+682    	; 0x442 <printf>
	CAN_struct msg;
	
	//memset(&msg,0,sizeof(CAN_struct));
	printf("hola hola\n");
 198:	8a e2       	ldi	r24, 0x2A	; 42
 19a:	92 e0       	ldi	r25, 0x02	; 2
 19c:	63 d1       	rcall	.+710    	; 0x464 <puts>
	printf("CANINTF: %x\n", read_MCP2515(MCP_CANINTF));
 19e:	8c e2       	ldi	r24, 0x2C	; 44
 1a0:	a7 d0       	rcall	.+334    	; 0x2f0 <read_MCP2515>
 1a2:	1f 92       	push	r1
 1a4:	8f 93       	push	r24
 1a6:	84 e3       	ldi	r24, 0x34	; 52
 1a8:	92 e0       	ldi	r25, 0x02	; 2
 1aa:	9f 93       	push	r25
 1ac:	8f 93       	push	r24
 1ae:	49 d1       	rcall	.+658    	; 0x442 <printf>
	while (!(read_MCP2515(MCP_CANINTF) & (1<<RX0IF))) {} //wait for interrupt
 1b0:	0f b6       	in	r0, 0x3f	; 63
 1b2:	f8 94       	cli
 1b4:	de bf       	out	0x3e, r29	; 62
 1b6:	0f be       	out	0x3f, r0	; 63
 1b8:	cd bf       	out	0x3d, r28	; 61
 1ba:	8c e2       	ldi	r24, 0x2C	; 44
 1bc:	99 d0       	rcall	.+306    	; 0x2f0 <read_MCP2515>
 1be:	80 ff       	sbrs	r24, 0
 1c0:	fc cf       	rjmp	.-8      	; 0x1ba <rcv_CAN_message+0x5c>
	printf("hola hola !!\n");
 1c2:	81 e4       	ldi	r24, 0x41	; 65
 1c4:	92 e0       	ldi	r25, 0x02	; 2
 1c6:	4e d1       	rcall	.+668    	; 0x464 <puts>
	msg.ID=((read_MCP2515(MCP_RXB0SIDH))<<3|((read_MCP2515(MCP_RXB0SIDL))>>5));
 1c8:	81 e6       	ldi	r24, 0x61	; 97
 1ca:	92 d0       	rcall	.+292    	; 0x2f0 <read_MCP2515>
 1cc:	a8 2e       	mov	r10, r24
 1ce:	82 e6       	ldi	r24, 0x62	; 98
 1d0:	8f d0       	rcall	.+286    	; 0x2f0 <read_MCP2515>
 1d2:	aa 0c       	add	r10, r10
 1d4:	aa 0c       	add	r10, r10
 1d6:	aa 0c       	add	r10, r10
 1d8:	82 95       	swap	r24
 1da:	86 95       	lsr	r24
 1dc:	87 70       	andi	r24, 0x07	; 7
 1de:	a8 2a       	or	r10, r24
	msg.length=	(int)(read_MCP2515(MCP_RXB0_DLC) & 0x0f);
 1e0:	85 e6       	ldi	r24, 0x65	; 101
 1e2:	86 d0       	rcall	.+268    	; 0x2f0 <read_MCP2515>
 1e4:	8f 70       	andi	r24, 0x0F	; 15
 1e6:	b8 2e       	mov	r11, r24
	printf(" Message length %i:\n",msg.length);
 1e8:	08 2f       	mov	r16, r24
 1ea:	10 e0       	ldi	r17, 0x00	; 0
 1ec:	1f 92       	push	r1
 1ee:	8f 93       	push	r24
 1f0:	2e e4       	ldi	r18, 0x4E	; 78
 1f2:	32 e0       	ldi	r19, 0x02	; 2
 1f4:	3f 93       	push	r19
 1f6:	2f 93       	push	r18
 1f8:	24 d1       	rcall	.+584    	; 0x442 <printf>
	
	/*READING DATA FROM DATABUFFER*/
	for (int i=0; i < msg.length; i++){
 1fa:	0f 90       	pop	r0
 1fc:	0f 90       	pop	r0
 1fe:	0f 90       	pop	r0
 200:	0f 90       	pop	r0
 202:	10 16       	cp	r1, r16
 204:	11 06       	cpc	r1, r17
 206:	cc f4       	brge	.+50     	; 0x23a <rcv_CAN_message+0xdc>
 208:	8e 01       	movw	r16, r28
 20a:	0d 5f       	subi	r16, 0xFD	; 253
 20c:	1f 4f       	sbci	r17, 0xFF	; 255
 20e:	eb 2c       	mov	r14, r11
 210:	f1 2c       	mov	r15, r1
 212:	ee 0c       	add	r14, r14
 214:	ff 1c       	adc	r15, r15
 216:	e0 0e       	add	r14, r16
 218:	f1 1e       	adc	r15, r17
 21a:	0f 2e       	mov	r0, r31
 21c:	f6 e6       	ldi	r31, 0x66	; 102
 21e:	9f 2e       	mov	r9, r31
 220:	f0 2d       	mov	r31, r0
		msg.data[i]= read_MCP2515(MCP_RXB0_D0+i);
 222:	89 2d       	mov	r24, r9
 224:	65 d0       	rcall	.+202    	; 0x2f0 <read_MCP2515>
 226:	28 2f       	mov	r18, r24
 228:	30 e0       	ldi	r19, 0x00	; 0
 22a:	f8 01       	movw	r30, r16
 22c:	21 93       	st	Z+, r18
 22e:	31 93       	st	Z+, r19
 230:	8f 01       	movw	r16, r30
 232:	93 94       	inc	r9
	msg.ID=((read_MCP2515(MCP_RXB0SIDH))<<3|((read_MCP2515(MCP_RXB0SIDL))>>5));
	msg.length=	(int)(read_MCP2515(MCP_RXB0_DLC) & 0x0f);
	printf(" Message length %i:\n",msg.length);
	
	/*READING DATA FROM DATABUFFER*/
	for (int i=0; i < msg.length; i++){
 234:	ee 15       	cp	r30, r14
 236:	ff 05       	cpc	r31, r15
 238:	a1 f7       	brne	.-24     	; 0x222 <rcv_CAN_message+0xc4>
	//bit_modify_MCP2515(MCP_RXB0CTRL, 1, 0);	//Set acceptance filter 0 (RXF0) on FILHIT0.
		
		
		
	//MUST clear RXB0IF after reading message
	bit_modify_MCP2515(MCP_CANINTF, (1<<RX0IF), 0x00);
 23a:	40 e0       	ldi	r20, 0x00	; 0
 23c:	61 e0       	ldi	r22, 0x01	; 1
 23e:	8c e2       	ldi	r24, 0x2C	; 44
 240:	64 d0       	rcall	.+200    	; 0x30a <bit_modify_MCP2515>
	
	
	
	
	
	return msg;
 242:	a9 82       	std	Y+1, r10	; 0x01
 244:	ba 82       	std	Y+2, r11	; 0x02
 246:	82 e1       	ldi	r24, 0x12	; 18
 248:	fe 01       	movw	r30, r28
 24a:	31 96       	adiw	r30, 0x01	; 1
 24c:	d6 01       	movw	r26, r12
 24e:	01 90       	ld	r0, Z+
 250:	0d 92       	st	X+, r0
 252:	8a 95       	dec	r24
 254:	e1 f7       	brne	.-8      	; 0x24e <rcv_CAN_message+0xf0>
}
 256:	c6 01       	movw	r24, r12
 258:	62 96       	adiw	r28, 0x12	; 18
 25a:	0f b6       	in	r0, 0x3f	; 63
 25c:	f8 94       	cli
 25e:	de bf       	out	0x3e, r29	; 62
 260:	0f be       	out	0x3f, r0	; 63
 262:	cd bf       	out	0x3d, r28	; 61
 264:	df 91       	pop	r29
 266:	cf 91       	pop	r28
 268:	1f 91       	pop	r17
 26a:	0f 91       	pop	r16
 26c:	ff 90       	pop	r15
 26e:	ef 90       	pop	r14
 270:	df 90       	pop	r13
 272:	cf 90       	pop	r12
 274:	bf 90       	pop	r11
 276:	af 90       	pop	r10
 278:	9f 90       	pop	r9
 27a:	08 95       	ret

0000027c <CAN_test>:
#include "CAN_driver.h"
#include "SPI_driver.h"
#include "MCP2515_driver.h"
#include <stdio.h>
#include <util/delay.h>
void CAN_test(){
 27c:	cf 93       	push	r28
 27e:	df 93       	push	r29
 280:	cd b7       	in	r28, 0x3d	; 61
 282:	de b7       	in	r29, 0x3e	; 62
 284:	62 97       	sbiw	r28, 0x12	; 18
 286:	0f b6       	in	r0, 0x3f	; 63
 288:	f8 94       	cli
 28a:	de bf       	out	0x3e, r29	; 62
 28c:	0f be       	out	0x3f, r0	; 63
 28e:	cd bf       	out	0x3d, r28	; 61
	
	CAN_init();
 290:	54 df       	rcall	.-344    	; 0x13a <CAN_init>
	
		_delay_ms(2000);
		CAN_struct rcv_msg= rcv_CAN_message();
		
		for (int j=0;j<rcv_msg.length;j++){
			printf("Data in received message : %c \n", (char) rcv_msg.data[j]);
 292:	0f 2e       	mov	r0, r31
 294:	f3 e6       	ldi	r31, 0x63	; 99
 296:	ef 2e       	mov	r14, r31
 298:	f2 e0       	ldi	r31, 0x02	; 2
 29a:	ff 2e       	mov	r15, r31
 29c:	f0 2d       	mov	r31, r0
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 29e:	2f e7       	ldi	r18, 0x7F	; 127
 2a0:	8a e1       	ldi	r24, 0x1A	; 26
 2a2:	96 e0       	ldi	r25, 0x06	; 6
 2a4:	21 50       	subi	r18, 0x01	; 1
 2a6:	80 40       	sbci	r24, 0x00	; 0
 2a8:	90 40       	sbci	r25, 0x00	; 0
 2aa:	e1 f7       	brne	.-8      	; 0x2a4 <CAN_test+0x28>
 2ac:	00 c0       	rjmp	.+0      	; 0x2ae <CAN_test+0x32>
 2ae:	00 00       	nop
	
	while (1){
		//send_CAN_message(msg);
	
		_delay_ms(2000);
		CAN_struct rcv_msg= rcv_CAN_message();
 2b0:	ce 01       	movw	r24, r28
 2b2:	01 96       	adiw	r24, 0x01	; 1
 2b4:	54 df       	rcall	.-344    	; 0x15e <rcv_CAN_message>
 2b6:	ca 80       	ldd	r12, Y+2	; 0x02
		
		for (int j=0;j<rcv_msg.length;j++){
 2b8:	cc 20       	and	r12, r12
 2ba:	89 f3       	breq	.-30     	; 0x29e <CAN_test+0x22>
 2bc:	8e 01       	movw	r16, r28
 2be:	0d 5f       	subi	r16, 0xFD	; 253
 2c0:	1f 4f       	sbci	r17, 0xFF	; 255
 2c2:	d1 2c       	mov	r13, r1
 2c4:	cc 0c       	add	r12, r12
 2c6:	dd 1c       	adc	r13, r13
 2c8:	c0 0e       	add	r12, r16
 2ca:	d1 1e       	adc	r13, r17
			printf("Data in received message : %c \n", (char) rcv_msg.data[j]);
 2cc:	f8 01       	movw	r30, r16
 2ce:	81 91       	ld	r24, Z+
 2d0:	91 91       	ld	r25, Z+
 2d2:	8f 01       	movw	r16, r30
 2d4:	99 27       	eor	r25, r25
 2d6:	9f 93       	push	r25
 2d8:	8f 93       	push	r24
 2da:	ff 92       	push	r15
 2dc:	ef 92       	push	r14
 2de:	b1 d0       	rcall	.+354    	; 0x442 <printf>
		//send_CAN_message(msg);
	
		_delay_ms(2000);
		CAN_struct rcv_msg= rcv_CAN_message();
		
		for (int j=0;j<rcv_msg.length;j++){
 2e0:	0f 90       	pop	r0
 2e2:	0f 90       	pop	r0
 2e4:	0f 90       	pop	r0
 2e6:	0f 90       	pop	r0
 2e8:	0c 15       	cp	r16, r12
 2ea:	1d 05       	cpc	r17, r13
 2ec:	79 f7       	brne	.-34     	; 0x2cc <CAN_test+0x50>
 2ee:	d7 cf       	rjmp	.-82     	; 0x29e <CAN_test+0x22>

000002f0 <read_MCP2515>:
	spi_chipselect_activate();
	/*if (out != repeat){
		return repeat;
	}*/
	return out;
}
 2f0:	cf 93       	push	r28
 2f2:	c8 2f       	mov	r28, r24
 2f4:	3d d0       	rcall	.+122    	; 0x370 <spi_chipselect_deactivate>
 2f6:	83 e0       	ldi	r24, 0x03	; 3
 2f8:	2d d0       	rcall	.+90     	; 0x354 <send_master_SPI>
 2fa:	8c 2f       	mov	r24, r28
 2fc:	2b d0       	rcall	.+86     	; 0x354 <send_master_SPI>
 2fe:	2f d0       	rcall	.+94     	; 0x35e <read_master_SPI>
 300:	c8 2f       	mov	r28, r24
 302:	34 d0       	rcall	.+104    	; 0x36c <spi_chipselect_activate>
 304:	8c 2f       	mov	r24, r28
 306:	cf 91       	pop	r28
 308:	08 95       	ret

0000030a <bit_modify_MCP2515>:

void bit_modify_MCP2515(char address, char mask_byte, char data){
 30a:	1f 93       	push	r17
 30c:	cf 93       	push	r28
 30e:	df 93       	push	r29
 310:	18 2f       	mov	r17, r24
 312:	d6 2f       	mov	r29, r22
 314:	c4 2f       	mov	r28, r20
	spi_chipselect_deactivate();
 316:	2c d0       	rcall	.+88     	; 0x370 <spi_chipselect_deactivate>
	send_master_SPI(0x05);	//'bit modify' instruction.
 318:	85 e0       	ldi	r24, 0x05	; 5
 31a:	1c d0       	rcall	.+56     	; 0x354 <send_master_SPI>
	send_master_SPI(address);
 31c:	81 2f       	mov	r24, r17
 31e:	1a d0       	rcall	.+52     	; 0x354 <send_master_SPI>
	send_master_SPI(mask_byte);
 320:	8d 2f       	mov	r24, r29
 322:	18 d0       	rcall	.+48     	; 0x354 <send_master_SPI>
	send_master_SPI(data);
 324:	8c 2f       	mov	r24, r28
 326:	16 d0       	rcall	.+44     	; 0x354 <send_master_SPI>
	spi_chipselect_activate();
 328:	21 d0       	rcall	.+66     	; 0x36c <spi_chipselect_activate>
}
 32a:	df 91       	pop	r29
 32c:	cf 91       	pop	r28
 32e:	1f 91       	pop	r17
 330:	08 95       	ret

00000332 <reset_MCP2515>:

void reset_MCP2515(){
	spi_chipselect_deactivate();
 332:	1e d0       	rcall	.+60     	; 0x370 <spi_chipselect_deactivate>
	send_master_SPI(0xC0);	//'reset' instruction.
 334:	80 ec       	ldi	r24, 0xC0	; 192
 336:	0e d0       	rcall	.+28     	; 0x354 <send_master_SPI>
	spi_chipselect_activate();
 338:	19 c0       	rjmp	.+50     	; 0x36c <spi_chipselect_activate>
 33a:	08 95       	ret

0000033c <MCP2515_init>:
#include "MCP2515.h"



void MCP2515_init(){
	SPI_master_init();
 33c:	02 d0       	rcall	.+4      	; 0x342 <SPI_master_init>
	reset_MCP2515();
 33e:	f9 cf       	rjmp	.-14     	; 0x332 <reset_MCP2515>
 340:	08 95       	ret

00000342 <SPI_master_init>:




void SPI_master_init(){
	DDRB |= (1<<MOSI) | (1<<SCK) | (1<<SSn) | (1<<PB0);		//Set MOSI, SCK, SSn output.
 342:	84 b1       	in	r24, 0x04	; 4
 344:	87 68       	ori	r24, 0x87	; 135
 346:	84 b9       	out	0x04, r24	; 4
	DDRB &= ~((1<<MISO));		//Set MISO input.
 348:	23 98       	cbi	0x04, 3	; 4
	PORTB|=(1<<MISO);
 34a:	2b 9a       	sbi	0x05, 3	; 5
	SPCR |= (1<<SPE) | (1<<MSTR)|(1<<SPR1);	//Enable SPI, Master, set clock rate fck/64.
 34c:	8c b5       	in	r24, 0x2c	; 44
 34e:	82 65       	ori	r24, 0x52	; 82
 350:	8c bd       	out	0x2c, r24	; 44
 352:	08 95       	ret

00000354 <send_master_SPI>:
	//PINB &= !(1<<PB4);
}

void send_master_SPI(char data){
	SPDR = data;			//Send data.
 354:	8e bd       	out	0x2e, r24	; 46
	while (!(SPSR & (1<<SPIF))) {}		//Wait for transmission complete.
 356:	0d b4       	in	r0, 0x2d	; 45
 358:	07 fe       	sbrs	r0, 7
 35a:	fd cf       	rjmp	.-6      	; 0x356 <send_master_SPI+0x2>
}
 35c:	08 95       	ret

0000035e <read_master_SPI>:

char read_master_SPI(){
	
	
	send_master_SPI(0xFF);		//Send dummy byte.		
 35e:	8f ef       	ldi	r24, 0xFF	; 255
 360:	f9 df       	rcall	.-14     	; 0x354 <send_master_SPI>
	while (!(SPSR & (1<<SPIF))) {}		//Wait for transmission complete.
 362:	0d b4       	in	r0, 0x2d	; 45
 364:	07 fe       	sbrs	r0, 7
 366:	fd cf       	rjmp	.-6      	; 0x362 <read_master_SPI+0x4>
	return SPDR;
 368:	8e b5       	in	r24, 0x2e	; 46
}
 36a:	08 95       	ret

0000036c <spi_chipselect_activate>:

void spi_chipselect_activate(){
	PORTB |=(1<<SSn);
 36c:	2f 9a       	sbi	0x05, 7	; 5
 36e:	08 95       	ret

00000370 <spi_chipselect_deactivate>:
}

void spi_chipselect_deactivate(){
	PORTB &=~(1<<SSn);
 370:	2f 98       	cbi	0x05, 7	; 5
 372:	08 95       	ret

00000374 <UART_Transmit>:
}
	
void UART_Transmit( unsigned char data )
{
	/* Wait for empty transmit buffer*/
		while( !( UCSR0A & (1<<UDRE0)) )
 374:	e0 ec       	ldi	r30, 0xC0	; 192
 376:	f0 e0       	ldi	r31, 0x00	; 0
 378:	90 81       	ld	r25, Z
 37a:	95 ff       	sbrs	r25, 5
 37c:	fd cf       	rjmp	.-6      	; 0x378 <UART_Transmit+0x4>
		;
	/* Put data into buffer, sends the data*/
		UDR0 = data;
 37e:	80 93 c6 00 	sts	0x00C6, r24
 382:	08 95       	ret

00000384 <UART_Receive>:
}

unsigned char UART_Receive(void)
	{
		/* Wait for data to be received*/
		while( !(UCSR0A & (1<<RXC0)) )
 384:	e0 ec       	ldi	r30, 0xC0	; 192
 386:	f0 e0       	ldi	r31, 0x00	; 0
 388:	80 81       	ld	r24, Z
 38a:	88 23       	and	r24, r24
 38c:	ec f7       	brge	.-6      	; 0x388 <UART_Receive+0x4>
			;
		/* Get and return received data from buffer*/
		return UDR0;
 38e:	80 91 c6 00 	lds	r24, 0x00C6
 392:	08 95       	ret

00000394 <UART_Init>:
#define UCPHA0 1
#define BAUD 9600

void UART_Init(unsigned int ubrr)
{
	UBRR0H = (unsigned char)(ubrr>>8);
 394:	90 93 c5 00 	sts	0x00C5, r25
	UBRR0L = (unsigned char)ubrr;
 398:	80 93 c4 00 	sts	0x00C4, r24
		
	/* Enable receiver and transmitter. */
	UCSR0B = (1<<RXEN0)|(1<<TXEN0);
 39c:	88 e1       	ldi	r24, 0x18	; 24
 39e:	80 93 c1 00 	sts	0x00C1, r24
		
	fdevopen(&UART_Transmit, &UART_Receive);
 3a2:	62 ec       	ldi	r22, 0xC2	; 194
 3a4:	71 e0       	ldi	r23, 0x01	; 1
 3a6:	8a eb       	ldi	r24, 0xBA	; 186
 3a8:	91 e0       	ldi	r25, 0x01	; 1
 3aa:	01 c0       	rjmp	.+2      	; 0x3ae <fdevopen>
 3ac:	08 95       	ret

000003ae <fdevopen>:
 3ae:	0f 93       	push	r16
 3b0:	1f 93       	push	r17
 3b2:	cf 93       	push	r28
 3b4:	df 93       	push	r29
 3b6:	ec 01       	movw	r28, r24
 3b8:	8b 01       	movw	r16, r22
 3ba:	00 97       	sbiw	r24, 0x00	; 0
 3bc:	31 f4       	brne	.+12     	; 0x3ca <fdevopen+0x1c>
 3be:	61 15       	cp	r22, r1
 3c0:	71 05       	cpc	r23, r1
 3c2:	19 f4       	brne	.+6      	; 0x3ca <fdevopen+0x1c>
 3c4:	80 e0       	ldi	r24, 0x00	; 0
 3c6:	90 e0       	ldi	r25, 0x00	; 0
 3c8:	37 c0       	rjmp	.+110    	; 0x438 <fdevopen+0x8a>
 3ca:	6e e0       	ldi	r22, 0x0E	; 14
 3cc:	70 e0       	ldi	r23, 0x00	; 0
 3ce:	81 e0       	ldi	r24, 0x01	; 1
 3d0:	90 e0       	ldi	r25, 0x00	; 0
 3d2:	63 d2       	rcall	.+1222   	; 0x89a <calloc>
 3d4:	fc 01       	movw	r30, r24
 3d6:	00 97       	sbiw	r24, 0x00	; 0
 3d8:	a9 f3       	breq	.-22     	; 0x3c4 <fdevopen+0x16>
 3da:	80 e8       	ldi	r24, 0x80	; 128
 3dc:	83 83       	std	Z+3, r24	; 0x03
 3de:	01 15       	cp	r16, r1
 3e0:	11 05       	cpc	r17, r1
 3e2:	71 f0       	breq	.+28     	; 0x400 <fdevopen+0x52>
 3e4:	13 87       	std	Z+11, r17	; 0x0b
 3e6:	02 87       	std	Z+10, r16	; 0x0a
 3e8:	81 e8       	ldi	r24, 0x81	; 129
 3ea:	83 83       	std	Z+3, r24	; 0x03
 3ec:	80 91 84 02 	lds	r24, 0x0284
 3f0:	90 91 85 02 	lds	r25, 0x0285
 3f4:	89 2b       	or	r24, r25
 3f6:	21 f4       	brne	.+8      	; 0x400 <fdevopen+0x52>
 3f8:	f0 93 85 02 	sts	0x0285, r31
 3fc:	e0 93 84 02 	sts	0x0284, r30
 400:	20 97       	sbiw	r28, 0x00	; 0
 402:	c9 f0       	breq	.+50     	; 0x436 <fdevopen+0x88>
 404:	d1 87       	std	Z+9, r29	; 0x09
 406:	c0 87       	std	Z+8, r28	; 0x08
 408:	83 81       	ldd	r24, Z+3	; 0x03
 40a:	82 60       	ori	r24, 0x02	; 2
 40c:	83 83       	std	Z+3, r24	; 0x03
 40e:	80 91 86 02 	lds	r24, 0x0286
 412:	90 91 87 02 	lds	r25, 0x0287
 416:	89 2b       	or	r24, r25
 418:	71 f4       	brne	.+28     	; 0x436 <fdevopen+0x88>
 41a:	f0 93 87 02 	sts	0x0287, r31
 41e:	e0 93 86 02 	sts	0x0286, r30
 422:	80 91 88 02 	lds	r24, 0x0288
 426:	90 91 89 02 	lds	r25, 0x0289
 42a:	89 2b       	or	r24, r25
 42c:	21 f4       	brne	.+8      	; 0x436 <fdevopen+0x88>
 42e:	f0 93 89 02 	sts	0x0289, r31
 432:	e0 93 88 02 	sts	0x0288, r30
 436:	cf 01       	movw	r24, r30
 438:	df 91       	pop	r29
 43a:	cf 91       	pop	r28
 43c:	1f 91       	pop	r17
 43e:	0f 91       	pop	r16
 440:	08 95       	ret

00000442 <printf>:
 442:	cf 93       	push	r28
 444:	df 93       	push	r29
 446:	cd b7       	in	r28, 0x3d	; 61
 448:	de b7       	in	r29, 0x3e	; 62
 44a:	fe 01       	movw	r30, r28
 44c:	36 96       	adiw	r30, 0x06	; 6
 44e:	61 91       	ld	r22, Z+
 450:	71 91       	ld	r23, Z+
 452:	af 01       	movw	r20, r30
 454:	80 91 86 02 	lds	r24, 0x0286
 458:	90 91 87 02 	lds	r25, 0x0287
 45c:	30 d0       	rcall	.+96     	; 0x4be <vfprintf>
 45e:	df 91       	pop	r29
 460:	cf 91       	pop	r28
 462:	08 95       	ret

00000464 <puts>:
 464:	0f 93       	push	r16
 466:	1f 93       	push	r17
 468:	cf 93       	push	r28
 46a:	df 93       	push	r29
 46c:	e0 91 86 02 	lds	r30, 0x0286
 470:	f0 91 87 02 	lds	r31, 0x0287
 474:	23 81       	ldd	r18, Z+3	; 0x03
 476:	21 ff       	sbrs	r18, 1
 478:	1b c0       	rjmp	.+54     	; 0x4b0 <puts+0x4c>
 47a:	ec 01       	movw	r28, r24
 47c:	00 e0       	ldi	r16, 0x00	; 0
 47e:	10 e0       	ldi	r17, 0x00	; 0
 480:	89 91       	ld	r24, Y+
 482:	60 91 86 02 	lds	r22, 0x0286
 486:	70 91 87 02 	lds	r23, 0x0287
 48a:	db 01       	movw	r26, r22
 48c:	18 96       	adiw	r26, 0x08	; 8
 48e:	ed 91       	ld	r30, X+
 490:	fc 91       	ld	r31, X
 492:	19 97       	sbiw	r26, 0x09	; 9
 494:	88 23       	and	r24, r24
 496:	31 f0       	breq	.+12     	; 0x4a4 <puts+0x40>
 498:	19 95       	eicall
 49a:	89 2b       	or	r24, r25
 49c:	89 f3       	breq	.-30     	; 0x480 <puts+0x1c>
 49e:	0f ef       	ldi	r16, 0xFF	; 255
 4a0:	1f ef       	ldi	r17, 0xFF	; 255
 4a2:	ee cf       	rjmp	.-36     	; 0x480 <puts+0x1c>
 4a4:	8a e0       	ldi	r24, 0x0A	; 10
 4a6:	19 95       	eicall
 4a8:	89 2b       	or	r24, r25
 4aa:	11 f4       	brne	.+4      	; 0x4b0 <puts+0x4c>
 4ac:	c8 01       	movw	r24, r16
 4ae:	02 c0       	rjmp	.+4      	; 0x4b4 <puts+0x50>
 4b0:	8f ef       	ldi	r24, 0xFF	; 255
 4b2:	9f ef       	ldi	r25, 0xFF	; 255
 4b4:	df 91       	pop	r29
 4b6:	cf 91       	pop	r28
 4b8:	1f 91       	pop	r17
 4ba:	0f 91       	pop	r16
 4bc:	08 95       	ret

000004be <vfprintf>:
 4be:	2f 92       	push	r2
 4c0:	3f 92       	push	r3
 4c2:	4f 92       	push	r4
 4c4:	5f 92       	push	r5
 4c6:	6f 92       	push	r6
 4c8:	7f 92       	push	r7
 4ca:	8f 92       	push	r8
 4cc:	9f 92       	push	r9
 4ce:	af 92       	push	r10
 4d0:	bf 92       	push	r11
 4d2:	cf 92       	push	r12
 4d4:	df 92       	push	r13
 4d6:	ef 92       	push	r14
 4d8:	ff 92       	push	r15
 4da:	0f 93       	push	r16
 4dc:	1f 93       	push	r17
 4de:	cf 93       	push	r28
 4e0:	df 93       	push	r29
 4e2:	cd b7       	in	r28, 0x3d	; 61
 4e4:	de b7       	in	r29, 0x3e	; 62
 4e6:	2c 97       	sbiw	r28, 0x0c	; 12
 4e8:	0f b6       	in	r0, 0x3f	; 63
 4ea:	f8 94       	cli
 4ec:	de bf       	out	0x3e, r29	; 62
 4ee:	0f be       	out	0x3f, r0	; 63
 4f0:	cd bf       	out	0x3d, r28	; 61
 4f2:	7c 01       	movw	r14, r24
 4f4:	6b 01       	movw	r12, r22
 4f6:	8a 01       	movw	r16, r20
 4f8:	fc 01       	movw	r30, r24
 4fa:	17 82       	std	Z+7, r1	; 0x07
 4fc:	16 82       	std	Z+6, r1	; 0x06
 4fe:	83 81       	ldd	r24, Z+3	; 0x03
 500:	81 ff       	sbrs	r24, 1
 502:	b0 c1       	rjmp	.+864    	; 0x864 <vfprintf+0x3a6>
 504:	ce 01       	movw	r24, r28
 506:	01 96       	adiw	r24, 0x01	; 1
 508:	4c 01       	movw	r8, r24
 50a:	f7 01       	movw	r30, r14
 50c:	93 81       	ldd	r25, Z+3	; 0x03
 50e:	f6 01       	movw	r30, r12
 510:	93 fd       	sbrc	r25, 3
 512:	85 91       	lpm	r24, Z+
 514:	93 ff       	sbrs	r25, 3
 516:	81 91       	ld	r24, Z+
 518:	6f 01       	movw	r12, r30
 51a:	88 23       	and	r24, r24
 51c:	09 f4       	brne	.+2      	; 0x520 <vfprintf+0x62>
 51e:	9e c1       	rjmp	.+828    	; 0x85c <vfprintf+0x39e>
 520:	85 32       	cpi	r24, 0x25	; 37
 522:	39 f4       	brne	.+14     	; 0x532 <vfprintf+0x74>
 524:	93 fd       	sbrc	r25, 3
 526:	85 91       	lpm	r24, Z+
 528:	93 ff       	sbrs	r25, 3
 52a:	81 91       	ld	r24, Z+
 52c:	6f 01       	movw	r12, r30
 52e:	85 32       	cpi	r24, 0x25	; 37
 530:	21 f4       	brne	.+8      	; 0x53a <vfprintf+0x7c>
 532:	b7 01       	movw	r22, r14
 534:	90 e0       	ldi	r25, 0x00	; 0
 536:	0f d3       	rcall	.+1566   	; 0xb56 <fputc>
 538:	e8 cf       	rjmp	.-48     	; 0x50a <vfprintf+0x4c>
 53a:	51 2c       	mov	r5, r1
 53c:	31 2c       	mov	r3, r1
 53e:	20 e0       	ldi	r18, 0x00	; 0
 540:	20 32       	cpi	r18, 0x20	; 32
 542:	a0 f4       	brcc	.+40     	; 0x56c <vfprintf+0xae>
 544:	8b 32       	cpi	r24, 0x2B	; 43
 546:	69 f0       	breq	.+26     	; 0x562 <vfprintf+0xa4>
 548:	30 f4       	brcc	.+12     	; 0x556 <vfprintf+0x98>
 54a:	80 32       	cpi	r24, 0x20	; 32
 54c:	59 f0       	breq	.+22     	; 0x564 <vfprintf+0xa6>
 54e:	83 32       	cpi	r24, 0x23	; 35
 550:	69 f4       	brne	.+26     	; 0x56c <vfprintf+0xae>
 552:	20 61       	ori	r18, 0x10	; 16
 554:	2c c0       	rjmp	.+88     	; 0x5ae <vfprintf+0xf0>
 556:	8d 32       	cpi	r24, 0x2D	; 45
 558:	39 f0       	breq	.+14     	; 0x568 <vfprintf+0xaa>
 55a:	80 33       	cpi	r24, 0x30	; 48
 55c:	39 f4       	brne	.+14     	; 0x56c <vfprintf+0xae>
 55e:	21 60       	ori	r18, 0x01	; 1
 560:	26 c0       	rjmp	.+76     	; 0x5ae <vfprintf+0xf0>
 562:	22 60       	ori	r18, 0x02	; 2
 564:	24 60       	ori	r18, 0x04	; 4
 566:	23 c0       	rjmp	.+70     	; 0x5ae <vfprintf+0xf0>
 568:	28 60       	ori	r18, 0x08	; 8
 56a:	21 c0       	rjmp	.+66     	; 0x5ae <vfprintf+0xf0>
 56c:	27 fd       	sbrc	r18, 7
 56e:	27 c0       	rjmp	.+78     	; 0x5be <vfprintf+0x100>
 570:	30 ed       	ldi	r19, 0xD0	; 208
 572:	38 0f       	add	r19, r24
 574:	3a 30       	cpi	r19, 0x0A	; 10
 576:	78 f4       	brcc	.+30     	; 0x596 <vfprintf+0xd8>
 578:	26 ff       	sbrs	r18, 6
 57a:	06 c0       	rjmp	.+12     	; 0x588 <vfprintf+0xca>
 57c:	fa e0       	ldi	r31, 0x0A	; 10
 57e:	5f 9e       	mul	r5, r31
 580:	30 0d       	add	r19, r0
 582:	11 24       	eor	r1, r1
 584:	53 2e       	mov	r5, r19
 586:	13 c0       	rjmp	.+38     	; 0x5ae <vfprintf+0xf0>
 588:	8a e0       	ldi	r24, 0x0A	; 10
 58a:	38 9e       	mul	r3, r24
 58c:	30 0d       	add	r19, r0
 58e:	11 24       	eor	r1, r1
 590:	33 2e       	mov	r3, r19
 592:	20 62       	ori	r18, 0x20	; 32
 594:	0c c0       	rjmp	.+24     	; 0x5ae <vfprintf+0xf0>
 596:	8e 32       	cpi	r24, 0x2E	; 46
 598:	21 f4       	brne	.+8      	; 0x5a2 <vfprintf+0xe4>
 59a:	26 fd       	sbrc	r18, 6
 59c:	5f c1       	rjmp	.+702    	; 0x85c <vfprintf+0x39e>
 59e:	20 64       	ori	r18, 0x40	; 64
 5a0:	06 c0       	rjmp	.+12     	; 0x5ae <vfprintf+0xf0>
 5a2:	8c 36       	cpi	r24, 0x6C	; 108
 5a4:	11 f4       	brne	.+4      	; 0x5aa <vfprintf+0xec>
 5a6:	20 68       	ori	r18, 0x80	; 128
 5a8:	02 c0       	rjmp	.+4      	; 0x5ae <vfprintf+0xf0>
 5aa:	88 36       	cpi	r24, 0x68	; 104
 5ac:	41 f4       	brne	.+16     	; 0x5be <vfprintf+0x100>
 5ae:	f6 01       	movw	r30, r12
 5b0:	93 fd       	sbrc	r25, 3
 5b2:	85 91       	lpm	r24, Z+
 5b4:	93 ff       	sbrs	r25, 3
 5b6:	81 91       	ld	r24, Z+
 5b8:	6f 01       	movw	r12, r30
 5ba:	81 11       	cpse	r24, r1
 5bc:	c1 cf       	rjmp	.-126    	; 0x540 <vfprintf+0x82>
 5be:	98 2f       	mov	r25, r24
 5c0:	9f 7d       	andi	r25, 0xDF	; 223
 5c2:	95 54       	subi	r25, 0x45	; 69
 5c4:	93 30       	cpi	r25, 0x03	; 3
 5c6:	28 f4       	brcc	.+10     	; 0x5d2 <vfprintf+0x114>
 5c8:	0c 5f       	subi	r16, 0xFC	; 252
 5ca:	1f 4f       	sbci	r17, 0xFF	; 255
 5cc:	ff e3       	ldi	r31, 0x3F	; 63
 5ce:	f9 83       	std	Y+1, r31	; 0x01
 5d0:	0d c0       	rjmp	.+26     	; 0x5ec <vfprintf+0x12e>
 5d2:	83 36       	cpi	r24, 0x63	; 99
 5d4:	31 f0       	breq	.+12     	; 0x5e2 <vfprintf+0x124>
 5d6:	83 37       	cpi	r24, 0x73	; 115
 5d8:	71 f0       	breq	.+28     	; 0x5f6 <vfprintf+0x138>
 5da:	83 35       	cpi	r24, 0x53	; 83
 5dc:	09 f0       	breq	.+2      	; 0x5e0 <vfprintf+0x122>
 5de:	57 c0       	rjmp	.+174    	; 0x68e <vfprintf+0x1d0>
 5e0:	21 c0       	rjmp	.+66     	; 0x624 <vfprintf+0x166>
 5e2:	f8 01       	movw	r30, r16
 5e4:	80 81       	ld	r24, Z
 5e6:	89 83       	std	Y+1, r24	; 0x01
 5e8:	0e 5f       	subi	r16, 0xFE	; 254
 5ea:	1f 4f       	sbci	r17, 0xFF	; 255
 5ec:	44 24       	eor	r4, r4
 5ee:	43 94       	inc	r4
 5f0:	51 2c       	mov	r5, r1
 5f2:	54 01       	movw	r10, r8
 5f4:	14 c0       	rjmp	.+40     	; 0x61e <vfprintf+0x160>
 5f6:	38 01       	movw	r6, r16
 5f8:	f2 e0       	ldi	r31, 0x02	; 2
 5fa:	6f 0e       	add	r6, r31
 5fc:	71 1c       	adc	r7, r1
 5fe:	f8 01       	movw	r30, r16
 600:	a0 80       	ld	r10, Z
 602:	b1 80       	ldd	r11, Z+1	; 0x01
 604:	26 ff       	sbrs	r18, 6
 606:	03 c0       	rjmp	.+6      	; 0x60e <vfprintf+0x150>
 608:	65 2d       	mov	r22, r5
 60a:	70 e0       	ldi	r23, 0x00	; 0
 60c:	02 c0       	rjmp	.+4      	; 0x612 <vfprintf+0x154>
 60e:	6f ef       	ldi	r22, 0xFF	; 255
 610:	7f ef       	ldi	r23, 0xFF	; 255
 612:	c5 01       	movw	r24, r10
 614:	2c 87       	std	Y+12, r18	; 0x0c
 616:	94 d2       	rcall	.+1320   	; 0xb40 <strnlen>
 618:	2c 01       	movw	r4, r24
 61a:	83 01       	movw	r16, r6
 61c:	2c 85       	ldd	r18, Y+12	; 0x0c
 61e:	2f 77       	andi	r18, 0x7F	; 127
 620:	22 2e       	mov	r2, r18
 622:	16 c0       	rjmp	.+44     	; 0x650 <vfprintf+0x192>
 624:	38 01       	movw	r6, r16
 626:	f2 e0       	ldi	r31, 0x02	; 2
 628:	6f 0e       	add	r6, r31
 62a:	71 1c       	adc	r7, r1
 62c:	f8 01       	movw	r30, r16
 62e:	a0 80       	ld	r10, Z
 630:	b1 80       	ldd	r11, Z+1	; 0x01
 632:	26 ff       	sbrs	r18, 6
 634:	03 c0       	rjmp	.+6      	; 0x63c <vfprintf+0x17e>
 636:	65 2d       	mov	r22, r5
 638:	70 e0       	ldi	r23, 0x00	; 0
 63a:	02 c0       	rjmp	.+4      	; 0x640 <vfprintf+0x182>
 63c:	6f ef       	ldi	r22, 0xFF	; 255
 63e:	7f ef       	ldi	r23, 0xFF	; 255
 640:	c5 01       	movw	r24, r10
 642:	2c 87       	std	Y+12, r18	; 0x0c
 644:	6b d2       	rcall	.+1238   	; 0xb1c <strnlen_P>
 646:	2c 01       	movw	r4, r24
 648:	2c 85       	ldd	r18, Y+12	; 0x0c
 64a:	20 68       	ori	r18, 0x80	; 128
 64c:	22 2e       	mov	r2, r18
 64e:	83 01       	movw	r16, r6
 650:	23 fc       	sbrc	r2, 3
 652:	19 c0       	rjmp	.+50     	; 0x686 <vfprintf+0x1c8>
 654:	83 2d       	mov	r24, r3
 656:	90 e0       	ldi	r25, 0x00	; 0
 658:	48 16       	cp	r4, r24
 65a:	59 06       	cpc	r5, r25
 65c:	a0 f4       	brcc	.+40     	; 0x686 <vfprintf+0x1c8>
 65e:	b7 01       	movw	r22, r14
 660:	80 e2       	ldi	r24, 0x20	; 32
 662:	90 e0       	ldi	r25, 0x00	; 0
 664:	78 d2       	rcall	.+1264   	; 0xb56 <fputc>
 666:	3a 94       	dec	r3
 668:	f5 cf       	rjmp	.-22     	; 0x654 <vfprintf+0x196>
 66a:	f5 01       	movw	r30, r10
 66c:	27 fc       	sbrc	r2, 7
 66e:	85 91       	lpm	r24, Z+
 670:	27 fe       	sbrs	r2, 7
 672:	81 91       	ld	r24, Z+
 674:	5f 01       	movw	r10, r30
 676:	b7 01       	movw	r22, r14
 678:	90 e0       	ldi	r25, 0x00	; 0
 67a:	6d d2       	rcall	.+1242   	; 0xb56 <fputc>
 67c:	31 10       	cpse	r3, r1
 67e:	3a 94       	dec	r3
 680:	f1 e0       	ldi	r31, 0x01	; 1
 682:	4f 1a       	sub	r4, r31
 684:	51 08       	sbc	r5, r1
 686:	41 14       	cp	r4, r1
 688:	51 04       	cpc	r5, r1
 68a:	79 f7       	brne	.-34     	; 0x66a <vfprintf+0x1ac>
 68c:	de c0       	rjmp	.+444    	; 0x84a <vfprintf+0x38c>
 68e:	84 36       	cpi	r24, 0x64	; 100
 690:	11 f0       	breq	.+4      	; 0x696 <vfprintf+0x1d8>
 692:	89 36       	cpi	r24, 0x69	; 105
 694:	31 f5       	brne	.+76     	; 0x6e2 <vfprintf+0x224>
 696:	f8 01       	movw	r30, r16
 698:	27 ff       	sbrs	r18, 7
 69a:	07 c0       	rjmp	.+14     	; 0x6aa <vfprintf+0x1ec>
 69c:	60 81       	ld	r22, Z
 69e:	71 81       	ldd	r23, Z+1	; 0x01
 6a0:	82 81       	ldd	r24, Z+2	; 0x02
 6a2:	93 81       	ldd	r25, Z+3	; 0x03
 6a4:	0c 5f       	subi	r16, 0xFC	; 252
 6a6:	1f 4f       	sbci	r17, 0xFF	; 255
 6a8:	08 c0       	rjmp	.+16     	; 0x6ba <vfprintf+0x1fc>
 6aa:	60 81       	ld	r22, Z
 6ac:	71 81       	ldd	r23, Z+1	; 0x01
 6ae:	88 27       	eor	r24, r24
 6b0:	77 fd       	sbrc	r23, 7
 6b2:	80 95       	com	r24
 6b4:	98 2f       	mov	r25, r24
 6b6:	0e 5f       	subi	r16, 0xFE	; 254
 6b8:	1f 4f       	sbci	r17, 0xFF	; 255
 6ba:	2f 76       	andi	r18, 0x6F	; 111
 6bc:	b2 2e       	mov	r11, r18
 6be:	97 ff       	sbrs	r25, 7
 6c0:	09 c0       	rjmp	.+18     	; 0x6d4 <vfprintf+0x216>
 6c2:	90 95       	com	r25
 6c4:	80 95       	com	r24
 6c6:	70 95       	com	r23
 6c8:	61 95       	neg	r22
 6ca:	7f 4f       	sbci	r23, 0xFF	; 255
 6cc:	8f 4f       	sbci	r24, 0xFF	; 255
 6ce:	9f 4f       	sbci	r25, 0xFF	; 255
 6d0:	20 68       	ori	r18, 0x80	; 128
 6d2:	b2 2e       	mov	r11, r18
 6d4:	2a e0       	ldi	r18, 0x0A	; 10
 6d6:	30 e0       	ldi	r19, 0x00	; 0
 6d8:	a4 01       	movw	r20, r8
 6da:	6f d2       	rcall	.+1246   	; 0xbba <__ultoa_invert>
 6dc:	a8 2e       	mov	r10, r24
 6de:	a8 18       	sub	r10, r8
 6e0:	43 c0       	rjmp	.+134    	; 0x768 <vfprintf+0x2aa>
 6e2:	85 37       	cpi	r24, 0x75	; 117
 6e4:	29 f4       	brne	.+10     	; 0x6f0 <vfprintf+0x232>
 6e6:	2f 7e       	andi	r18, 0xEF	; 239
 6e8:	b2 2e       	mov	r11, r18
 6ea:	2a e0       	ldi	r18, 0x0A	; 10
 6ec:	30 e0       	ldi	r19, 0x00	; 0
 6ee:	25 c0       	rjmp	.+74     	; 0x73a <vfprintf+0x27c>
 6f0:	f2 2f       	mov	r31, r18
 6f2:	f9 7f       	andi	r31, 0xF9	; 249
 6f4:	bf 2e       	mov	r11, r31
 6f6:	8f 36       	cpi	r24, 0x6F	; 111
 6f8:	c1 f0       	breq	.+48     	; 0x72a <vfprintf+0x26c>
 6fa:	18 f4       	brcc	.+6      	; 0x702 <vfprintf+0x244>
 6fc:	88 35       	cpi	r24, 0x58	; 88
 6fe:	79 f0       	breq	.+30     	; 0x71e <vfprintf+0x260>
 700:	ad c0       	rjmp	.+346    	; 0x85c <vfprintf+0x39e>
 702:	80 37       	cpi	r24, 0x70	; 112
 704:	19 f0       	breq	.+6      	; 0x70c <vfprintf+0x24e>
 706:	88 37       	cpi	r24, 0x78	; 120
 708:	21 f0       	breq	.+8      	; 0x712 <vfprintf+0x254>
 70a:	a8 c0       	rjmp	.+336    	; 0x85c <vfprintf+0x39e>
 70c:	2f 2f       	mov	r18, r31
 70e:	20 61       	ori	r18, 0x10	; 16
 710:	b2 2e       	mov	r11, r18
 712:	b4 fe       	sbrs	r11, 4
 714:	0d c0       	rjmp	.+26     	; 0x730 <vfprintf+0x272>
 716:	8b 2d       	mov	r24, r11
 718:	84 60       	ori	r24, 0x04	; 4
 71a:	b8 2e       	mov	r11, r24
 71c:	09 c0       	rjmp	.+18     	; 0x730 <vfprintf+0x272>
 71e:	24 ff       	sbrs	r18, 4
 720:	0a c0       	rjmp	.+20     	; 0x736 <vfprintf+0x278>
 722:	9f 2f       	mov	r25, r31
 724:	96 60       	ori	r25, 0x06	; 6
 726:	b9 2e       	mov	r11, r25
 728:	06 c0       	rjmp	.+12     	; 0x736 <vfprintf+0x278>
 72a:	28 e0       	ldi	r18, 0x08	; 8
 72c:	30 e0       	ldi	r19, 0x00	; 0
 72e:	05 c0       	rjmp	.+10     	; 0x73a <vfprintf+0x27c>
 730:	20 e1       	ldi	r18, 0x10	; 16
 732:	30 e0       	ldi	r19, 0x00	; 0
 734:	02 c0       	rjmp	.+4      	; 0x73a <vfprintf+0x27c>
 736:	20 e1       	ldi	r18, 0x10	; 16
 738:	32 e0       	ldi	r19, 0x02	; 2
 73a:	f8 01       	movw	r30, r16
 73c:	b7 fe       	sbrs	r11, 7
 73e:	07 c0       	rjmp	.+14     	; 0x74e <vfprintf+0x290>
 740:	60 81       	ld	r22, Z
 742:	71 81       	ldd	r23, Z+1	; 0x01
 744:	82 81       	ldd	r24, Z+2	; 0x02
 746:	93 81       	ldd	r25, Z+3	; 0x03
 748:	0c 5f       	subi	r16, 0xFC	; 252
 74a:	1f 4f       	sbci	r17, 0xFF	; 255
 74c:	06 c0       	rjmp	.+12     	; 0x75a <vfprintf+0x29c>
 74e:	60 81       	ld	r22, Z
 750:	71 81       	ldd	r23, Z+1	; 0x01
 752:	80 e0       	ldi	r24, 0x00	; 0
 754:	90 e0       	ldi	r25, 0x00	; 0
 756:	0e 5f       	subi	r16, 0xFE	; 254
 758:	1f 4f       	sbci	r17, 0xFF	; 255
 75a:	a4 01       	movw	r20, r8
 75c:	2e d2       	rcall	.+1116   	; 0xbba <__ultoa_invert>
 75e:	a8 2e       	mov	r10, r24
 760:	a8 18       	sub	r10, r8
 762:	fb 2d       	mov	r31, r11
 764:	ff 77       	andi	r31, 0x7F	; 127
 766:	bf 2e       	mov	r11, r31
 768:	b6 fe       	sbrs	r11, 6
 76a:	0b c0       	rjmp	.+22     	; 0x782 <vfprintf+0x2c4>
 76c:	2b 2d       	mov	r18, r11
 76e:	2e 7f       	andi	r18, 0xFE	; 254
 770:	a5 14       	cp	r10, r5
 772:	50 f4       	brcc	.+20     	; 0x788 <vfprintf+0x2ca>
 774:	b4 fe       	sbrs	r11, 4
 776:	0a c0       	rjmp	.+20     	; 0x78c <vfprintf+0x2ce>
 778:	b2 fc       	sbrc	r11, 2
 77a:	08 c0       	rjmp	.+16     	; 0x78c <vfprintf+0x2ce>
 77c:	2b 2d       	mov	r18, r11
 77e:	2e 7e       	andi	r18, 0xEE	; 238
 780:	05 c0       	rjmp	.+10     	; 0x78c <vfprintf+0x2ce>
 782:	7a 2c       	mov	r7, r10
 784:	2b 2d       	mov	r18, r11
 786:	03 c0       	rjmp	.+6      	; 0x78e <vfprintf+0x2d0>
 788:	7a 2c       	mov	r7, r10
 78a:	01 c0       	rjmp	.+2      	; 0x78e <vfprintf+0x2d0>
 78c:	75 2c       	mov	r7, r5
 78e:	24 ff       	sbrs	r18, 4
 790:	0d c0       	rjmp	.+26     	; 0x7ac <vfprintf+0x2ee>
 792:	fe 01       	movw	r30, r28
 794:	ea 0d       	add	r30, r10
 796:	f1 1d       	adc	r31, r1
 798:	80 81       	ld	r24, Z
 79a:	80 33       	cpi	r24, 0x30	; 48
 79c:	11 f4       	brne	.+4      	; 0x7a2 <vfprintf+0x2e4>
 79e:	29 7e       	andi	r18, 0xE9	; 233
 7a0:	09 c0       	rjmp	.+18     	; 0x7b4 <vfprintf+0x2f6>
 7a2:	22 ff       	sbrs	r18, 2
 7a4:	06 c0       	rjmp	.+12     	; 0x7b2 <vfprintf+0x2f4>
 7a6:	73 94       	inc	r7
 7a8:	73 94       	inc	r7
 7aa:	04 c0       	rjmp	.+8      	; 0x7b4 <vfprintf+0x2f6>
 7ac:	82 2f       	mov	r24, r18
 7ae:	86 78       	andi	r24, 0x86	; 134
 7b0:	09 f0       	breq	.+2      	; 0x7b4 <vfprintf+0x2f6>
 7b2:	73 94       	inc	r7
 7b4:	23 fd       	sbrc	r18, 3
 7b6:	12 c0       	rjmp	.+36     	; 0x7dc <vfprintf+0x31e>
 7b8:	20 ff       	sbrs	r18, 0
 7ba:	06 c0       	rjmp	.+12     	; 0x7c8 <vfprintf+0x30a>
 7bc:	5a 2c       	mov	r5, r10
 7be:	73 14       	cp	r7, r3
 7c0:	18 f4       	brcc	.+6      	; 0x7c8 <vfprintf+0x30a>
 7c2:	53 0c       	add	r5, r3
 7c4:	57 18       	sub	r5, r7
 7c6:	73 2c       	mov	r7, r3
 7c8:	73 14       	cp	r7, r3
 7ca:	60 f4       	brcc	.+24     	; 0x7e4 <vfprintf+0x326>
 7cc:	b7 01       	movw	r22, r14
 7ce:	80 e2       	ldi	r24, 0x20	; 32
 7d0:	90 e0       	ldi	r25, 0x00	; 0
 7d2:	2c 87       	std	Y+12, r18	; 0x0c
 7d4:	c0 d1       	rcall	.+896    	; 0xb56 <fputc>
 7d6:	73 94       	inc	r7
 7d8:	2c 85       	ldd	r18, Y+12	; 0x0c
 7da:	f6 cf       	rjmp	.-20     	; 0x7c8 <vfprintf+0x30a>
 7dc:	73 14       	cp	r7, r3
 7de:	10 f4       	brcc	.+4      	; 0x7e4 <vfprintf+0x326>
 7e0:	37 18       	sub	r3, r7
 7e2:	01 c0       	rjmp	.+2      	; 0x7e6 <vfprintf+0x328>
 7e4:	31 2c       	mov	r3, r1
 7e6:	24 ff       	sbrs	r18, 4
 7e8:	11 c0       	rjmp	.+34     	; 0x80c <vfprintf+0x34e>
 7ea:	b7 01       	movw	r22, r14
 7ec:	80 e3       	ldi	r24, 0x30	; 48
 7ee:	90 e0       	ldi	r25, 0x00	; 0
 7f0:	2c 87       	std	Y+12, r18	; 0x0c
 7f2:	b1 d1       	rcall	.+866    	; 0xb56 <fputc>
 7f4:	2c 85       	ldd	r18, Y+12	; 0x0c
 7f6:	22 ff       	sbrs	r18, 2
 7f8:	16 c0       	rjmp	.+44     	; 0x826 <vfprintf+0x368>
 7fa:	21 ff       	sbrs	r18, 1
 7fc:	03 c0       	rjmp	.+6      	; 0x804 <vfprintf+0x346>
 7fe:	88 e5       	ldi	r24, 0x58	; 88
 800:	90 e0       	ldi	r25, 0x00	; 0
 802:	02 c0       	rjmp	.+4      	; 0x808 <vfprintf+0x34a>
 804:	88 e7       	ldi	r24, 0x78	; 120
 806:	90 e0       	ldi	r25, 0x00	; 0
 808:	b7 01       	movw	r22, r14
 80a:	0c c0       	rjmp	.+24     	; 0x824 <vfprintf+0x366>
 80c:	82 2f       	mov	r24, r18
 80e:	86 78       	andi	r24, 0x86	; 134
 810:	51 f0       	breq	.+20     	; 0x826 <vfprintf+0x368>
 812:	21 fd       	sbrc	r18, 1
 814:	02 c0       	rjmp	.+4      	; 0x81a <vfprintf+0x35c>
 816:	80 e2       	ldi	r24, 0x20	; 32
 818:	01 c0       	rjmp	.+2      	; 0x81c <vfprintf+0x35e>
 81a:	8b e2       	ldi	r24, 0x2B	; 43
 81c:	27 fd       	sbrc	r18, 7
 81e:	8d e2       	ldi	r24, 0x2D	; 45
 820:	b7 01       	movw	r22, r14
 822:	90 e0       	ldi	r25, 0x00	; 0
 824:	98 d1       	rcall	.+816    	; 0xb56 <fputc>
 826:	a5 14       	cp	r10, r5
 828:	30 f4       	brcc	.+12     	; 0x836 <vfprintf+0x378>
 82a:	b7 01       	movw	r22, r14
 82c:	80 e3       	ldi	r24, 0x30	; 48
 82e:	90 e0       	ldi	r25, 0x00	; 0
 830:	92 d1       	rcall	.+804    	; 0xb56 <fputc>
 832:	5a 94       	dec	r5
 834:	f8 cf       	rjmp	.-16     	; 0x826 <vfprintf+0x368>
 836:	aa 94       	dec	r10
 838:	f4 01       	movw	r30, r8
 83a:	ea 0d       	add	r30, r10
 83c:	f1 1d       	adc	r31, r1
 83e:	80 81       	ld	r24, Z
 840:	b7 01       	movw	r22, r14
 842:	90 e0       	ldi	r25, 0x00	; 0
 844:	88 d1       	rcall	.+784    	; 0xb56 <fputc>
 846:	a1 10       	cpse	r10, r1
 848:	f6 cf       	rjmp	.-20     	; 0x836 <vfprintf+0x378>
 84a:	33 20       	and	r3, r3
 84c:	09 f4       	brne	.+2      	; 0x850 <vfprintf+0x392>
 84e:	5d ce       	rjmp	.-838    	; 0x50a <vfprintf+0x4c>
 850:	b7 01       	movw	r22, r14
 852:	80 e2       	ldi	r24, 0x20	; 32
 854:	90 e0       	ldi	r25, 0x00	; 0
 856:	7f d1       	rcall	.+766    	; 0xb56 <fputc>
 858:	3a 94       	dec	r3
 85a:	f7 cf       	rjmp	.-18     	; 0x84a <vfprintf+0x38c>
 85c:	f7 01       	movw	r30, r14
 85e:	86 81       	ldd	r24, Z+6	; 0x06
 860:	97 81       	ldd	r25, Z+7	; 0x07
 862:	02 c0       	rjmp	.+4      	; 0x868 <vfprintf+0x3aa>
 864:	8f ef       	ldi	r24, 0xFF	; 255
 866:	9f ef       	ldi	r25, 0xFF	; 255
 868:	2c 96       	adiw	r28, 0x0c	; 12
 86a:	0f b6       	in	r0, 0x3f	; 63
 86c:	f8 94       	cli
 86e:	de bf       	out	0x3e, r29	; 62
 870:	0f be       	out	0x3f, r0	; 63
 872:	cd bf       	out	0x3d, r28	; 61
 874:	df 91       	pop	r29
 876:	cf 91       	pop	r28
 878:	1f 91       	pop	r17
 87a:	0f 91       	pop	r16
 87c:	ff 90       	pop	r15
 87e:	ef 90       	pop	r14
 880:	df 90       	pop	r13
 882:	cf 90       	pop	r12
 884:	bf 90       	pop	r11
 886:	af 90       	pop	r10
 888:	9f 90       	pop	r9
 88a:	8f 90       	pop	r8
 88c:	7f 90       	pop	r7
 88e:	6f 90       	pop	r6
 890:	5f 90       	pop	r5
 892:	4f 90       	pop	r4
 894:	3f 90       	pop	r3
 896:	2f 90       	pop	r2
 898:	08 95       	ret

0000089a <calloc>:
 89a:	0f 93       	push	r16
 89c:	1f 93       	push	r17
 89e:	cf 93       	push	r28
 8a0:	df 93       	push	r29
 8a2:	86 9f       	mul	r24, r22
 8a4:	80 01       	movw	r16, r0
 8a6:	87 9f       	mul	r24, r23
 8a8:	10 0d       	add	r17, r0
 8aa:	96 9f       	mul	r25, r22
 8ac:	10 0d       	add	r17, r0
 8ae:	11 24       	eor	r1, r1
 8b0:	c8 01       	movw	r24, r16
 8b2:	0d d0       	rcall	.+26     	; 0x8ce <malloc>
 8b4:	ec 01       	movw	r28, r24
 8b6:	00 97       	sbiw	r24, 0x00	; 0
 8b8:	21 f0       	breq	.+8      	; 0x8c2 <calloc+0x28>
 8ba:	a8 01       	movw	r20, r16
 8bc:	60 e0       	ldi	r22, 0x00	; 0
 8be:	70 e0       	ldi	r23, 0x00	; 0
 8c0:	38 d1       	rcall	.+624    	; 0xb32 <memset>
 8c2:	ce 01       	movw	r24, r28
 8c4:	df 91       	pop	r29
 8c6:	cf 91       	pop	r28
 8c8:	1f 91       	pop	r17
 8ca:	0f 91       	pop	r16
 8cc:	08 95       	ret

000008ce <malloc>:
 8ce:	cf 93       	push	r28
 8d0:	df 93       	push	r29
 8d2:	82 30       	cpi	r24, 0x02	; 2
 8d4:	91 05       	cpc	r25, r1
 8d6:	10 f4       	brcc	.+4      	; 0x8dc <malloc+0xe>
 8d8:	82 e0       	ldi	r24, 0x02	; 2
 8da:	90 e0       	ldi	r25, 0x00	; 0
 8dc:	e0 91 8c 02 	lds	r30, 0x028C
 8e0:	f0 91 8d 02 	lds	r31, 0x028D
 8e4:	20 e0       	ldi	r18, 0x00	; 0
 8e6:	30 e0       	ldi	r19, 0x00	; 0
 8e8:	a0 e0       	ldi	r26, 0x00	; 0
 8ea:	b0 e0       	ldi	r27, 0x00	; 0
 8ec:	30 97       	sbiw	r30, 0x00	; 0
 8ee:	39 f1       	breq	.+78     	; 0x93e <malloc+0x70>
 8f0:	40 81       	ld	r20, Z
 8f2:	51 81       	ldd	r21, Z+1	; 0x01
 8f4:	48 17       	cp	r20, r24
 8f6:	59 07       	cpc	r21, r25
 8f8:	b8 f0       	brcs	.+46     	; 0x928 <malloc+0x5a>
 8fa:	48 17       	cp	r20, r24
 8fc:	59 07       	cpc	r21, r25
 8fe:	71 f4       	brne	.+28     	; 0x91c <malloc+0x4e>
 900:	82 81       	ldd	r24, Z+2	; 0x02
 902:	93 81       	ldd	r25, Z+3	; 0x03
 904:	10 97       	sbiw	r26, 0x00	; 0
 906:	29 f0       	breq	.+10     	; 0x912 <malloc+0x44>
 908:	13 96       	adiw	r26, 0x03	; 3
 90a:	9c 93       	st	X, r25
 90c:	8e 93       	st	-X, r24
 90e:	12 97       	sbiw	r26, 0x02	; 2
 910:	2c c0       	rjmp	.+88     	; 0x96a <malloc+0x9c>
 912:	90 93 8d 02 	sts	0x028D, r25
 916:	80 93 8c 02 	sts	0x028C, r24
 91a:	27 c0       	rjmp	.+78     	; 0x96a <malloc+0x9c>
 91c:	21 15       	cp	r18, r1
 91e:	31 05       	cpc	r19, r1
 920:	31 f0       	breq	.+12     	; 0x92e <malloc+0x60>
 922:	42 17       	cp	r20, r18
 924:	53 07       	cpc	r21, r19
 926:	18 f0       	brcs	.+6      	; 0x92e <malloc+0x60>
 928:	a9 01       	movw	r20, r18
 92a:	db 01       	movw	r26, r22
 92c:	01 c0       	rjmp	.+2      	; 0x930 <malloc+0x62>
 92e:	ef 01       	movw	r28, r30
 930:	9a 01       	movw	r18, r20
 932:	bd 01       	movw	r22, r26
 934:	df 01       	movw	r26, r30
 936:	02 80       	ldd	r0, Z+2	; 0x02
 938:	f3 81       	ldd	r31, Z+3	; 0x03
 93a:	e0 2d       	mov	r30, r0
 93c:	d7 cf       	rjmp	.-82     	; 0x8ec <malloc+0x1e>
 93e:	21 15       	cp	r18, r1
 940:	31 05       	cpc	r19, r1
 942:	f9 f0       	breq	.+62     	; 0x982 <malloc+0xb4>
 944:	28 1b       	sub	r18, r24
 946:	39 0b       	sbc	r19, r25
 948:	24 30       	cpi	r18, 0x04	; 4
 94a:	31 05       	cpc	r19, r1
 94c:	80 f4       	brcc	.+32     	; 0x96e <malloc+0xa0>
 94e:	8a 81       	ldd	r24, Y+2	; 0x02
 950:	9b 81       	ldd	r25, Y+3	; 0x03
 952:	61 15       	cp	r22, r1
 954:	71 05       	cpc	r23, r1
 956:	21 f0       	breq	.+8      	; 0x960 <malloc+0x92>
 958:	fb 01       	movw	r30, r22
 95a:	93 83       	std	Z+3, r25	; 0x03
 95c:	82 83       	std	Z+2, r24	; 0x02
 95e:	04 c0       	rjmp	.+8      	; 0x968 <malloc+0x9a>
 960:	90 93 8d 02 	sts	0x028D, r25
 964:	80 93 8c 02 	sts	0x028C, r24
 968:	fe 01       	movw	r30, r28
 96a:	32 96       	adiw	r30, 0x02	; 2
 96c:	44 c0       	rjmp	.+136    	; 0x9f6 <malloc+0x128>
 96e:	fe 01       	movw	r30, r28
 970:	e2 0f       	add	r30, r18
 972:	f3 1f       	adc	r31, r19
 974:	81 93       	st	Z+, r24
 976:	91 93       	st	Z+, r25
 978:	22 50       	subi	r18, 0x02	; 2
 97a:	31 09       	sbc	r19, r1
 97c:	39 83       	std	Y+1, r19	; 0x01
 97e:	28 83       	st	Y, r18
 980:	3a c0       	rjmp	.+116    	; 0x9f6 <malloc+0x128>
 982:	20 91 8a 02 	lds	r18, 0x028A
 986:	30 91 8b 02 	lds	r19, 0x028B
 98a:	23 2b       	or	r18, r19
 98c:	41 f4       	brne	.+16     	; 0x99e <malloc+0xd0>
 98e:	20 91 02 02 	lds	r18, 0x0202
 992:	30 91 03 02 	lds	r19, 0x0203
 996:	30 93 8b 02 	sts	0x028B, r19
 99a:	20 93 8a 02 	sts	0x028A, r18
 99e:	20 91 00 02 	lds	r18, 0x0200
 9a2:	30 91 01 02 	lds	r19, 0x0201
 9a6:	21 15       	cp	r18, r1
 9a8:	31 05       	cpc	r19, r1
 9aa:	41 f4       	brne	.+16     	; 0x9bc <malloc+0xee>
 9ac:	2d b7       	in	r18, 0x3d	; 61
 9ae:	3e b7       	in	r19, 0x3e	; 62
 9b0:	40 91 04 02 	lds	r20, 0x0204
 9b4:	50 91 05 02 	lds	r21, 0x0205
 9b8:	24 1b       	sub	r18, r20
 9ba:	35 0b       	sbc	r19, r21
 9bc:	e0 91 8a 02 	lds	r30, 0x028A
 9c0:	f0 91 8b 02 	lds	r31, 0x028B
 9c4:	e2 17       	cp	r30, r18
 9c6:	f3 07       	cpc	r31, r19
 9c8:	a0 f4       	brcc	.+40     	; 0x9f2 <malloc+0x124>
 9ca:	2e 1b       	sub	r18, r30
 9cc:	3f 0b       	sbc	r19, r31
 9ce:	28 17       	cp	r18, r24
 9d0:	39 07       	cpc	r19, r25
 9d2:	78 f0       	brcs	.+30     	; 0x9f2 <malloc+0x124>
 9d4:	ac 01       	movw	r20, r24
 9d6:	4e 5f       	subi	r20, 0xFE	; 254
 9d8:	5f 4f       	sbci	r21, 0xFF	; 255
 9da:	24 17       	cp	r18, r20
 9dc:	35 07       	cpc	r19, r21
 9de:	48 f0       	brcs	.+18     	; 0x9f2 <malloc+0x124>
 9e0:	4e 0f       	add	r20, r30
 9e2:	5f 1f       	adc	r21, r31
 9e4:	50 93 8b 02 	sts	0x028B, r21
 9e8:	40 93 8a 02 	sts	0x028A, r20
 9ec:	81 93       	st	Z+, r24
 9ee:	91 93       	st	Z+, r25
 9f0:	02 c0       	rjmp	.+4      	; 0x9f6 <malloc+0x128>
 9f2:	e0 e0       	ldi	r30, 0x00	; 0
 9f4:	f0 e0       	ldi	r31, 0x00	; 0
 9f6:	cf 01       	movw	r24, r30
 9f8:	df 91       	pop	r29
 9fa:	cf 91       	pop	r28
 9fc:	08 95       	ret

000009fe <free>:
 9fe:	cf 93       	push	r28
 a00:	df 93       	push	r29
 a02:	00 97       	sbiw	r24, 0x00	; 0
 a04:	09 f4       	brne	.+2      	; 0xa08 <free+0xa>
 a06:	87 c0       	rjmp	.+270    	; 0xb16 <free+0x118>
 a08:	fc 01       	movw	r30, r24
 a0a:	32 97       	sbiw	r30, 0x02	; 2
 a0c:	13 82       	std	Z+3, r1	; 0x03
 a0e:	12 82       	std	Z+2, r1	; 0x02
 a10:	c0 91 8c 02 	lds	r28, 0x028C
 a14:	d0 91 8d 02 	lds	r29, 0x028D
 a18:	20 97       	sbiw	r28, 0x00	; 0
 a1a:	81 f4       	brne	.+32     	; 0xa3c <free+0x3e>
 a1c:	20 81       	ld	r18, Z
 a1e:	31 81       	ldd	r19, Z+1	; 0x01
 a20:	28 0f       	add	r18, r24
 a22:	39 1f       	adc	r19, r25
 a24:	80 91 8a 02 	lds	r24, 0x028A
 a28:	90 91 8b 02 	lds	r25, 0x028B
 a2c:	82 17       	cp	r24, r18
 a2e:	93 07       	cpc	r25, r19
 a30:	79 f5       	brne	.+94     	; 0xa90 <free+0x92>
 a32:	f0 93 8b 02 	sts	0x028B, r31
 a36:	e0 93 8a 02 	sts	0x028A, r30
 a3a:	6d c0       	rjmp	.+218    	; 0xb16 <free+0x118>
 a3c:	de 01       	movw	r26, r28
 a3e:	20 e0       	ldi	r18, 0x00	; 0
 a40:	30 e0       	ldi	r19, 0x00	; 0
 a42:	ae 17       	cp	r26, r30
 a44:	bf 07       	cpc	r27, r31
 a46:	50 f4       	brcc	.+20     	; 0xa5c <free+0x5e>
 a48:	12 96       	adiw	r26, 0x02	; 2
 a4a:	4d 91       	ld	r20, X+
 a4c:	5c 91       	ld	r21, X
 a4e:	13 97       	sbiw	r26, 0x03	; 3
 a50:	9d 01       	movw	r18, r26
 a52:	41 15       	cp	r20, r1
 a54:	51 05       	cpc	r21, r1
 a56:	09 f1       	breq	.+66     	; 0xa9a <free+0x9c>
 a58:	da 01       	movw	r26, r20
 a5a:	f3 cf       	rjmp	.-26     	; 0xa42 <free+0x44>
 a5c:	b3 83       	std	Z+3, r27	; 0x03
 a5e:	a2 83       	std	Z+2, r26	; 0x02
 a60:	40 81       	ld	r20, Z
 a62:	51 81       	ldd	r21, Z+1	; 0x01
 a64:	84 0f       	add	r24, r20
 a66:	95 1f       	adc	r25, r21
 a68:	8a 17       	cp	r24, r26
 a6a:	9b 07       	cpc	r25, r27
 a6c:	71 f4       	brne	.+28     	; 0xa8a <free+0x8c>
 a6e:	8d 91       	ld	r24, X+
 a70:	9c 91       	ld	r25, X
 a72:	11 97       	sbiw	r26, 0x01	; 1
 a74:	84 0f       	add	r24, r20
 a76:	95 1f       	adc	r25, r21
 a78:	02 96       	adiw	r24, 0x02	; 2
 a7a:	91 83       	std	Z+1, r25	; 0x01
 a7c:	80 83       	st	Z, r24
 a7e:	12 96       	adiw	r26, 0x02	; 2
 a80:	8d 91       	ld	r24, X+
 a82:	9c 91       	ld	r25, X
 a84:	13 97       	sbiw	r26, 0x03	; 3
 a86:	93 83       	std	Z+3, r25	; 0x03
 a88:	82 83       	std	Z+2, r24	; 0x02
 a8a:	21 15       	cp	r18, r1
 a8c:	31 05       	cpc	r19, r1
 a8e:	29 f4       	brne	.+10     	; 0xa9a <free+0x9c>
 a90:	f0 93 8d 02 	sts	0x028D, r31
 a94:	e0 93 8c 02 	sts	0x028C, r30
 a98:	3e c0       	rjmp	.+124    	; 0xb16 <free+0x118>
 a9a:	d9 01       	movw	r26, r18
 a9c:	13 96       	adiw	r26, 0x03	; 3
 a9e:	fc 93       	st	X, r31
 aa0:	ee 93       	st	-X, r30
 aa2:	12 97       	sbiw	r26, 0x02	; 2
 aa4:	4d 91       	ld	r20, X+
 aa6:	5d 91       	ld	r21, X+
 aa8:	a4 0f       	add	r26, r20
 aaa:	b5 1f       	adc	r27, r21
 aac:	ea 17       	cp	r30, r26
 aae:	fb 07       	cpc	r31, r27
 ab0:	79 f4       	brne	.+30     	; 0xad0 <free+0xd2>
 ab2:	80 81       	ld	r24, Z
 ab4:	91 81       	ldd	r25, Z+1	; 0x01
 ab6:	84 0f       	add	r24, r20
 ab8:	95 1f       	adc	r25, r21
 aba:	02 96       	adiw	r24, 0x02	; 2
 abc:	d9 01       	movw	r26, r18
 abe:	11 96       	adiw	r26, 0x01	; 1
 ac0:	9c 93       	st	X, r25
 ac2:	8e 93       	st	-X, r24
 ac4:	82 81       	ldd	r24, Z+2	; 0x02
 ac6:	93 81       	ldd	r25, Z+3	; 0x03
 ac8:	13 96       	adiw	r26, 0x03	; 3
 aca:	9c 93       	st	X, r25
 acc:	8e 93       	st	-X, r24
 ace:	12 97       	sbiw	r26, 0x02	; 2
 ad0:	e0 e0       	ldi	r30, 0x00	; 0
 ad2:	f0 e0       	ldi	r31, 0x00	; 0
 ad4:	8a 81       	ldd	r24, Y+2	; 0x02
 ad6:	9b 81       	ldd	r25, Y+3	; 0x03
 ad8:	00 97       	sbiw	r24, 0x00	; 0
 ada:	19 f0       	breq	.+6      	; 0xae2 <free+0xe4>
 adc:	fe 01       	movw	r30, r28
 ade:	ec 01       	movw	r28, r24
 ae0:	f9 cf       	rjmp	.-14     	; 0xad4 <free+0xd6>
 ae2:	ce 01       	movw	r24, r28
 ae4:	02 96       	adiw	r24, 0x02	; 2
 ae6:	28 81       	ld	r18, Y
 ae8:	39 81       	ldd	r19, Y+1	; 0x01
 aea:	82 0f       	add	r24, r18
 aec:	93 1f       	adc	r25, r19
 aee:	20 91 8a 02 	lds	r18, 0x028A
 af2:	30 91 8b 02 	lds	r19, 0x028B
 af6:	28 17       	cp	r18, r24
 af8:	39 07       	cpc	r19, r25
 afa:	69 f4       	brne	.+26     	; 0xb16 <free+0x118>
 afc:	30 97       	sbiw	r30, 0x00	; 0
 afe:	29 f4       	brne	.+10     	; 0xb0a <free+0x10c>
 b00:	10 92 8d 02 	sts	0x028D, r1
 b04:	10 92 8c 02 	sts	0x028C, r1
 b08:	02 c0       	rjmp	.+4      	; 0xb0e <free+0x110>
 b0a:	13 82       	std	Z+3, r1	; 0x03
 b0c:	12 82       	std	Z+2, r1	; 0x02
 b0e:	d0 93 8b 02 	sts	0x028B, r29
 b12:	c0 93 8a 02 	sts	0x028A, r28
 b16:	df 91       	pop	r29
 b18:	cf 91       	pop	r28
 b1a:	08 95       	ret

00000b1c <strnlen_P>:
 b1c:	fc 01       	movw	r30, r24
 b1e:	05 90       	lpm	r0, Z+
 b20:	61 50       	subi	r22, 0x01	; 1
 b22:	70 40       	sbci	r23, 0x00	; 0
 b24:	01 10       	cpse	r0, r1
 b26:	d8 f7       	brcc	.-10     	; 0xb1e <strnlen_P+0x2>
 b28:	80 95       	com	r24
 b2a:	90 95       	com	r25
 b2c:	8e 0f       	add	r24, r30
 b2e:	9f 1f       	adc	r25, r31
 b30:	08 95       	ret

00000b32 <memset>:
 b32:	dc 01       	movw	r26, r24
 b34:	01 c0       	rjmp	.+2      	; 0xb38 <memset+0x6>
 b36:	6d 93       	st	X+, r22
 b38:	41 50       	subi	r20, 0x01	; 1
 b3a:	50 40       	sbci	r21, 0x00	; 0
 b3c:	e0 f7       	brcc	.-8      	; 0xb36 <memset+0x4>
 b3e:	08 95       	ret

00000b40 <strnlen>:
 b40:	fc 01       	movw	r30, r24
 b42:	61 50       	subi	r22, 0x01	; 1
 b44:	70 40       	sbci	r23, 0x00	; 0
 b46:	01 90       	ld	r0, Z+
 b48:	01 10       	cpse	r0, r1
 b4a:	d8 f7       	brcc	.-10     	; 0xb42 <strnlen+0x2>
 b4c:	80 95       	com	r24
 b4e:	90 95       	com	r25
 b50:	8e 0f       	add	r24, r30
 b52:	9f 1f       	adc	r25, r31
 b54:	08 95       	ret

00000b56 <fputc>:
 b56:	0f 93       	push	r16
 b58:	1f 93       	push	r17
 b5a:	cf 93       	push	r28
 b5c:	df 93       	push	r29
 b5e:	18 2f       	mov	r17, r24
 b60:	09 2f       	mov	r16, r25
 b62:	eb 01       	movw	r28, r22
 b64:	8b 81       	ldd	r24, Y+3	; 0x03
 b66:	81 fd       	sbrc	r24, 1
 b68:	03 c0       	rjmp	.+6      	; 0xb70 <fputc+0x1a>
 b6a:	8f ef       	ldi	r24, 0xFF	; 255
 b6c:	9f ef       	ldi	r25, 0xFF	; 255
 b6e:	20 c0       	rjmp	.+64     	; 0xbb0 <fputc+0x5a>
 b70:	82 ff       	sbrs	r24, 2
 b72:	10 c0       	rjmp	.+32     	; 0xb94 <fputc+0x3e>
 b74:	4e 81       	ldd	r20, Y+6	; 0x06
 b76:	5f 81       	ldd	r21, Y+7	; 0x07
 b78:	2c 81       	ldd	r18, Y+4	; 0x04
 b7a:	3d 81       	ldd	r19, Y+5	; 0x05
 b7c:	42 17       	cp	r20, r18
 b7e:	53 07       	cpc	r21, r19
 b80:	7c f4       	brge	.+30     	; 0xba0 <fputc+0x4a>
 b82:	e8 81       	ld	r30, Y
 b84:	f9 81       	ldd	r31, Y+1	; 0x01
 b86:	9f 01       	movw	r18, r30
 b88:	2f 5f       	subi	r18, 0xFF	; 255
 b8a:	3f 4f       	sbci	r19, 0xFF	; 255
 b8c:	39 83       	std	Y+1, r19	; 0x01
 b8e:	28 83       	st	Y, r18
 b90:	10 83       	st	Z, r17
 b92:	06 c0       	rjmp	.+12     	; 0xba0 <fputc+0x4a>
 b94:	e8 85       	ldd	r30, Y+8	; 0x08
 b96:	f9 85       	ldd	r31, Y+9	; 0x09
 b98:	81 2f       	mov	r24, r17
 b9a:	19 95       	eicall
 b9c:	89 2b       	or	r24, r25
 b9e:	29 f7       	brne	.-54     	; 0xb6a <fputc+0x14>
 ba0:	2e 81       	ldd	r18, Y+6	; 0x06
 ba2:	3f 81       	ldd	r19, Y+7	; 0x07
 ba4:	2f 5f       	subi	r18, 0xFF	; 255
 ba6:	3f 4f       	sbci	r19, 0xFF	; 255
 ba8:	3f 83       	std	Y+7, r19	; 0x07
 baa:	2e 83       	std	Y+6, r18	; 0x06
 bac:	81 2f       	mov	r24, r17
 bae:	90 2f       	mov	r25, r16
 bb0:	df 91       	pop	r29
 bb2:	cf 91       	pop	r28
 bb4:	1f 91       	pop	r17
 bb6:	0f 91       	pop	r16
 bb8:	08 95       	ret

00000bba <__ultoa_invert>:
 bba:	fa 01       	movw	r30, r20
 bbc:	aa 27       	eor	r26, r26
 bbe:	28 30       	cpi	r18, 0x08	; 8
 bc0:	51 f1       	breq	.+84     	; 0xc16 <__ultoa_invert+0x5c>
 bc2:	20 31       	cpi	r18, 0x10	; 16
 bc4:	81 f1       	breq	.+96     	; 0xc26 <__ultoa_invert+0x6c>
 bc6:	e8 94       	clt
 bc8:	6f 93       	push	r22
 bca:	6e 7f       	andi	r22, 0xFE	; 254
 bcc:	6e 5f       	subi	r22, 0xFE	; 254
 bce:	7f 4f       	sbci	r23, 0xFF	; 255
 bd0:	8f 4f       	sbci	r24, 0xFF	; 255
 bd2:	9f 4f       	sbci	r25, 0xFF	; 255
 bd4:	af 4f       	sbci	r26, 0xFF	; 255
 bd6:	b1 e0       	ldi	r27, 0x01	; 1
 bd8:	3e d0       	rcall	.+124    	; 0xc56 <__ultoa_invert+0x9c>
 bda:	b4 e0       	ldi	r27, 0x04	; 4
 bdc:	3c d0       	rcall	.+120    	; 0xc56 <__ultoa_invert+0x9c>
 bde:	67 0f       	add	r22, r23
 be0:	78 1f       	adc	r23, r24
 be2:	89 1f       	adc	r24, r25
 be4:	9a 1f       	adc	r25, r26
 be6:	a1 1d       	adc	r26, r1
 be8:	68 0f       	add	r22, r24
 bea:	79 1f       	adc	r23, r25
 bec:	8a 1f       	adc	r24, r26
 bee:	91 1d       	adc	r25, r1
 bf0:	a1 1d       	adc	r26, r1
 bf2:	6a 0f       	add	r22, r26
 bf4:	71 1d       	adc	r23, r1
 bf6:	81 1d       	adc	r24, r1
 bf8:	91 1d       	adc	r25, r1
 bfa:	a1 1d       	adc	r26, r1
 bfc:	20 d0       	rcall	.+64     	; 0xc3e <__ultoa_invert+0x84>
 bfe:	09 f4       	brne	.+2      	; 0xc02 <__ultoa_invert+0x48>
 c00:	68 94       	set
 c02:	3f 91       	pop	r19
 c04:	2a e0       	ldi	r18, 0x0A	; 10
 c06:	26 9f       	mul	r18, r22
 c08:	11 24       	eor	r1, r1
 c0a:	30 19       	sub	r19, r0
 c0c:	30 5d       	subi	r19, 0xD0	; 208
 c0e:	31 93       	st	Z+, r19
 c10:	de f6       	brtc	.-74     	; 0xbc8 <__ultoa_invert+0xe>
 c12:	cf 01       	movw	r24, r30
 c14:	08 95       	ret
 c16:	46 2f       	mov	r20, r22
 c18:	47 70       	andi	r20, 0x07	; 7
 c1a:	40 5d       	subi	r20, 0xD0	; 208
 c1c:	41 93       	st	Z+, r20
 c1e:	b3 e0       	ldi	r27, 0x03	; 3
 c20:	0f d0       	rcall	.+30     	; 0xc40 <__ultoa_invert+0x86>
 c22:	c9 f7       	brne	.-14     	; 0xc16 <__ultoa_invert+0x5c>
 c24:	f6 cf       	rjmp	.-20     	; 0xc12 <__ultoa_invert+0x58>
 c26:	46 2f       	mov	r20, r22
 c28:	4f 70       	andi	r20, 0x0F	; 15
 c2a:	40 5d       	subi	r20, 0xD0	; 208
 c2c:	4a 33       	cpi	r20, 0x3A	; 58
 c2e:	18 f0       	brcs	.+6      	; 0xc36 <__ultoa_invert+0x7c>
 c30:	49 5d       	subi	r20, 0xD9	; 217
 c32:	31 fd       	sbrc	r19, 1
 c34:	40 52       	subi	r20, 0x20	; 32
 c36:	41 93       	st	Z+, r20
 c38:	02 d0       	rcall	.+4      	; 0xc3e <__ultoa_invert+0x84>
 c3a:	a9 f7       	brne	.-22     	; 0xc26 <__ultoa_invert+0x6c>
 c3c:	ea cf       	rjmp	.-44     	; 0xc12 <__ultoa_invert+0x58>
 c3e:	b4 e0       	ldi	r27, 0x04	; 4
 c40:	a6 95       	lsr	r26
 c42:	97 95       	ror	r25
 c44:	87 95       	ror	r24
 c46:	77 95       	ror	r23
 c48:	67 95       	ror	r22
 c4a:	ba 95       	dec	r27
 c4c:	c9 f7       	brne	.-14     	; 0xc40 <__ultoa_invert+0x86>
 c4e:	00 97       	sbiw	r24, 0x00	; 0
 c50:	61 05       	cpc	r22, r1
 c52:	71 05       	cpc	r23, r1
 c54:	08 95       	ret
 c56:	9b 01       	movw	r18, r22
 c58:	ac 01       	movw	r20, r24
 c5a:	0a 2e       	mov	r0, r26
 c5c:	06 94       	lsr	r0
 c5e:	57 95       	ror	r21
 c60:	47 95       	ror	r20
 c62:	37 95       	ror	r19
 c64:	27 95       	ror	r18
 c66:	ba 95       	dec	r27
 c68:	c9 f7       	brne	.-14     	; 0xc5c <__ultoa_invert+0xa2>
 c6a:	62 0f       	add	r22, r18
 c6c:	73 1f       	adc	r23, r19
 c6e:	84 1f       	adc	r24, r20
 c70:	95 1f       	adc	r25, r21
 c72:	a0 1d       	adc	r26, r0
 c74:	08 95       	ret

00000c76 <_exit>:
 c76:	f8 94       	cli

00000c78 <__stop_program>:
 c78:	ff cf       	rjmp	.-2      	; 0xc78 <__stop_program>
