
Oving1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000008  00800100  0000043c  000004d0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000043c  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000000a  00800108  00800108  000004d8  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000004d8  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 000000b8  00000000  00000000  00000508  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   000009f5  00000000  00000000  000005c0  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000359  00000000  00000000  00000fb5  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   0000030e  00000000  00000000  0000130e  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  0000011c  00000000  00000000  0000161c  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000272  00000000  00000000  00001738  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000072  00000000  00000000  000019aa  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000088  00000000  00000000  00001a1c  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 38 00 	jmp	0x70	; 0x70 <__ctors_end>
   4:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
   8:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
   c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  10:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  14:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  18:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  1c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  20:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  24:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  28:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  2c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  30:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  34:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  38:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  3c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  40:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  44:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  48:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  4c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  50:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  54:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  58:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  5c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  60:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  64:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  68:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  6c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>

00000070 <__ctors_end>:
  70:	11 24       	eor	r1, r1
  72:	1f be       	out	0x3f, r1	; 63
  74:	cf ef       	ldi	r28, 0xFF	; 255
  76:	d4 e0       	ldi	r29, 0x04	; 4
  78:	de bf       	out	0x3e, r29	; 62
  7a:	cd bf       	out	0x3d, r28	; 61

0000007c <__do_copy_data>:
  7c:	11 e0       	ldi	r17, 0x01	; 1
  7e:	a0 e0       	ldi	r26, 0x00	; 0
  80:	b1 e0       	ldi	r27, 0x01	; 1
  82:	ec e3       	ldi	r30, 0x3C	; 60
  84:	f4 e0       	ldi	r31, 0x04	; 4
  86:	02 c0       	rjmp	.+4      	; 0x8c <__do_copy_data+0x10>
  88:	05 90       	lpm	r0, Z+
  8a:	0d 92       	st	X+, r0
  8c:	a8 30       	cpi	r26, 0x08	; 8
  8e:	b1 07       	cpc	r27, r17
  90:	d9 f7       	brne	.-10     	; 0x88 <__do_copy_data+0xc>

00000092 <__do_clear_bss>:
  92:	21 e0       	ldi	r18, 0x01	; 1
  94:	a8 e0       	ldi	r26, 0x08	; 8
  96:	b1 e0       	ldi	r27, 0x01	; 1
  98:	01 c0       	rjmp	.+2      	; 0x9c <.do_clear_bss_start>

0000009a <.do_clear_bss_loop>:
  9a:	1d 92       	st	X+, r1

0000009c <.do_clear_bss_start>:
  9c:	a2 31       	cpi	r26, 0x12	; 18
  9e:	b2 07       	cpc	r27, r18
  a0:	e1 f7       	brne	.-8      	; 0x9a <.do_clear_bss_loop>
  a2:	0e 94 5e 00 	call	0xbc	; 0xbc <main>
  a6:	0c 94 1c 02 	jmp	0x438	; 0x438 <_exit>

000000aa <__bad_interrupt>:
  aa:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000ae <OLED_print>:
}


void write_OLED_cmd(int8_t number){
	volatile char *ext_oled_cs = (char *) 0x1000;
	*ext_oled_cs = number;
  ae:	80 eb       	ldi	r24, 0xB0	; 176
  b0:	80 93 00 10 	sts	0x1000, r24
}

void write_OLED_data(int8_t number){
	volatile char *ext_oled_dc = (char *) 0x1200;
	*ext_oled_dc = number;
  b4:	8f ef       	ldi	r24, 0xFF	; 255
  b6:	80 93 00 12 	sts	0x1200, r24
  ba:	08 95       	ret

000000bc <main>:

int main(void)
{	
	//ov1////////////////////////////////
	
	UART_Init(MYUBRR);
  bc:	8f e1       	ldi	r24, 0x1F	; 31
  be:	90 e0       	ldi	r25, 0x00	; 0
  c0:	0e 94 7a 00 	call	0xf4	; 0xf4 <UART_Init>
	 //}
	
	
	//ov2////////////////////////////////
	
	DDRE=0x3;
  c4:	83 e0       	ldi	r24, 0x03	; 3
  c6:	86 b9       	out	0x06, r24	; 6
	DDRA=0xFF;
  c8:	8f ef       	ldi	r24, 0xFF	; 255
  ca:	8a bb       	out	0x1a, r24	; 26
	PORTA=0x00;
  cc:	1b ba       	out	0x1b, r1	; 27
	PORTE=0x2;
  ce:	92 e0       	ldi	r25, 0x02	; 2
  d0:	97 b9       	out	0x07, r25	; 7
	//PORTA|=(1<<PA1);
	//SRAM_test();
	
	//GAL_test();
	
	DDRD = 0xFF;
  d2:	81 bb       	out	0x11, r24	; 17
	
	PORTD = (1<<PD6);
  d4:	80 e4       	ldi	r24, 0x40	; 64
  d6:	82 bb       	out	0x12, r24	; 18
	PORTD = (0<<PD7);
  d8:	12 ba       	out	0x12, r1	; 18
	//////////////////////////
	///////oving4/////////////
	/////////////////////////
	
	while(1){
		OLED_print("#");
  da:	86 e0       	ldi	r24, 0x06	; 6
  dc:	91 e0       	ldi	r25, 0x01	; 1
  de:	0e 94 57 00 	call	0xae	; 0xae <OLED_print>
  e2:	fb cf       	rjmp	.-10     	; 0xda <main+0x1e>

000000e4 <UART_Transmit>:
	}
	
void UART_Transmit( unsigned char data )
{
	/* Wait for empty transmit buffer*/
		while( !( UCSR0A & (1<<UDRE0)) )
  e4:	5d 9b       	sbis	0x0b, 5	; 11
  e6:	fe cf       	rjmp	.-4      	; 0xe4 <UART_Transmit>
		;
	/* Put data into buffer, sends the data*/
		UDR0 = data;
  e8:	8c b9       	out	0x0c, r24	; 12
  ea:	08 95       	ret

000000ec <UART_Receive>:
}

unsigned char UART_Receive(void)
	{
		/* Wait for data to be received*/
		while( !(UCSR0A & (1<<RXC0)) )
  ec:	5f 9b       	sbis	0x0b, 7	; 11
  ee:	fe cf       	rjmp	.-4      	; 0xec <UART_Receive>
			;
		/* Get and return received data from buffer*/
		return UDR0;
  f0:	8c b1       	in	r24, 0x0c	; 12
  f2:	08 95       	ret

000000f4 <UART_Init>:
#define MYUBRR FOSC/16/BAUD-1

void UART_Init(unsigned int ubrr)
	{
		/* Set baud rate */
		UBRR0H = (unsigned char)(ubrr>>8);
  f4:	90 bd       	out	0x20, r25	; 32
		UBRR0L = (unsigned char)ubrr;
  f6:	89 b9       	out	0x09, r24	; 9
		/* Enable receiver and transmitter */
		UCSR0B = (1<<RXEN0)|(1<<TXEN0);
  f8:	88 e1       	ldi	r24, 0x18	; 24
  fa:	8a b9       	out	0x0a, r24	; 10
		/* 
		Set frame format: 8data, 2stop bit
		*/
		UCSR0C = (1<<URSEL0)|(1<<USBS0)|(3<<UCSZ00);
  fc:	8e e8       	ldi	r24, 0x8E	; 142
  fe:	80 bd       	out	0x20, r24	; 32
		fdevopen(&UART_Transmit, &UART_Receive);
 100:	66 e7       	ldi	r22, 0x76	; 118
 102:	70 e0       	ldi	r23, 0x00	; 0
 104:	82 e7       	ldi	r24, 0x72	; 114
 106:	90 e0       	ldi	r25, 0x00	; 0
 108:	0e 94 87 00 	call	0x10e	; 0x10e <fdevopen>
 10c:	08 95       	ret

0000010e <fdevopen>:
 10e:	0f 93       	push	r16
 110:	1f 93       	push	r17
 112:	cf 93       	push	r28
 114:	df 93       	push	r29
 116:	ec 01       	movw	r28, r24
 118:	8b 01       	movw	r16, r22
 11a:	00 97       	sbiw	r24, 0x00	; 0
 11c:	31 f4       	brne	.+12     	; 0x12a <fdevopen+0x1c>
 11e:	61 15       	cp	r22, r1
 120:	71 05       	cpc	r23, r1
 122:	19 f4       	brne	.+6      	; 0x12a <fdevopen+0x1c>
 124:	80 e0       	ldi	r24, 0x00	; 0
 126:	90 e0       	ldi	r25, 0x00	; 0
 128:	38 c0       	rjmp	.+112    	; 0x19a <fdevopen+0x8c>
 12a:	6e e0       	ldi	r22, 0x0E	; 14
 12c:	70 e0       	ldi	r23, 0x00	; 0
 12e:	81 e0       	ldi	r24, 0x01	; 1
 130:	90 e0       	ldi	r25, 0x00	; 0
 132:	0e 94 d2 00 	call	0x1a4	; 0x1a4 <calloc>
 136:	fc 01       	movw	r30, r24
 138:	00 97       	sbiw	r24, 0x00	; 0
 13a:	a1 f3       	breq	.-24     	; 0x124 <fdevopen+0x16>
 13c:	80 e8       	ldi	r24, 0x80	; 128
 13e:	83 83       	std	Z+3, r24	; 0x03
 140:	01 15       	cp	r16, r1
 142:	11 05       	cpc	r17, r1
 144:	71 f0       	breq	.+28     	; 0x162 <fdevopen+0x54>
 146:	13 87       	std	Z+11, r17	; 0x0b
 148:	02 87       	std	Z+10, r16	; 0x0a
 14a:	81 e8       	ldi	r24, 0x81	; 129
 14c:	83 83       	std	Z+3, r24	; 0x03
 14e:	80 91 08 01 	lds	r24, 0x0108
 152:	90 91 09 01 	lds	r25, 0x0109
 156:	89 2b       	or	r24, r25
 158:	21 f4       	brne	.+8      	; 0x162 <fdevopen+0x54>
 15a:	f0 93 09 01 	sts	0x0109, r31
 15e:	e0 93 08 01 	sts	0x0108, r30
 162:	20 97       	sbiw	r28, 0x00	; 0
 164:	c9 f0       	breq	.+50     	; 0x198 <fdevopen+0x8a>
 166:	d1 87       	std	Z+9, r29	; 0x09
 168:	c0 87       	std	Z+8, r28	; 0x08
 16a:	83 81       	ldd	r24, Z+3	; 0x03
 16c:	82 60       	ori	r24, 0x02	; 2
 16e:	83 83       	std	Z+3, r24	; 0x03
 170:	80 91 0a 01 	lds	r24, 0x010A
 174:	90 91 0b 01 	lds	r25, 0x010B
 178:	89 2b       	or	r24, r25
 17a:	71 f4       	brne	.+28     	; 0x198 <fdevopen+0x8a>
 17c:	f0 93 0b 01 	sts	0x010B, r31
 180:	e0 93 0a 01 	sts	0x010A, r30
 184:	80 91 0c 01 	lds	r24, 0x010C
 188:	90 91 0d 01 	lds	r25, 0x010D
 18c:	89 2b       	or	r24, r25
 18e:	21 f4       	brne	.+8      	; 0x198 <fdevopen+0x8a>
 190:	f0 93 0d 01 	sts	0x010D, r31
 194:	e0 93 0c 01 	sts	0x010C, r30
 198:	cf 01       	movw	r24, r30
 19a:	df 91       	pop	r29
 19c:	cf 91       	pop	r28
 19e:	1f 91       	pop	r17
 1a0:	0f 91       	pop	r16
 1a2:	08 95       	ret

000001a4 <calloc>:
 1a4:	0f 93       	push	r16
 1a6:	1f 93       	push	r17
 1a8:	cf 93       	push	r28
 1aa:	df 93       	push	r29
 1ac:	86 9f       	mul	r24, r22
 1ae:	80 01       	movw	r16, r0
 1b0:	87 9f       	mul	r24, r23
 1b2:	10 0d       	add	r17, r0
 1b4:	96 9f       	mul	r25, r22
 1b6:	10 0d       	add	r17, r0
 1b8:	11 24       	eor	r1, r1
 1ba:	c8 01       	movw	r24, r16
 1bc:	0e 94 ee 00 	call	0x1dc	; 0x1dc <malloc>
 1c0:	ec 01       	movw	r28, r24
 1c2:	00 97       	sbiw	r24, 0x00	; 0
 1c4:	29 f0       	breq	.+10     	; 0x1d0 <calloc+0x2c>
 1c6:	a8 01       	movw	r20, r16
 1c8:	60 e0       	ldi	r22, 0x00	; 0
 1ca:	70 e0       	ldi	r23, 0x00	; 0
 1cc:	0e 94 15 02 	call	0x42a	; 0x42a <memset>
 1d0:	ce 01       	movw	r24, r28
 1d2:	df 91       	pop	r29
 1d4:	cf 91       	pop	r28
 1d6:	1f 91       	pop	r17
 1d8:	0f 91       	pop	r16
 1da:	08 95       	ret

000001dc <malloc>:
 1dc:	cf 93       	push	r28
 1de:	df 93       	push	r29
 1e0:	82 30       	cpi	r24, 0x02	; 2
 1e2:	91 05       	cpc	r25, r1
 1e4:	10 f4       	brcc	.+4      	; 0x1ea <malloc+0xe>
 1e6:	82 e0       	ldi	r24, 0x02	; 2
 1e8:	90 e0       	ldi	r25, 0x00	; 0
 1ea:	e0 91 10 01 	lds	r30, 0x0110
 1ee:	f0 91 11 01 	lds	r31, 0x0111
 1f2:	20 e0       	ldi	r18, 0x00	; 0
 1f4:	30 e0       	ldi	r19, 0x00	; 0
 1f6:	a0 e0       	ldi	r26, 0x00	; 0
 1f8:	b0 e0       	ldi	r27, 0x00	; 0
 1fa:	30 97       	sbiw	r30, 0x00	; 0
 1fc:	39 f1       	breq	.+78     	; 0x24c <malloc+0x70>
 1fe:	40 81       	ld	r20, Z
 200:	51 81       	ldd	r21, Z+1	; 0x01
 202:	48 17       	cp	r20, r24
 204:	59 07       	cpc	r21, r25
 206:	b8 f0       	brcs	.+46     	; 0x236 <malloc+0x5a>
 208:	48 17       	cp	r20, r24
 20a:	59 07       	cpc	r21, r25
 20c:	71 f4       	brne	.+28     	; 0x22a <malloc+0x4e>
 20e:	82 81       	ldd	r24, Z+2	; 0x02
 210:	93 81       	ldd	r25, Z+3	; 0x03
 212:	10 97       	sbiw	r26, 0x00	; 0
 214:	29 f0       	breq	.+10     	; 0x220 <malloc+0x44>
 216:	13 96       	adiw	r26, 0x03	; 3
 218:	9c 93       	st	X, r25
 21a:	8e 93       	st	-X, r24
 21c:	12 97       	sbiw	r26, 0x02	; 2
 21e:	2c c0       	rjmp	.+88     	; 0x278 <malloc+0x9c>
 220:	90 93 11 01 	sts	0x0111, r25
 224:	80 93 10 01 	sts	0x0110, r24
 228:	27 c0       	rjmp	.+78     	; 0x278 <malloc+0x9c>
 22a:	21 15       	cp	r18, r1
 22c:	31 05       	cpc	r19, r1
 22e:	31 f0       	breq	.+12     	; 0x23c <malloc+0x60>
 230:	42 17       	cp	r20, r18
 232:	53 07       	cpc	r21, r19
 234:	18 f0       	brcs	.+6      	; 0x23c <malloc+0x60>
 236:	a9 01       	movw	r20, r18
 238:	db 01       	movw	r26, r22
 23a:	01 c0       	rjmp	.+2      	; 0x23e <malloc+0x62>
 23c:	ef 01       	movw	r28, r30
 23e:	9a 01       	movw	r18, r20
 240:	bd 01       	movw	r22, r26
 242:	df 01       	movw	r26, r30
 244:	02 80       	ldd	r0, Z+2	; 0x02
 246:	f3 81       	ldd	r31, Z+3	; 0x03
 248:	e0 2d       	mov	r30, r0
 24a:	d7 cf       	rjmp	.-82     	; 0x1fa <malloc+0x1e>
 24c:	21 15       	cp	r18, r1
 24e:	31 05       	cpc	r19, r1
 250:	f9 f0       	breq	.+62     	; 0x290 <malloc+0xb4>
 252:	28 1b       	sub	r18, r24
 254:	39 0b       	sbc	r19, r25
 256:	24 30       	cpi	r18, 0x04	; 4
 258:	31 05       	cpc	r19, r1
 25a:	80 f4       	brcc	.+32     	; 0x27c <malloc+0xa0>
 25c:	8a 81       	ldd	r24, Y+2	; 0x02
 25e:	9b 81       	ldd	r25, Y+3	; 0x03
 260:	61 15       	cp	r22, r1
 262:	71 05       	cpc	r23, r1
 264:	21 f0       	breq	.+8      	; 0x26e <malloc+0x92>
 266:	fb 01       	movw	r30, r22
 268:	93 83       	std	Z+3, r25	; 0x03
 26a:	82 83       	std	Z+2, r24	; 0x02
 26c:	04 c0       	rjmp	.+8      	; 0x276 <malloc+0x9a>
 26e:	90 93 11 01 	sts	0x0111, r25
 272:	80 93 10 01 	sts	0x0110, r24
 276:	fe 01       	movw	r30, r28
 278:	32 96       	adiw	r30, 0x02	; 2
 27a:	44 c0       	rjmp	.+136    	; 0x304 <malloc+0x128>
 27c:	fe 01       	movw	r30, r28
 27e:	e2 0f       	add	r30, r18
 280:	f3 1f       	adc	r31, r19
 282:	81 93       	st	Z+, r24
 284:	91 93       	st	Z+, r25
 286:	22 50       	subi	r18, 0x02	; 2
 288:	31 09       	sbc	r19, r1
 28a:	39 83       	std	Y+1, r19	; 0x01
 28c:	28 83       	st	Y, r18
 28e:	3a c0       	rjmp	.+116    	; 0x304 <malloc+0x128>
 290:	20 91 0e 01 	lds	r18, 0x010E
 294:	30 91 0f 01 	lds	r19, 0x010F
 298:	23 2b       	or	r18, r19
 29a:	41 f4       	brne	.+16     	; 0x2ac <malloc+0xd0>
 29c:	20 91 02 01 	lds	r18, 0x0102
 2a0:	30 91 03 01 	lds	r19, 0x0103
 2a4:	30 93 0f 01 	sts	0x010F, r19
 2a8:	20 93 0e 01 	sts	0x010E, r18
 2ac:	20 91 00 01 	lds	r18, 0x0100
 2b0:	30 91 01 01 	lds	r19, 0x0101
 2b4:	21 15       	cp	r18, r1
 2b6:	31 05       	cpc	r19, r1
 2b8:	41 f4       	brne	.+16     	; 0x2ca <malloc+0xee>
 2ba:	2d b7       	in	r18, 0x3d	; 61
 2bc:	3e b7       	in	r19, 0x3e	; 62
 2be:	40 91 04 01 	lds	r20, 0x0104
 2c2:	50 91 05 01 	lds	r21, 0x0105
 2c6:	24 1b       	sub	r18, r20
 2c8:	35 0b       	sbc	r19, r21
 2ca:	e0 91 0e 01 	lds	r30, 0x010E
 2ce:	f0 91 0f 01 	lds	r31, 0x010F
 2d2:	e2 17       	cp	r30, r18
 2d4:	f3 07       	cpc	r31, r19
 2d6:	a0 f4       	brcc	.+40     	; 0x300 <malloc+0x124>
 2d8:	2e 1b       	sub	r18, r30
 2da:	3f 0b       	sbc	r19, r31
 2dc:	28 17       	cp	r18, r24
 2de:	39 07       	cpc	r19, r25
 2e0:	78 f0       	brcs	.+30     	; 0x300 <malloc+0x124>
 2e2:	ac 01       	movw	r20, r24
 2e4:	4e 5f       	subi	r20, 0xFE	; 254
 2e6:	5f 4f       	sbci	r21, 0xFF	; 255
 2e8:	24 17       	cp	r18, r20
 2ea:	35 07       	cpc	r19, r21
 2ec:	48 f0       	brcs	.+18     	; 0x300 <malloc+0x124>
 2ee:	4e 0f       	add	r20, r30
 2f0:	5f 1f       	adc	r21, r31
 2f2:	50 93 0f 01 	sts	0x010F, r21
 2f6:	40 93 0e 01 	sts	0x010E, r20
 2fa:	81 93       	st	Z+, r24
 2fc:	91 93       	st	Z+, r25
 2fe:	02 c0       	rjmp	.+4      	; 0x304 <malloc+0x128>
 300:	e0 e0       	ldi	r30, 0x00	; 0
 302:	f0 e0       	ldi	r31, 0x00	; 0
 304:	cf 01       	movw	r24, r30
 306:	df 91       	pop	r29
 308:	cf 91       	pop	r28
 30a:	08 95       	ret

0000030c <free>:
 30c:	cf 93       	push	r28
 30e:	df 93       	push	r29
 310:	00 97       	sbiw	r24, 0x00	; 0
 312:	09 f4       	brne	.+2      	; 0x316 <free+0xa>
 314:	87 c0       	rjmp	.+270    	; 0x424 <free+0x118>
 316:	fc 01       	movw	r30, r24
 318:	32 97       	sbiw	r30, 0x02	; 2
 31a:	13 82       	std	Z+3, r1	; 0x03
 31c:	12 82       	std	Z+2, r1	; 0x02
 31e:	c0 91 10 01 	lds	r28, 0x0110
 322:	d0 91 11 01 	lds	r29, 0x0111
 326:	20 97       	sbiw	r28, 0x00	; 0
 328:	81 f4       	brne	.+32     	; 0x34a <free+0x3e>
 32a:	20 81       	ld	r18, Z
 32c:	31 81       	ldd	r19, Z+1	; 0x01
 32e:	28 0f       	add	r18, r24
 330:	39 1f       	adc	r19, r25
 332:	80 91 0e 01 	lds	r24, 0x010E
 336:	90 91 0f 01 	lds	r25, 0x010F
 33a:	82 17       	cp	r24, r18
 33c:	93 07       	cpc	r25, r19
 33e:	79 f5       	brne	.+94     	; 0x39e <free+0x92>
 340:	f0 93 0f 01 	sts	0x010F, r31
 344:	e0 93 0e 01 	sts	0x010E, r30
 348:	6d c0       	rjmp	.+218    	; 0x424 <free+0x118>
 34a:	de 01       	movw	r26, r28
 34c:	20 e0       	ldi	r18, 0x00	; 0
 34e:	30 e0       	ldi	r19, 0x00	; 0
 350:	ae 17       	cp	r26, r30
 352:	bf 07       	cpc	r27, r31
 354:	50 f4       	brcc	.+20     	; 0x36a <free+0x5e>
 356:	12 96       	adiw	r26, 0x02	; 2
 358:	4d 91       	ld	r20, X+
 35a:	5c 91       	ld	r21, X
 35c:	13 97       	sbiw	r26, 0x03	; 3
 35e:	9d 01       	movw	r18, r26
 360:	41 15       	cp	r20, r1
 362:	51 05       	cpc	r21, r1
 364:	09 f1       	breq	.+66     	; 0x3a8 <free+0x9c>
 366:	da 01       	movw	r26, r20
 368:	f3 cf       	rjmp	.-26     	; 0x350 <free+0x44>
 36a:	b3 83       	std	Z+3, r27	; 0x03
 36c:	a2 83       	std	Z+2, r26	; 0x02
 36e:	40 81       	ld	r20, Z
 370:	51 81       	ldd	r21, Z+1	; 0x01
 372:	84 0f       	add	r24, r20
 374:	95 1f       	adc	r25, r21
 376:	8a 17       	cp	r24, r26
 378:	9b 07       	cpc	r25, r27
 37a:	71 f4       	brne	.+28     	; 0x398 <free+0x8c>
 37c:	8d 91       	ld	r24, X+
 37e:	9c 91       	ld	r25, X
 380:	11 97       	sbiw	r26, 0x01	; 1
 382:	84 0f       	add	r24, r20
 384:	95 1f       	adc	r25, r21
 386:	02 96       	adiw	r24, 0x02	; 2
 388:	91 83       	std	Z+1, r25	; 0x01
 38a:	80 83       	st	Z, r24
 38c:	12 96       	adiw	r26, 0x02	; 2
 38e:	8d 91       	ld	r24, X+
 390:	9c 91       	ld	r25, X
 392:	13 97       	sbiw	r26, 0x03	; 3
 394:	93 83       	std	Z+3, r25	; 0x03
 396:	82 83       	std	Z+2, r24	; 0x02
 398:	21 15       	cp	r18, r1
 39a:	31 05       	cpc	r19, r1
 39c:	29 f4       	brne	.+10     	; 0x3a8 <free+0x9c>
 39e:	f0 93 11 01 	sts	0x0111, r31
 3a2:	e0 93 10 01 	sts	0x0110, r30
 3a6:	3e c0       	rjmp	.+124    	; 0x424 <free+0x118>
 3a8:	d9 01       	movw	r26, r18
 3aa:	13 96       	adiw	r26, 0x03	; 3
 3ac:	fc 93       	st	X, r31
 3ae:	ee 93       	st	-X, r30
 3b0:	12 97       	sbiw	r26, 0x02	; 2
 3b2:	4d 91       	ld	r20, X+
 3b4:	5d 91       	ld	r21, X+
 3b6:	a4 0f       	add	r26, r20
 3b8:	b5 1f       	adc	r27, r21
 3ba:	ea 17       	cp	r30, r26
 3bc:	fb 07       	cpc	r31, r27
 3be:	79 f4       	brne	.+30     	; 0x3de <free+0xd2>
 3c0:	80 81       	ld	r24, Z
 3c2:	91 81       	ldd	r25, Z+1	; 0x01
 3c4:	84 0f       	add	r24, r20
 3c6:	95 1f       	adc	r25, r21
 3c8:	02 96       	adiw	r24, 0x02	; 2
 3ca:	d9 01       	movw	r26, r18
 3cc:	11 96       	adiw	r26, 0x01	; 1
 3ce:	9c 93       	st	X, r25
 3d0:	8e 93       	st	-X, r24
 3d2:	82 81       	ldd	r24, Z+2	; 0x02
 3d4:	93 81       	ldd	r25, Z+3	; 0x03
 3d6:	13 96       	adiw	r26, 0x03	; 3
 3d8:	9c 93       	st	X, r25
 3da:	8e 93       	st	-X, r24
 3dc:	12 97       	sbiw	r26, 0x02	; 2
 3de:	e0 e0       	ldi	r30, 0x00	; 0
 3e0:	f0 e0       	ldi	r31, 0x00	; 0
 3e2:	8a 81       	ldd	r24, Y+2	; 0x02
 3e4:	9b 81       	ldd	r25, Y+3	; 0x03
 3e6:	00 97       	sbiw	r24, 0x00	; 0
 3e8:	19 f0       	breq	.+6      	; 0x3f0 <free+0xe4>
 3ea:	fe 01       	movw	r30, r28
 3ec:	ec 01       	movw	r28, r24
 3ee:	f9 cf       	rjmp	.-14     	; 0x3e2 <free+0xd6>
 3f0:	ce 01       	movw	r24, r28
 3f2:	02 96       	adiw	r24, 0x02	; 2
 3f4:	28 81       	ld	r18, Y
 3f6:	39 81       	ldd	r19, Y+1	; 0x01
 3f8:	82 0f       	add	r24, r18
 3fa:	93 1f       	adc	r25, r19
 3fc:	20 91 0e 01 	lds	r18, 0x010E
 400:	30 91 0f 01 	lds	r19, 0x010F
 404:	28 17       	cp	r18, r24
 406:	39 07       	cpc	r19, r25
 408:	69 f4       	brne	.+26     	; 0x424 <free+0x118>
 40a:	30 97       	sbiw	r30, 0x00	; 0
 40c:	29 f4       	brne	.+10     	; 0x418 <free+0x10c>
 40e:	10 92 11 01 	sts	0x0111, r1
 412:	10 92 10 01 	sts	0x0110, r1
 416:	02 c0       	rjmp	.+4      	; 0x41c <free+0x110>
 418:	13 82       	std	Z+3, r1	; 0x03
 41a:	12 82       	std	Z+2, r1	; 0x02
 41c:	d0 93 0f 01 	sts	0x010F, r29
 420:	c0 93 0e 01 	sts	0x010E, r28
 424:	df 91       	pop	r29
 426:	cf 91       	pop	r28
 428:	08 95       	ret

0000042a <memset>:
 42a:	dc 01       	movw	r26, r24
 42c:	01 c0       	rjmp	.+2      	; 0x430 <memset+0x6>
 42e:	6d 93       	st	X+, r22
 430:	41 50       	subi	r20, 0x01	; 1
 432:	50 40       	sbci	r21, 0x00	; 0
 434:	e0 f7       	brcc	.-8      	; 0x42e <memset+0x4>
 436:	08 95       	ret

00000438 <_exit>:
 438:	f8 94       	cli

0000043a <__stop_program>:
 43a:	ff cf       	rjmp	.-2      	; 0x43a <__stop_program>
