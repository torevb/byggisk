
Oving1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000018  00800100  00000d8c  00000e20  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000d8c  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000064  00800118  00800118  00000e38  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00000e38  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000e94  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000001d0  00000000  00000000  00000ed0  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001e0a  00000000  00000000  000010a0  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000de1  00000000  00000000  00002eaa  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000c3e  00000000  00000000  00003c8b  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000414  00000000  00000000  000048cc  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000759  00000000  00000000  00004ce0  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000918  00000000  00000000  00005439  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000001c8  00000000  00000000  00005d51  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 38 00 	jmp	0x70	; 0x70 <__ctors_end>
   4:	0c 94 93 00 	jmp	0x126	; 0x126 <__vector_1>
   8:	0c 94 da 00 	jmp	0x1b4	; 0x1b4 <__vector_2>
   c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  10:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  14:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  18:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  1c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  20:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  24:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  28:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  2c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  30:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  34:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  38:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  3c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  40:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  44:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  48:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  4c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  50:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  54:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  58:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  5c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  60:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  64:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  68:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  6c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>

00000070 <__ctors_end>:
  70:	11 24       	eor	r1, r1
  72:	1f be       	out	0x3f, r1	; 63
  74:	cf ef       	ldi	r28, 0xFF	; 255
  76:	d4 e0       	ldi	r29, 0x04	; 4
  78:	de bf       	out	0x3e, r29	; 62
  7a:	cd bf       	out	0x3d, r28	; 61

0000007c <__do_copy_data>:
  7c:	11 e0       	ldi	r17, 0x01	; 1
  7e:	a0 e0       	ldi	r26, 0x00	; 0
  80:	b1 e0       	ldi	r27, 0x01	; 1
  82:	ec e8       	ldi	r30, 0x8C	; 140
  84:	fd e0       	ldi	r31, 0x0D	; 13
  86:	02 c0       	rjmp	.+4      	; 0x8c <__do_copy_data+0x10>
  88:	05 90       	lpm	r0, Z+
  8a:	0d 92       	st	X+, r0
  8c:	a8 31       	cpi	r26, 0x18	; 24
  8e:	b1 07       	cpc	r27, r17
  90:	d9 f7       	brne	.-10     	; 0x88 <__do_copy_data+0xc>

00000092 <__do_clear_bss>:
  92:	21 e0       	ldi	r18, 0x01	; 1
  94:	a8 e1       	ldi	r26, 0x18	; 24
  96:	b1 e0       	ldi	r27, 0x01	; 1
  98:	01 c0       	rjmp	.+2      	; 0x9c <.do_clear_bss_start>

0000009a <.do_clear_bss_loop>:
  9a:	1d 92       	st	X+, r1

0000009c <.do_clear_bss_start>:
  9c:	ac 37       	cpi	r26, 0x7C	; 124
  9e:	b2 07       	cpc	r27, r18
  a0:	e1 f7       	brne	.-8      	; 0x9a <.do_clear_bss_loop>
  a2:	0e 94 dc 01 	call	0x3b8	; 0x3b8 <main>
  a6:	0c 94 c4 06 	jmp	0xd88	; 0xd88 <_exit>

000000aa <__bad_interrupt>:
  aa:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000ae <read_MCP2515>:
	SPI_master_init();
	
}


char read_MCP2515(char read_address){
  ae:	cf 93       	push	r28
  b0:	c8 2f       	mov	r28, r24
	//SPI_master_init() first
	send_master_SPI(0x03);	//'read' instruction. 
  b2:	83 e0       	ldi	r24, 0x03	; 3
  b4:	0e 94 10 02 	call	0x420	; 0x420 <send_master_SPI>
	send_master_SPI(read_address);
  b8:	8c 2f       	mov	r24, r28
  ba:	0e 94 10 02 	call	0x420	; 0x420 <send_master_SPI>
	return read_master_SPI();
  be:	0e 94 14 02 	call	0x428	; 0x428 <read_master_SPI>
}
  c2:	cf 91       	pop	r28
  c4:	08 95       	ret

000000c6 <write_MCP2515>:


void write_MCP2515(char write_address, char write_data){
  c6:	cf 93       	push	r28
  c8:	df 93       	push	r29
  ca:	d8 2f       	mov	r29, r24
  cc:	c6 2f       	mov	r28, r22
	send_master_SPI(0x02);	//'write byte' instruction.
  ce:	82 e0       	ldi	r24, 0x02	; 2
  d0:	0e 94 10 02 	call	0x420	; 0x420 <send_master_SPI>
	send_master_SPI(write_address);
  d4:	8d 2f       	mov	r24, r29
  d6:	0e 94 10 02 	call	0x420	; 0x420 <send_master_SPI>
	send_master_SPI(write_data);
  da:	8c 2f       	mov	r24, r28
  dc:	0e 94 10 02 	call	0x420	; 0x420 <send_master_SPI>
}
  e0:	df 91       	pop	r29
  e2:	cf 91       	pop	r28
  e4:	08 95       	ret

000000e6 <memory_init>:
#include <stdlib.h>
#include <avr/io.h>


void memory_init(void){
	MCUCR|=(1<<SRE);
  e6:	85 b7       	in	r24, 0x35	; 53
  e8:	80 68       	ori	r24, 0x80	; 128
  ea:	85 bf       	out	0x35, r24	; 53
	SFIOR|=(1<<XMM2);
  ec:	80 b7       	in	r24, 0x30	; 48
  ee:	80 62       	ori	r24, 0x20	; 32
  f0:	80 bf       	out	0x30, r24	; 48
  f2:	08 95       	ret

000000f4 <menu_print>:
	menu_print();
}

void menu_print(){
	//print_to_OLED(current_node->children[0]->content_string, 2);
	OLED_reset();
  f4:	0e 94 3e 01 	call	0x27c	; 0x27c <OLED_reset>
	print_to_OLED(current_node->name, 2);
  f8:	e0 91 69 01 	lds	r30, 0x0169	; 0x800169 <current_node>
  fc:	f0 91 6a 01 	lds	r31, 0x016A	; 0x80016a <current_node+0x1>
 100:	62 e0       	ldi	r22, 0x02	; 2
 102:	80 89       	ldd	r24, Z+16	; 0x10
 104:	91 89       	ldd	r25, Z+17	; 0x11
 106:	0e 94 4d 01 	call	0x29a	; 0x29a <print_to_OLED>
	print_to_OLED(current_node->content_string, 2);
 10a:	e0 91 69 01 	lds	r30, 0x0169	; 0x800169 <current_node>
 10e:	f0 91 6a 01 	lds	r31, 0x016A	; 0x80016a <current_node+0x1>
 112:	62 e0       	ldi	r22, 0x02	; 2
 114:	82 89       	ldd	r24, Z+18	; 0x12
 116:	93 89       	ldd	r25, Z+19	; 0x13
 118:	0e 94 4d 01 	call	0x29a	; 0x29a <print_to_OLED>
	OLED_print_arrow(arrow_page);
 11c:	80 91 18 01 	lds	r24, 0x0118	; 0x800118 <__data_end>
 120:	0e 94 c2 01 	call	0x384	; 0x384 <OLED_print_arrow>
 124:	08 95       	ret

00000126 <__vector_1>:
	}
	OLED_print_arrow(arrow_page);
}

/* Left slider button, INT0_vect, pin PD2. Right slider button, INT1_vect, pin PD3.*/
ISR(INT0_vect){//, INT1_vect){
 126:	1f 92       	push	r1
 128:	0f 92       	push	r0
 12a:	0f b6       	in	r0, 0x3f	; 63
 12c:	0f 92       	push	r0
 12e:	11 24       	eor	r1, r1
 130:	2f 93       	push	r18
 132:	3f 93       	push	r19
 134:	4f 93       	push	r20
 136:	5f 93       	push	r21
 138:	6f 93       	push	r22
 13a:	7f 93       	push	r23
 13c:	8f 93       	push	r24
 13e:	9f 93       	push	r25
 140:	af 93       	push	r26
 142:	bf 93       	push	r27
 144:	ef 93       	push	r30
 146:	ff 93       	push	r31
	if (arrow_page <= 0){
 148:	80 91 18 01 	lds	r24, 0x0118	; 0x800118 <__data_end>
 14c:	81 11       	cpse	r24, r1
 14e:	0b c0       	rjmp	.+22     	; 0x166 <__vector_1+0x40>
		current_node = current_node->parent;
 150:	e0 91 69 01 	lds	r30, 0x0169	; 0x800169 <current_node>
 154:	f0 91 6a 01 	lds	r31, 0x016A	; 0x80016a <current_node+0x1>
 158:	80 81       	ld	r24, Z
 15a:	91 81       	ldd	r25, Z+1	; 0x01
 15c:	90 93 6a 01 	sts	0x016A, r25	; 0x80016a <current_node+0x1>
 160:	80 93 69 01 	sts	0x0169, r24	; 0x800169 <current_node>
 164:	12 c0       	rjmp	.+36     	; 0x18a <__vector_1+0x64>
	} else if (!(current_node->children[arrow_page - 1] == NULL)){
 166:	20 91 69 01 	lds	r18, 0x0169	; 0x800169 <current_node>
 16a:	30 91 6a 01 	lds	r19, 0x016A	; 0x80016a <current_node+0x1>
 16e:	e8 2f       	mov	r30, r24
 170:	f0 e0       	ldi	r31, 0x00	; 0
 172:	ee 0f       	add	r30, r30
 174:	ff 1f       	adc	r31, r31
 176:	e2 0f       	add	r30, r18
 178:	f3 1f       	adc	r31, r19
 17a:	80 81       	ld	r24, Z
 17c:	91 81       	ldd	r25, Z+1	; 0x01
 17e:	00 97       	sbiw	r24, 0x00	; 0
 180:	21 f0       	breq	.+8      	; 0x18a <__vector_1+0x64>
		current_node = current_node->children[arrow_page -1];
 182:	90 93 6a 01 	sts	0x016A, r25	; 0x80016a <current_node+0x1>
 186:	80 93 69 01 	sts	0x0169, r24	; 0x800169 <current_node>
	}
	arrow_page = 0;
 18a:	10 92 18 01 	sts	0x0118, r1	; 0x800118 <__data_end>
	menu_print();
 18e:	0e 94 7a 00 	call	0xf4	; 0xf4 <menu_print>
}
 192:	ff 91       	pop	r31
 194:	ef 91       	pop	r30
 196:	bf 91       	pop	r27
 198:	af 91       	pop	r26
 19a:	9f 91       	pop	r25
 19c:	8f 91       	pop	r24
 19e:	7f 91       	pop	r23
 1a0:	6f 91       	pop	r22
 1a2:	5f 91       	pop	r21
 1a4:	4f 91       	pop	r20
 1a6:	3f 91       	pop	r19
 1a8:	2f 91       	pop	r18
 1aa:	0f 90       	pop	r0
 1ac:	0f be       	out	0x3f, r0	; 63
 1ae:	0f 90       	pop	r0
 1b0:	1f 90       	pop	r1
 1b2:	18 95       	reti

000001b4 <__vector_2>:

ISR(INT1_vect){
 1b4:	1f 92       	push	r1
 1b6:	0f 92       	push	r0
 1b8:	0f b6       	in	r0, 0x3f	; 63
 1ba:	0f 92       	push	r0
 1bc:	11 24       	eor	r1, r1
 1be:	2f 93       	push	r18
 1c0:	3f 93       	push	r19
 1c2:	4f 93       	push	r20
 1c4:	5f 93       	push	r21
 1c6:	6f 93       	push	r22
 1c8:	7f 93       	push	r23
 1ca:	8f 93       	push	r24
 1cc:	9f 93       	push	r25
 1ce:	af 93       	push	r26
 1d0:	bf 93       	push	r27
 1d2:	ef 93       	push	r30
 1d4:	ff 93       	push	r31
	current_node = current_node->parent;
 1d6:	e0 91 69 01 	lds	r30, 0x0169	; 0x800169 <current_node>
 1da:	f0 91 6a 01 	lds	r31, 0x016A	; 0x80016a <current_node+0x1>
 1de:	80 81       	ld	r24, Z
 1e0:	91 81       	ldd	r25, Z+1	; 0x01
 1e2:	90 93 6a 01 	sts	0x016A, r25	; 0x80016a <current_node+0x1>
 1e6:	80 93 69 01 	sts	0x0169, r24	; 0x800169 <current_node>
	menu_print();
 1ea:	0e 94 7a 00 	call	0xf4	; 0xf4 <menu_print>
}
 1ee:	ff 91       	pop	r31
 1f0:	ef 91       	pop	r30
 1f2:	bf 91       	pop	r27
 1f4:	af 91       	pop	r26
 1f6:	9f 91       	pop	r25
 1f8:	8f 91       	pop	r24
 1fa:	7f 91       	pop	r23
 1fc:	6f 91       	pop	r22
 1fe:	5f 91       	pop	r21
 200:	4f 91       	pop	r20
 202:	3f 91       	pop	r19
 204:	2f 91       	pop	r18
 206:	0f 90       	pop	r0
 208:	0f be       	out	0x3f, r0	; 63
 20a:	0f 90       	pop	r0
 20c:	1f 90       	pop	r1
 20e:	18 95       	reti

00000210 <goto_OLED_page>:
	return;
}



void OLED_pos(uint8_t page, uint8_t column){
 210:	87 70       	andi	r24, 0x07	; 7
 212:	80 93 70 01 	sts	0x0170, r24	; 0x800170 <current_page>
 216:	80 55       	subi	r24, 0x50	; 80
 218:	80 93 00 10 	sts	0x1000, r24	; 0x801000 <__bss_end+0xe84>
 21c:	08 95       	ret

0000021e <goto_OLED_char_column>:
 21e:	90 91 6b 01 	lds	r25, 0x016B	; 0x80016b <font_type>
 222:	89 9f       	mul	r24, r25
 224:	90 2d       	mov	r25, r0
 226:	11 24       	eor	r1, r1
 228:	29 2f       	mov	r18, r25
 22a:	2f 70       	andi	r18, 0x0F	; 15
 22c:	e0 e0       	ldi	r30, 0x00	; 0
 22e:	f0 e1       	ldi	r31, 0x10	; 16
 230:	20 83       	st	Z, r18
 232:	92 95       	swap	r25
 234:	9f 70       	andi	r25, 0x0F	; 15
 236:	90 5f       	subi	r25, 0xF0	; 240
 238:	90 83       	st	Z, r25
 23a:	80 93 71 01 	sts	0x0171, r24	; 0x800171 <current_column>
 23e:	08 95       	ret

00000240 <OLED_home>:
 240:	80 e0       	ldi	r24, 0x00	; 0
 242:	0e 94 08 01 	call	0x210	; 0x210 <goto_OLED_page>
 246:	80 e0       	ldi	r24, 0x00	; 0
 248:	0e 94 0f 01 	call	0x21e	; 0x21e <goto_OLED_char_column>
 24c:	08 95       	ret

0000024e <goto_OLED_physical_column>:
 24e:	98 2f       	mov	r25, r24
 250:	9f 70       	andi	r25, 0x0F	; 15
 252:	e0 e0       	ldi	r30, 0x00	; 0
 254:	f0 e1       	ldi	r31, 0x10	; 16
 256:	90 83       	st	Z, r25
 258:	98 2f       	mov	r25, r24
 25a:	92 95       	swap	r25
 25c:	9f 70       	andi	r25, 0x0F	; 15
 25e:	90 5f       	subi	r25, 0xF0	; 240
 260:	90 83       	st	Z, r25
 262:	80 93 71 01 	sts	0x0171, r24	; 0x800171 <current_column>
 266:	08 95       	ret

00000268 <clear_OLED_page>:
 268:	0e 94 08 01 	call	0x210	; 0x210 <goto_OLED_page>
 26c:	80 e0       	ldi	r24, 0x00	; 0
 26e:	e0 e0       	ldi	r30, 0x00	; 0
 270:	f2 e1       	ldi	r31, 0x12	; 18
 272:	10 82       	st	Z, r1
 274:	8f 5f       	subi	r24, 0xFF	; 255
 276:	80 38       	cpi	r24, 0x80	; 128
 278:	e1 f7       	brne	.-8      	; 0x272 <clear_OLED_page+0xa>
 27a:	08 95       	ret

0000027c <OLED_reset>:
 27c:	cf 93       	push	r28
 27e:	80 e4       	ldi	r24, 0x40	; 64
 280:	80 93 00 10 	sts	0x1000, r24	; 0x801000 <__bss_end+0xe84>
 284:	c0 e0       	ldi	r28, 0x00	; 0
 286:	8c 2f       	mov	r24, r28
 288:	0e 94 34 01 	call	0x268	; 0x268 <clear_OLED_page>
 28c:	cf 5f       	subi	r28, 0xFF	; 255
 28e:	c8 30       	cpi	r28, 0x08	; 8
 290:	d1 f7       	brne	.-12     	; 0x286 <OLED_reset+0xa>
 292:	0e 94 20 01 	call	0x240	; 0x240 <OLED_home>
 296:	cf 91       	pop	r28
 298:	08 95       	ret

0000029a <print_to_OLED>:
	return;
}

void print_to_OLED(const char * string, uint8_t start_column){
 29a:	9f 92       	push	r9
 29c:	af 92       	push	r10
 29e:	bf 92       	push	r11
 2a0:	cf 92       	push	r12
 2a2:	df 92       	push	r13
 2a4:	ef 92       	push	r14
 2a6:	ff 92       	push	r15
 2a8:	0f 93       	push	r16
 2aa:	1f 93       	push	r17
 2ac:	cf 93       	push	r28
 2ae:	df 93       	push	r29
 2b0:	ec 01       	movw	r28, r24
 2b2:	96 2e       	mov	r9, r22
	goto_OLED_char_column(start_column);
 2b4:	86 2f       	mov	r24, r22
 2b6:	0e 94 0f 01 	call	0x21e	; 0x21e <goto_OLED_char_column>
	int length = strlen(string);
 2ba:	fe 01       	movw	r30, r28
 2bc:	01 90       	ld	r0, Z+
 2be:	00 20       	and	r0, r0
 2c0:	e9 f7       	brne	.-6      	; 0x2bc <print_to_OLED+0x22>
 2c2:	31 97       	sbiw	r30, 0x01	; 1
 2c4:	ec 1b       	sub	r30, r28
 2c6:	fd 0b       	sbc	r31, r29
	
	for (int i = 0; i < length; i++){
 2c8:	1e 16       	cp	r1, r30
 2ca:	1f 06       	cpc	r1, r31
 2cc:	0c f0       	brlt	.+2      	; 0x2d0 <print_to_OLED+0x36>
 2ce:	4e c0       	rjmp	.+156    	; 0x36c <print_to_OLED+0xd2>
 2d0:	7e 01       	movw	r14, r28
 2d2:	6e 01       	movw	r12, r28
 2d4:	ce 0e       	add	r12, r30
 2d6:	df 1e       	adc	r13, r31
		if (c == '\n') {
			goto_OLED_page((current_page + 1) % DISPLAY_PAGES);
			goto_OLED_char_column(start_column);
		}
		else{
			for (int j = 0; j < font_type.width; j++){
 2d8:	cb e6       	ldi	r28, 0x6B	; 107
 2da:	d1 e0       	ldi	r29, 0x01	; 1
 2dc:	a1 2c       	mov	r10, r1
 2de:	b1 2c       	mov	r11, r1
	*ext_oled_cs = number;
}

void write_OLED_data(uint8_t number){
	volatile char *ext_oled_dc = (char *) 0x1200;
	*ext_oled_dc = number;
 2e0:	00 e0       	ldi	r16, 0x00	; 0
 2e2:	12 e1       	ldi	r17, 0x12	; 18
void print_to_OLED(const char * string, uint8_t start_column){
	goto_OLED_char_column(start_column);
	int length = strlen(string);
	
	for (int i = 0; i < length; i++){
		char c = string[i];
 2e4:	d7 01       	movw	r26, r14
 2e6:	4d 91       	ld	r20, X+
 2e8:	7d 01       	movw	r14, r26
		if (c == '\n') {
 2ea:	4a 30       	cpi	r20, 0x0A	; 10
 2ec:	31 f0       	breq	.+12     	; 0x2fa <print_to_OLED+0x60>
			goto_OLED_page((current_page + 1) % DISPLAY_PAGES);
			goto_OLED_char_column(start_column);
		}
		else{
			for (int j = 0; j < font_type.width; j++){
 2ee:	28 81       	ld	r18, Y
 2f0:	30 e0       	ldi	r19, 0x00	; 0
 2f2:	12 16       	cp	r1, r18
 2f4:	13 06       	cpc	r1, r19
 2f6:	9c f0       	brlt	.+38     	; 0x31e <print_to_OLED+0x84>
 2f8:	35 c0       	rjmp	.+106    	; 0x364 <print_to_OLED+0xca>
	int length = strlen(string);
	
	for (int i = 0; i < length; i++){
		char c = string[i];
		if (c == '\n') {
			goto_OLED_page((current_page + 1) % DISPLAY_PAGES);
 2fa:	80 91 70 01 	lds	r24, 0x0170	; 0x800170 <current_page>
 2fe:	90 e0       	ldi	r25, 0x00	; 0
 300:	01 96       	adiw	r24, 0x01	; 1
 302:	87 70       	andi	r24, 0x07	; 7
 304:	90 78       	andi	r25, 0x80	; 128
 306:	99 23       	and	r25, r25
 308:	24 f4       	brge	.+8      	; 0x312 <print_to_OLED+0x78>
 30a:	01 97       	sbiw	r24, 0x01	; 1
 30c:	88 6f       	ori	r24, 0xF8	; 248
 30e:	9f 6f       	ori	r25, 0xFF	; 255
 310:	01 96       	adiw	r24, 0x01	; 1
 312:	0e 94 08 01 	call	0x210	; 0x210 <goto_OLED_page>
			goto_OLED_char_column(start_column);
 316:	89 2d       	mov	r24, r9
 318:	0e 94 0f 01 	call	0x21e	; 0x21e <goto_OLED_char_column>
 31c:	23 c0       	rjmp	.+70     	; 0x364 <print_to_OLED+0xca>
		}
		else{
			for (int j = 0; j < font_type.width; j++){
 31e:	8a 2d       	mov	r24, r10
 320:	9b 2d       	mov	r25, r11
				write_OLED_data(pgm_read_byte(font_type.data + (c - font_type.ascii_offset) * font_type.width +j));
 322:	50 e0       	ldi	r21, 0x00	; 0
 324:	6a 81       	ldd	r22, Y+2	; 0x02
 326:	fa 01       	movw	r30, r20
 328:	e6 1b       	sub	r30, r22
 32a:	f1 09       	sbc	r31, r1
 32c:	bf 01       	movw	r22, r30
 32e:	26 9f       	mul	r18, r22
 330:	f0 01       	movw	r30, r0
 332:	27 9f       	mul	r18, r23
 334:	f0 0d       	add	r31, r0
 336:	36 9f       	mul	r19, r22
 338:	f0 0d       	add	r31, r0
 33a:	11 24       	eor	r1, r1
 33c:	e8 0f       	add	r30, r24
 33e:	f9 1f       	adc	r31, r25
 340:	2b 81       	ldd	r18, Y+3	; 0x03
 342:	3c 81       	ldd	r19, Y+4	; 0x04
 344:	e2 0f       	add	r30, r18
 346:	f3 1f       	adc	r31, r19
 348:	e4 91       	lpm	r30, Z
	*ext_oled_cs = number;
}

void write_OLED_data(uint8_t number){
	volatile char *ext_oled_dc = (char *) 0x1200;
	*ext_oled_dc = number;
 34a:	d8 01       	movw	r26, r16
 34c:	ec 93       	st	X, r30
		else{
			for (int j = 0; j < font_type.width; j++){
				write_OLED_data(pgm_read_byte(font_type.data + (c - font_type.ascii_offset) * font_type.width +j));
				//write_OLED_data(pgm_read_byte(&font[c-font_type.ascii_offset][j]));
				//write_OLED_data(pgm_read_byte(&font_type.data[c-font_type.ascii_offset][j]));
				current_column = current_column + font_type.width;
 34e:	30 91 71 01 	lds	r19, 0x0171	; 0x800171 <current_column>
 352:	28 81       	ld	r18, Y
 354:	32 0f       	add	r19, r18
 356:	30 93 71 01 	sts	0x0171, r19	; 0x800171 <current_column>
		if (c == '\n') {
			goto_OLED_page((current_page + 1) % DISPLAY_PAGES);
			goto_OLED_char_column(start_column);
		}
		else{
			for (int j = 0; j < font_type.width; j++){
 35a:	01 96       	adiw	r24, 0x01	; 1
 35c:	30 e0       	ldi	r19, 0x00	; 0
 35e:	82 17       	cp	r24, r18
 360:	93 07       	cpc	r25, r19
 362:	04 f3       	brlt	.-64     	; 0x324 <print_to_OLED+0x8a>

void print_to_OLED(const char * string, uint8_t start_column){
	goto_OLED_char_column(start_column);
	int length = strlen(string);
	
	for (int i = 0; i < length; i++){
 364:	ec 14       	cp	r14, r12
 366:	fd 04       	cpc	r15, r13
 368:	09 f0       	breq	.+2      	; 0x36c <print_to_OLED+0xd2>
 36a:	bc cf       	rjmp	.-136    	; 0x2e4 <print_to_OLED+0x4a>
				current_column = current_column + font_type.width;
			}
		}
	}
	return;
}
 36c:	df 91       	pop	r29
 36e:	cf 91       	pop	r28
 370:	1f 91       	pop	r17
 372:	0f 91       	pop	r16
 374:	ff 90       	pop	r15
 376:	ef 90       	pop	r14
 378:	df 90       	pop	r13
 37a:	cf 90       	pop	r12
 37c:	bf 90       	pop	r11
 37e:	af 90       	pop	r10
 380:	9f 90       	pop	r9
 382:	08 95       	ret

00000384 <OLED_print_arrow>:

void OLED_print_arrow(uint8_t page)
{	int temp = current_page;
 384:	cf 93       	push	r28
 386:	c0 91 70 01 	lds	r28, 0x0170	; 0x800170 <current_page>
	goto_OLED_page(page);
 38a:	0e 94 08 01 	call	0x210	; 0x210 <goto_OLED_page>
	goto_OLED_physical_column(1);
 38e:	81 e0       	ldi	r24, 0x01	; 1
 390:	0e 94 27 01 	call	0x24e	; 0x24e <goto_OLED_physical_column>
	*ext_oled_cs = number;
}

void write_OLED_data(uint8_t number){
	volatile char *ext_oled_dc = (char *) 0x1200;
	*ext_oled_dc = number;
 394:	e0 e0       	ldi	r30, 0x00	; 0
 396:	f2 e1       	ldi	r31, 0x12	; 18
 398:	98 e1       	ldi	r25, 0x18	; 24
 39a:	90 83       	st	Z, r25
 39c:	90 83       	st	Z, r25
 39e:	8e e7       	ldi	r24, 0x7E	; 126
 3a0:	80 83       	st	Z, r24
 3a2:	8c e3       	ldi	r24, 0x3C	; 60
 3a4:	80 83       	st	Z, r24
 3a6:	90 83       	st	Z, r25
	write_OLED_data(0b00011000);
	write_OLED_data(0b00011000);
	write_OLED_data(0b01111110);
	write_OLED_data(0b00111100);
	write_OLED_data(0b00011000);
	current_column = ARROW_WIDTH;
 3a8:	88 e0       	ldi	r24, 0x08	; 8
 3aa:	80 93 71 01 	sts	0x0171, r24	; 0x800171 <current_column>
	
	goto_OLED_page(temp);
 3ae:	8c 2f       	mov	r24, r28
 3b0:	0e 94 08 01 	call	0x210	; 0x210 <goto_OLED_page>
}
 3b4:	cf 91       	pop	r28
 3b6:	08 95       	ret

000003b8 <main>:
	 //}
	
	
	//ov2////////////////////////////////
	
	DDRE=0x3;
 3b8:	83 e0       	ldi	r24, 0x03	; 3
 3ba:	86 b9       	out	0x06, r24	; 6
	DDRA=0xFF;
 3bc:	8f ef       	ldi	r24, 0xFF	; 255
 3be:	8a bb       	out	0x1a, r24	; 26
	PORTA=0x00;
 3c0:	1b ba       	out	0x1b, r1	; 27
	PORTE=0x2;
 3c2:	82 e0       	ldi	r24, 0x02	; 2
 3c4:	87 b9       	out	0x07, r24	; 7
	*/
	//////////////////////////
	///////oving5/////////////
	/////////////////////////
	
	memory_init();
 3c6:	0e 94 73 00 	call	0xe6	; 0xe6 <memory_init>
	UART_Init(MYUBRR);
 3ca:	8f e1       	ldi	r24, 0x1F	; 31
 3cc:	90 e0       	ldi	r25, 0x00	; 0
 3ce:	0e 94 21 02 	call	0x442	; 0x442 <UART_Init>
	SPI_master_init();
 3d2:	0e 94 09 02 	call	0x412	; 0x412 <SPI_master_init>
	printf("A \n");
 3d6:	86 e0       	ldi	r24, 0x06	; 6
 3d8:	91 e0       	ldi	r25, 0x01	; 1
 3da:	0e 94 8f 02 	call	0x51e	; 0x51e <puts>
	printf("B \n");
	*/

	
	
	write_MCP2515(3, 0x25);
 3de:	65 e2       	ldi	r22, 0x25	; 37
 3e0:	83 e0       	ldi	r24, 0x03	; 3
 3e2:	0e 94 63 00 	call	0xc6	; 0xc6 <write_MCP2515>
	printf("shit\n");
 3e6:	89 e0       	ldi	r24, 0x09	; 9
 3e8:	91 e0       	ldi	r25, 0x01	; 1
 3ea:	0e 94 8f 02 	call	0x51e	; 0x51e <puts>
	char temp = read_MCP2515(3);
 3ee:	83 e0       	ldi	r24, 0x03	; 3
 3f0:	0e 94 57 00 	call	0xae	; 0xae <read_MCP2515>
	printf("Temp: %i\n", temp);
 3f4:	1f 92       	push	r1
 3f6:	8f 93       	push	r24
 3f8:	8e e0       	ldi	r24, 0x0E	; 14
 3fa:	91 e0       	ldi	r25, 0x01	; 1
 3fc:	9f 93       	push	r25
 3fe:	8f 93       	push	r24
 400:	0e 94 79 02 	call	0x4f2	; 0x4f2 <printf>
 404:	0f 90       	pop	r0
 406:	0f 90       	pop	r0
 408:	0f 90       	pop	r0
 40a:	0f 90       	pop	r0
	
	
	
	return 0;
	
 40c:	80 e0       	ldi	r24, 0x00	; 0
 40e:	90 e0       	ldi	r25, 0x00	; 0
 410:	08 95       	ret

00000412 <SPI_master_init>:
}

void SPI_slave_init(){
	DDRB |= (1<<MISO);	//Set as output.
	DDRB &= ~((1<<MOSI)|(1<<SCK)|(1<<SSn)); //Set as input.
	SPCR = (1<<SPE);	//Enable SPI.
 412:	87 b3       	in	r24, 0x17	; 23
 414:	80 6b       	ori	r24, 0xB0	; 176
 416:	87 bb       	out	0x17, r24	; 23
 418:	be 98       	cbi	0x17, 6	; 23
 41a:	81 e5       	ldi	r24, 0x51	; 81
 41c:	8d b9       	out	0x0d, r24	; 13
 41e:	08 95       	ret

00000420 <send_master_SPI>:
}

void send_master_SPI(char data){
	SPDR = data;				//Send data.
 420:	8f b9       	out	0x0f, r24	; 15
	while (!(SPSR & (1<<SPIF))) {}		//Wait for transmission complete.
 422:	77 9b       	sbis	0x0e, 7	; 14
 424:	fe cf       	rjmp	.-4      	; 0x422 <send_master_SPI+0x2>
	
}
 426:	08 95       	ret

00000428 <read_master_SPI>:

char read_master_SPI(){
	//send_master_SPI(1);		//Send dummy byte.
	SPDR = 0x00;						
 428:	1f b8       	out	0x0f, r1	; 15
	while (!(SPSR & (1<<SPIF))) {}		//Wait for transmission complete.
 42a:	77 9b       	sbis	0x0e, 7	; 14
 42c:	fe cf       	rjmp	.-4      	; 0x42a <read_master_SPI+0x2>
	return SPDR;
 42e:	8f b1       	in	r24, 0x0f	; 15
}
 430:	08 95       	ret

00000432 <UART_Transmit>:
	}
	
void UART_Transmit( unsigned char data )
{
	/* Wait for empty transmit buffer*/
		while( !( UCSR0A & (1<<UDRE0)) )
 432:	5d 9b       	sbis	0x0b, 5	; 11
 434:	fe cf       	rjmp	.-4      	; 0x432 <UART_Transmit>
		;
	/* Put data into buffer, sends the data*/
		UDR0 = data;
 436:	8c b9       	out	0x0c, r24	; 12
 438:	08 95       	ret

0000043a <UART_Receive>:
}

unsigned char UART_Receive(void)
	{
		/* Wait for data to be received*/
		while( !(UCSR0A & (1<<RXC0)) )
 43a:	5f 9b       	sbis	0x0b, 7	; 11
 43c:	fe cf       	rjmp	.-4      	; 0x43a <UART_Receive>
			;
		/* Get and return received data from buffer*/
		return UDR0;
 43e:	8c b1       	in	r24, 0x0c	; 12
 440:	08 95       	ret

00000442 <UART_Init>:
#define MYUBRR FOSC/16/BAUD-1

void UART_Init(unsigned int ubrr)
	{
		/* Set baud rate */
		UBRR0H = (unsigned char)(ubrr>>8);
 442:	90 bd       	out	0x20, r25	; 32
		UBRR0L = (unsigned char)ubrr;
 444:	89 b9       	out	0x09, r24	; 9
		/* Enable receiver and transmitter */
		UCSR0B = (1<<RXEN0)|(1<<TXEN0);
 446:	88 e1       	ldi	r24, 0x18	; 24
 448:	8a b9       	out	0x0a, r24	; 10
		/* 
		Set frame format: 8data, 2stop bit
		*/
		UCSR0C = (1<<URSEL0)|(1<<USBS0)|(3<<UCSZ00);
 44a:	8e e8       	ldi	r24, 0x8E	; 142
 44c:	80 bd       	out	0x20, r24	; 32
		fdevopen(&UART_Transmit, &UART_Receive);
 44e:	6d e1       	ldi	r22, 0x1D	; 29
 450:	72 e0       	ldi	r23, 0x02	; 2
 452:	89 e1       	ldi	r24, 0x19	; 25
 454:	92 e0       	ldi	r25, 0x02	; 2
 456:	0e 94 2e 02 	call	0x45c	; 0x45c <fdevopen>
 45a:	08 95       	ret

0000045c <fdevopen>:
 45c:	0f 93       	push	r16
 45e:	1f 93       	push	r17
 460:	cf 93       	push	r28
 462:	df 93       	push	r29
 464:	00 97       	sbiw	r24, 0x00	; 0
 466:	31 f4       	brne	.+12     	; 0x474 <fdevopen+0x18>
 468:	61 15       	cp	r22, r1
 46a:	71 05       	cpc	r23, r1
 46c:	19 f4       	brne	.+6      	; 0x474 <fdevopen+0x18>
 46e:	80 e0       	ldi	r24, 0x00	; 0
 470:	90 e0       	ldi	r25, 0x00	; 0
 472:	3a c0       	rjmp	.+116    	; 0x4e8 <fdevopen+0x8c>
 474:	8b 01       	movw	r16, r22
 476:	ec 01       	movw	r28, r24
 478:	6e e0       	ldi	r22, 0x0E	; 14
 47a:	70 e0       	ldi	r23, 0x00	; 0
 47c:	81 e0       	ldi	r24, 0x01	; 1
 47e:	90 e0       	ldi	r25, 0x00	; 0
 480:	0e 94 91 04 	call	0x922	; 0x922 <calloc>
 484:	fc 01       	movw	r30, r24
 486:	89 2b       	or	r24, r25
 488:	91 f3       	breq	.-28     	; 0x46e <fdevopen+0x12>
 48a:	80 e8       	ldi	r24, 0x80	; 128
 48c:	83 83       	std	Z+3, r24	; 0x03
 48e:	01 15       	cp	r16, r1
 490:	11 05       	cpc	r17, r1
 492:	71 f0       	breq	.+28     	; 0x4b0 <fdevopen+0x54>
 494:	13 87       	std	Z+11, r17	; 0x0b
 496:	02 87       	std	Z+10, r16	; 0x0a
 498:	81 e8       	ldi	r24, 0x81	; 129
 49a:	83 83       	std	Z+3, r24	; 0x03
 49c:	80 91 72 01 	lds	r24, 0x0172	; 0x800172 <__iob>
 4a0:	90 91 73 01 	lds	r25, 0x0173	; 0x800173 <__iob+0x1>
 4a4:	89 2b       	or	r24, r25
 4a6:	21 f4       	brne	.+8      	; 0x4b0 <fdevopen+0x54>
 4a8:	f0 93 73 01 	sts	0x0173, r31	; 0x800173 <__iob+0x1>
 4ac:	e0 93 72 01 	sts	0x0172, r30	; 0x800172 <__iob>
 4b0:	20 97       	sbiw	r28, 0x00	; 0
 4b2:	c9 f0       	breq	.+50     	; 0x4e6 <fdevopen+0x8a>
 4b4:	d1 87       	std	Z+9, r29	; 0x09
 4b6:	c0 87       	std	Z+8, r28	; 0x08
 4b8:	83 81       	ldd	r24, Z+3	; 0x03
 4ba:	82 60       	ori	r24, 0x02	; 2
 4bc:	83 83       	std	Z+3, r24	; 0x03
 4be:	80 91 74 01 	lds	r24, 0x0174	; 0x800174 <__iob+0x2>
 4c2:	90 91 75 01 	lds	r25, 0x0175	; 0x800175 <__iob+0x3>
 4c6:	89 2b       	or	r24, r25
 4c8:	71 f4       	brne	.+28     	; 0x4e6 <fdevopen+0x8a>
 4ca:	f0 93 75 01 	sts	0x0175, r31	; 0x800175 <__iob+0x3>
 4ce:	e0 93 74 01 	sts	0x0174, r30	; 0x800174 <__iob+0x2>
 4d2:	80 91 76 01 	lds	r24, 0x0176	; 0x800176 <__iob+0x4>
 4d6:	90 91 77 01 	lds	r25, 0x0177	; 0x800177 <__iob+0x5>
 4da:	89 2b       	or	r24, r25
 4dc:	21 f4       	brne	.+8      	; 0x4e6 <fdevopen+0x8a>
 4de:	f0 93 77 01 	sts	0x0177, r31	; 0x800177 <__iob+0x5>
 4e2:	e0 93 76 01 	sts	0x0176, r30	; 0x800176 <__iob+0x4>
 4e6:	cf 01       	movw	r24, r30
 4e8:	df 91       	pop	r29
 4ea:	cf 91       	pop	r28
 4ec:	1f 91       	pop	r17
 4ee:	0f 91       	pop	r16
 4f0:	08 95       	ret

000004f2 <printf>:
 4f2:	a0 e0       	ldi	r26, 0x00	; 0
 4f4:	b0 e0       	ldi	r27, 0x00	; 0
 4f6:	ef e7       	ldi	r30, 0x7F	; 127
 4f8:	f2 e0       	ldi	r31, 0x02	; 2
 4fa:	0c 94 9d 06 	jmp	0xd3a	; 0xd3a <__prologue_saves__+0x20>
 4fe:	ae 01       	movw	r20, r28
 500:	4b 5f       	subi	r20, 0xFB	; 251
 502:	5f 4f       	sbci	r21, 0xFF	; 255
 504:	fa 01       	movw	r30, r20
 506:	61 91       	ld	r22, Z+
 508:	71 91       	ld	r23, Z+
 50a:	af 01       	movw	r20, r30
 50c:	80 91 74 01 	lds	r24, 0x0174	; 0x800174 <__iob+0x2>
 510:	90 91 75 01 	lds	r25, 0x0175	; 0x800175 <__iob+0x3>
 514:	0e 94 bf 02 	call	0x57e	; 0x57e <vfprintf>
 518:	e2 e0       	ldi	r30, 0x02	; 2
 51a:	0c 94 b9 06 	jmp	0xd72	; 0xd72 <__epilogue_restores__+0x20>

0000051e <puts>:
 51e:	0f 93       	push	r16
 520:	1f 93       	push	r17
 522:	cf 93       	push	r28
 524:	df 93       	push	r29
 526:	e0 91 74 01 	lds	r30, 0x0174	; 0x800174 <__iob+0x2>
 52a:	f0 91 75 01 	lds	r31, 0x0175	; 0x800175 <__iob+0x3>
 52e:	23 81       	ldd	r18, Z+3	; 0x03
 530:	21 ff       	sbrs	r18, 1
 532:	1b c0       	rjmp	.+54     	; 0x56a <puts+0x4c>
 534:	8c 01       	movw	r16, r24
 536:	d0 e0       	ldi	r29, 0x00	; 0
 538:	c0 e0       	ldi	r28, 0x00	; 0
 53a:	f8 01       	movw	r30, r16
 53c:	81 91       	ld	r24, Z+
 53e:	8f 01       	movw	r16, r30
 540:	60 91 74 01 	lds	r22, 0x0174	; 0x800174 <__iob+0x2>
 544:	70 91 75 01 	lds	r23, 0x0175	; 0x800175 <__iob+0x3>
 548:	db 01       	movw	r26, r22
 54a:	18 96       	adiw	r26, 0x08	; 8
 54c:	ed 91       	ld	r30, X+
 54e:	fc 91       	ld	r31, X
 550:	19 97       	sbiw	r26, 0x09	; 9
 552:	88 23       	and	r24, r24
 554:	31 f0       	breq	.+12     	; 0x562 <puts+0x44>
 556:	09 95       	icall
 558:	89 2b       	or	r24, r25
 55a:	79 f3       	breq	.-34     	; 0x53a <puts+0x1c>
 55c:	df ef       	ldi	r29, 0xFF	; 255
 55e:	cf ef       	ldi	r28, 0xFF	; 255
 560:	ec cf       	rjmp	.-40     	; 0x53a <puts+0x1c>
 562:	8a e0       	ldi	r24, 0x0A	; 10
 564:	09 95       	icall
 566:	89 2b       	or	r24, r25
 568:	19 f0       	breq	.+6      	; 0x570 <puts+0x52>
 56a:	8f ef       	ldi	r24, 0xFF	; 255
 56c:	9f ef       	ldi	r25, 0xFF	; 255
 56e:	02 c0       	rjmp	.+4      	; 0x574 <puts+0x56>
 570:	8d 2f       	mov	r24, r29
 572:	9c 2f       	mov	r25, r28
 574:	df 91       	pop	r29
 576:	cf 91       	pop	r28
 578:	1f 91       	pop	r17
 57a:	0f 91       	pop	r16
 57c:	08 95       	ret

0000057e <vfprintf>:
 57e:	ac e0       	ldi	r26, 0x0C	; 12
 580:	b0 e0       	ldi	r27, 0x00	; 0
 582:	e5 ec       	ldi	r30, 0xC5	; 197
 584:	f2 e0       	ldi	r31, 0x02	; 2
 586:	0c 94 8d 06 	jmp	0xd1a	; 0xd1a <__prologue_saves__>
 58a:	7c 01       	movw	r14, r24
 58c:	6b 01       	movw	r12, r22
 58e:	8a 01       	movw	r16, r20
 590:	fc 01       	movw	r30, r24
 592:	17 82       	std	Z+7, r1	; 0x07
 594:	16 82       	std	Z+6, r1	; 0x06
 596:	83 81       	ldd	r24, Z+3	; 0x03
 598:	81 ff       	sbrs	r24, 1
 59a:	bd c1       	rjmp	.+890    	; 0x916 <vfprintf+0x398>
 59c:	ce 01       	movw	r24, r28
 59e:	01 96       	adiw	r24, 0x01	; 1
 5a0:	4c 01       	movw	r8, r24
 5a2:	f7 01       	movw	r30, r14
 5a4:	93 81       	ldd	r25, Z+3	; 0x03
 5a6:	f6 01       	movw	r30, r12
 5a8:	93 fd       	sbrc	r25, 3
 5aa:	85 91       	lpm	r24, Z+
 5ac:	93 ff       	sbrs	r25, 3
 5ae:	81 91       	ld	r24, Z+
 5b0:	6f 01       	movw	r12, r30
 5b2:	88 23       	and	r24, r24
 5b4:	09 f4       	brne	.+2      	; 0x5b8 <vfprintf+0x3a>
 5b6:	ab c1       	rjmp	.+854    	; 0x90e <vfprintf+0x390>
 5b8:	85 32       	cpi	r24, 0x25	; 37
 5ba:	39 f4       	brne	.+14     	; 0x5ca <vfprintf+0x4c>
 5bc:	93 fd       	sbrc	r25, 3
 5be:	85 91       	lpm	r24, Z+
 5c0:	93 ff       	sbrs	r25, 3
 5c2:	81 91       	ld	r24, Z+
 5c4:	6f 01       	movw	r12, r30
 5c6:	85 32       	cpi	r24, 0x25	; 37
 5c8:	29 f4       	brne	.+10     	; 0x5d4 <vfprintf+0x56>
 5ca:	b7 01       	movw	r22, r14
 5cc:	90 e0       	ldi	r25, 0x00	; 0
 5ce:	0e 94 f7 05 	call	0xbee	; 0xbee <fputc>
 5d2:	e7 cf       	rjmp	.-50     	; 0x5a2 <vfprintf+0x24>
 5d4:	51 2c       	mov	r5, r1
 5d6:	31 2c       	mov	r3, r1
 5d8:	20 e0       	ldi	r18, 0x00	; 0
 5da:	20 32       	cpi	r18, 0x20	; 32
 5dc:	a0 f4       	brcc	.+40     	; 0x606 <vfprintf+0x88>
 5de:	8b 32       	cpi	r24, 0x2B	; 43
 5e0:	69 f0       	breq	.+26     	; 0x5fc <vfprintf+0x7e>
 5e2:	30 f4       	brcc	.+12     	; 0x5f0 <vfprintf+0x72>
 5e4:	80 32       	cpi	r24, 0x20	; 32
 5e6:	59 f0       	breq	.+22     	; 0x5fe <vfprintf+0x80>
 5e8:	83 32       	cpi	r24, 0x23	; 35
 5ea:	69 f4       	brne	.+26     	; 0x606 <vfprintf+0x88>
 5ec:	20 61       	ori	r18, 0x10	; 16
 5ee:	2c c0       	rjmp	.+88     	; 0x648 <vfprintf+0xca>
 5f0:	8d 32       	cpi	r24, 0x2D	; 45
 5f2:	39 f0       	breq	.+14     	; 0x602 <vfprintf+0x84>
 5f4:	80 33       	cpi	r24, 0x30	; 48
 5f6:	39 f4       	brne	.+14     	; 0x606 <vfprintf+0x88>
 5f8:	21 60       	ori	r18, 0x01	; 1
 5fa:	26 c0       	rjmp	.+76     	; 0x648 <vfprintf+0xca>
 5fc:	22 60       	ori	r18, 0x02	; 2
 5fe:	24 60       	ori	r18, 0x04	; 4
 600:	23 c0       	rjmp	.+70     	; 0x648 <vfprintf+0xca>
 602:	28 60       	ori	r18, 0x08	; 8
 604:	21 c0       	rjmp	.+66     	; 0x648 <vfprintf+0xca>
 606:	27 fd       	sbrc	r18, 7
 608:	27 c0       	rjmp	.+78     	; 0x658 <vfprintf+0xda>
 60a:	30 ed       	ldi	r19, 0xD0	; 208
 60c:	38 0f       	add	r19, r24
 60e:	3a 30       	cpi	r19, 0x0A	; 10
 610:	78 f4       	brcc	.+30     	; 0x630 <vfprintf+0xb2>
 612:	26 ff       	sbrs	r18, 6
 614:	06 c0       	rjmp	.+12     	; 0x622 <vfprintf+0xa4>
 616:	fa e0       	ldi	r31, 0x0A	; 10
 618:	5f 9e       	mul	r5, r31
 61a:	30 0d       	add	r19, r0
 61c:	11 24       	eor	r1, r1
 61e:	53 2e       	mov	r5, r19
 620:	13 c0       	rjmp	.+38     	; 0x648 <vfprintf+0xca>
 622:	8a e0       	ldi	r24, 0x0A	; 10
 624:	38 9e       	mul	r3, r24
 626:	30 0d       	add	r19, r0
 628:	11 24       	eor	r1, r1
 62a:	33 2e       	mov	r3, r19
 62c:	20 62       	ori	r18, 0x20	; 32
 62e:	0c c0       	rjmp	.+24     	; 0x648 <vfprintf+0xca>
 630:	8e 32       	cpi	r24, 0x2E	; 46
 632:	21 f4       	brne	.+8      	; 0x63c <vfprintf+0xbe>
 634:	26 fd       	sbrc	r18, 6
 636:	6b c1       	rjmp	.+726    	; 0x90e <vfprintf+0x390>
 638:	20 64       	ori	r18, 0x40	; 64
 63a:	06 c0       	rjmp	.+12     	; 0x648 <vfprintf+0xca>
 63c:	8c 36       	cpi	r24, 0x6C	; 108
 63e:	11 f4       	brne	.+4      	; 0x644 <vfprintf+0xc6>
 640:	20 68       	ori	r18, 0x80	; 128
 642:	02 c0       	rjmp	.+4      	; 0x648 <vfprintf+0xca>
 644:	88 36       	cpi	r24, 0x68	; 104
 646:	41 f4       	brne	.+16     	; 0x658 <vfprintf+0xda>
 648:	f6 01       	movw	r30, r12
 64a:	93 fd       	sbrc	r25, 3
 64c:	85 91       	lpm	r24, Z+
 64e:	93 ff       	sbrs	r25, 3
 650:	81 91       	ld	r24, Z+
 652:	6f 01       	movw	r12, r30
 654:	81 11       	cpse	r24, r1
 656:	c1 cf       	rjmp	.-126    	; 0x5da <vfprintf+0x5c>
 658:	98 2f       	mov	r25, r24
 65a:	9f 7d       	andi	r25, 0xDF	; 223
 65c:	95 54       	subi	r25, 0x45	; 69
 65e:	93 30       	cpi	r25, 0x03	; 3
 660:	28 f4       	brcc	.+10     	; 0x66c <vfprintf+0xee>
 662:	0c 5f       	subi	r16, 0xFC	; 252
 664:	1f 4f       	sbci	r17, 0xFF	; 255
 666:	ff e3       	ldi	r31, 0x3F	; 63
 668:	f9 83       	std	Y+1, r31	; 0x01
 66a:	0d c0       	rjmp	.+26     	; 0x686 <vfprintf+0x108>
 66c:	83 36       	cpi	r24, 0x63	; 99
 66e:	31 f0       	breq	.+12     	; 0x67c <vfprintf+0xfe>
 670:	83 37       	cpi	r24, 0x73	; 115
 672:	71 f0       	breq	.+28     	; 0x690 <vfprintf+0x112>
 674:	83 35       	cpi	r24, 0x53	; 83
 676:	09 f0       	breq	.+2      	; 0x67a <vfprintf+0xfc>
 678:	5b c0       	rjmp	.+182    	; 0x730 <vfprintf+0x1b2>
 67a:	22 c0       	rjmp	.+68     	; 0x6c0 <vfprintf+0x142>
 67c:	f8 01       	movw	r30, r16
 67e:	80 81       	ld	r24, Z
 680:	89 83       	std	Y+1, r24	; 0x01
 682:	0e 5f       	subi	r16, 0xFE	; 254
 684:	1f 4f       	sbci	r17, 0xFF	; 255
 686:	44 24       	eor	r4, r4
 688:	43 94       	inc	r4
 68a:	51 2c       	mov	r5, r1
 68c:	54 01       	movw	r10, r8
 68e:	15 c0       	rjmp	.+42     	; 0x6ba <vfprintf+0x13c>
 690:	38 01       	movw	r6, r16
 692:	f2 e0       	ldi	r31, 0x02	; 2
 694:	6f 0e       	add	r6, r31
 696:	71 1c       	adc	r7, r1
 698:	f8 01       	movw	r30, r16
 69a:	a0 80       	ld	r10, Z
 69c:	b1 80       	ldd	r11, Z+1	; 0x01
 69e:	26 ff       	sbrs	r18, 6
 6a0:	03 c0       	rjmp	.+6      	; 0x6a8 <vfprintf+0x12a>
 6a2:	65 2d       	mov	r22, r5
 6a4:	70 e0       	ldi	r23, 0x00	; 0
 6a6:	02 c0       	rjmp	.+4      	; 0x6ac <vfprintf+0x12e>
 6a8:	6f ef       	ldi	r22, 0xFF	; 255
 6aa:	7f ef       	ldi	r23, 0xFF	; 255
 6ac:	c5 01       	movw	r24, r10
 6ae:	2c 87       	std	Y+12, r18	; 0x0c
 6b0:	0e 94 ec 05 	call	0xbd8	; 0xbd8 <strnlen>
 6b4:	2c 01       	movw	r4, r24
 6b6:	83 01       	movw	r16, r6
 6b8:	2c 85       	ldd	r18, Y+12	; 0x0c
 6ba:	2f 77       	andi	r18, 0x7F	; 127
 6bc:	22 2e       	mov	r2, r18
 6be:	17 c0       	rjmp	.+46     	; 0x6ee <vfprintf+0x170>
 6c0:	38 01       	movw	r6, r16
 6c2:	f2 e0       	ldi	r31, 0x02	; 2
 6c4:	6f 0e       	add	r6, r31
 6c6:	71 1c       	adc	r7, r1
 6c8:	f8 01       	movw	r30, r16
 6ca:	a0 80       	ld	r10, Z
 6cc:	b1 80       	ldd	r11, Z+1	; 0x01
 6ce:	26 ff       	sbrs	r18, 6
 6d0:	03 c0       	rjmp	.+6      	; 0x6d8 <vfprintf+0x15a>
 6d2:	65 2d       	mov	r22, r5
 6d4:	70 e0       	ldi	r23, 0x00	; 0
 6d6:	02 c0       	rjmp	.+4      	; 0x6dc <vfprintf+0x15e>
 6d8:	6f ef       	ldi	r22, 0xFF	; 255
 6da:	7f ef       	ldi	r23, 0xFF	; 255
 6dc:	c5 01       	movw	r24, r10
 6de:	2c 87       	std	Y+12, r18	; 0x0c
 6e0:	0e 94 da 05 	call	0xbb4	; 0xbb4 <strnlen_P>
 6e4:	2c 01       	movw	r4, r24
 6e6:	2c 85       	ldd	r18, Y+12	; 0x0c
 6e8:	20 68       	ori	r18, 0x80	; 128
 6ea:	22 2e       	mov	r2, r18
 6ec:	83 01       	movw	r16, r6
 6ee:	23 fc       	sbrc	r2, 3
 6f0:	1b c0       	rjmp	.+54     	; 0x728 <vfprintf+0x1aa>
 6f2:	83 2d       	mov	r24, r3
 6f4:	90 e0       	ldi	r25, 0x00	; 0
 6f6:	48 16       	cp	r4, r24
 6f8:	59 06       	cpc	r5, r25
 6fa:	b0 f4       	brcc	.+44     	; 0x728 <vfprintf+0x1aa>
 6fc:	b7 01       	movw	r22, r14
 6fe:	80 e2       	ldi	r24, 0x20	; 32
 700:	90 e0       	ldi	r25, 0x00	; 0
 702:	0e 94 f7 05 	call	0xbee	; 0xbee <fputc>
 706:	3a 94       	dec	r3
 708:	f4 cf       	rjmp	.-24     	; 0x6f2 <vfprintf+0x174>
 70a:	f5 01       	movw	r30, r10
 70c:	27 fc       	sbrc	r2, 7
 70e:	85 91       	lpm	r24, Z+
 710:	27 fe       	sbrs	r2, 7
 712:	81 91       	ld	r24, Z+
 714:	5f 01       	movw	r10, r30
 716:	b7 01       	movw	r22, r14
 718:	90 e0       	ldi	r25, 0x00	; 0
 71a:	0e 94 f7 05 	call	0xbee	; 0xbee <fputc>
 71e:	31 10       	cpse	r3, r1
 720:	3a 94       	dec	r3
 722:	f1 e0       	ldi	r31, 0x01	; 1
 724:	4f 1a       	sub	r4, r31
 726:	51 08       	sbc	r5, r1
 728:	41 14       	cp	r4, r1
 72a:	51 04       	cpc	r5, r1
 72c:	71 f7       	brne	.-36     	; 0x70a <vfprintf+0x18c>
 72e:	e5 c0       	rjmp	.+458    	; 0x8fa <vfprintf+0x37c>
 730:	84 36       	cpi	r24, 0x64	; 100
 732:	11 f0       	breq	.+4      	; 0x738 <vfprintf+0x1ba>
 734:	89 36       	cpi	r24, 0x69	; 105
 736:	39 f5       	brne	.+78     	; 0x786 <vfprintf+0x208>
 738:	f8 01       	movw	r30, r16
 73a:	27 ff       	sbrs	r18, 7
 73c:	07 c0       	rjmp	.+14     	; 0x74c <vfprintf+0x1ce>
 73e:	60 81       	ld	r22, Z
 740:	71 81       	ldd	r23, Z+1	; 0x01
 742:	82 81       	ldd	r24, Z+2	; 0x02
 744:	93 81       	ldd	r25, Z+3	; 0x03
 746:	0c 5f       	subi	r16, 0xFC	; 252
 748:	1f 4f       	sbci	r17, 0xFF	; 255
 74a:	08 c0       	rjmp	.+16     	; 0x75c <vfprintf+0x1de>
 74c:	60 81       	ld	r22, Z
 74e:	71 81       	ldd	r23, Z+1	; 0x01
 750:	07 2e       	mov	r0, r23
 752:	00 0c       	add	r0, r0
 754:	88 0b       	sbc	r24, r24
 756:	99 0b       	sbc	r25, r25
 758:	0e 5f       	subi	r16, 0xFE	; 254
 75a:	1f 4f       	sbci	r17, 0xFF	; 255
 75c:	2f 76       	andi	r18, 0x6F	; 111
 75e:	72 2e       	mov	r7, r18
 760:	97 ff       	sbrs	r25, 7
 762:	09 c0       	rjmp	.+18     	; 0x776 <vfprintf+0x1f8>
 764:	90 95       	com	r25
 766:	80 95       	com	r24
 768:	70 95       	com	r23
 76a:	61 95       	neg	r22
 76c:	7f 4f       	sbci	r23, 0xFF	; 255
 76e:	8f 4f       	sbci	r24, 0xFF	; 255
 770:	9f 4f       	sbci	r25, 0xFF	; 255
 772:	20 68       	ori	r18, 0x80	; 128
 774:	72 2e       	mov	r7, r18
 776:	2a e0       	ldi	r18, 0x0A	; 10
 778:	30 e0       	ldi	r19, 0x00	; 0
 77a:	a4 01       	movw	r20, r8
 77c:	0e 94 2f 06 	call	0xc5e	; 0xc5e <__ultoa_invert>
 780:	a8 2e       	mov	r10, r24
 782:	a8 18       	sub	r10, r8
 784:	44 c0       	rjmp	.+136    	; 0x80e <vfprintf+0x290>
 786:	85 37       	cpi	r24, 0x75	; 117
 788:	29 f4       	brne	.+10     	; 0x794 <vfprintf+0x216>
 78a:	2f 7e       	andi	r18, 0xEF	; 239
 78c:	b2 2e       	mov	r11, r18
 78e:	2a e0       	ldi	r18, 0x0A	; 10
 790:	30 e0       	ldi	r19, 0x00	; 0
 792:	25 c0       	rjmp	.+74     	; 0x7de <vfprintf+0x260>
 794:	f2 2f       	mov	r31, r18
 796:	f9 7f       	andi	r31, 0xF9	; 249
 798:	bf 2e       	mov	r11, r31
 79a:	8f 36       	cpi	r24, 0x6F	; 111
 79c:	c1 f0       	breq	.+48     	; 0x7ce <vfprintf+0x250>
 79e:	18 f4       	brcc	.+6      	; 0x7a6 <vfprintf+0x228>
 7a0:	88 35       	cpi	r24, 0x58	; 88
 7a2:	79 f0       	breq	.+30     	; 0x7c2 <vfprintf+0x244>
 7a4:	b4 c0       	rjmp	.+360    	; 0x90e <vfprintf+0x390>
 7a6:	80 37       	cpi	r24, 0x70	; 112
 7a8:	19 f0       	breq	.+6      	; 0x7b0 <vfprintf+0x232>
 7aa:	88 37       	cpi	r24, 0x78	; 120
 7ac:	21 f0       	breq	.+8      	; 0x7b6 <vfprintf+0x238>
 7ae:	af c0       	rjmp	.+350    	; 0x90e <vfprintf+0x390>
 7b0:	2f 2f       	mov	r18, r31
 7b2:	20 61       	ori	r18, 0x10	; 16
 7b4:	b2 2e       	mov	r11, r18
 7b6:	b4 fe       	sbrs	r11, 4
 7b8:	0d c0       	rjmp	.+26     	; 0x7d4 <vfprintf+0x256>
 7ba:	8b 2d       	mov	r24, r11
 7bc:	84 60       	ori	r24, 0x04	; 4
 7be:	b8 2e       	mov	r11, r24
 7c0:	09 c0       	rjmp	.+18     	; 0x7d4 <vfprintf+0x256>
 7c2:	24 ff       	sbrs	r18, 4
 7c4:	0a c0       	rjmp	.+20     	; 0x7da <vfprintf+0x25c>
 7c6:	9f 2f       	mov	r25, r31
 7c8:	96 60       	ori	r25, 0x06	; 6
 7ca:	b9 2e       	mov	r11, r25
 7cc:	06 c0       	rjmp	.+12     	; 0x7da <vfprintf+0x25c>
 7ce:	28 e0       	ldi	r18, 0x08	; 8
 7d0:	30 e0       	ldi	r19, 0x00	; 0
 7d2:	05 c0       	rjmp	.+10     	; 0x7de <vfprintf+0x260>
 7d4:	20 e1       	ldi	r18, 0x10	; 16
 7d6:	30 e0       	ldi	r19, 0x00	; 0
 7d8:	02 c0       	rjmp	.+4      	; 0x7de <vfprintf+0x260>
 7da:	20 e1       	ldi	r18, 0x10	; 16
 7dc:	32 e0       	ldi	r19, 0x02	; 2
 7de:	f8 01       	movw	r30, r16
 7e0:	b7 fe       	sbrs	r11, 7
 7e2:	07 c0       	rjmp	.+14     	; 0x7f2 <vfprintf+0x274>
 7e4:	60 81       	ld	r22, Z
 7e6:	71 81       	ldd	r23, Z+1	; 0x01
 7e8:	82 81       	ldd	r24, Z+2	; 0x02
 7ea:	93 81       	ldd	r25, Z+3	; 0x03
 7ec:	0c 5f       	subi	r16, 0xFC	; 252
 7ee:	1f 4f       	sbci	r17, 0xFF	; 255
 7f0:	06 c0       	rjmp	.+12     	; 0x7fe <vfprintf+0x280>
 7f2:	60 81       	ld	r22, Z
 7f4:	71 81       	ldd	r23, Z+1	; 0x01
 7f6:	80 e0       	ldi	r24, 0x00	; 0
 7f8:	90 e0       	ldi	r25, 0x00	; 0
 7fa:	0e 5f       	subi	r16, 0xFE	; 254
 7fc:	1f 4f       	sbci	r17, 0xFF	; 255
 7fe:	a4 01       	movw	r20, r8
 800:	0e 94 2f 06 	call	0xc5e	; 0xc5e <__ultoa_invert>
 804:	a8 2e       	mov	r10, r24
 806:	a8 18       	sub	r10, r8
 808:	fb 2d       	mov	r31, r11
 80a:	ff 77       	andi	r31, 0x7F	; 127
 80c:	7f 2e       	mov	r7, r31
 80e:	76 fe       	sbrs	r7, 6
 810:	0b c0       	rjmp	.+22     	; 0x828 <vfprintf+0x2aa>
 812:	37 2d       	mov	r19, r7
 814:	3e 7f       	andi	r19, 0xFE	; 254
 816:	a5 14       	cp	r10, r5
 818:	50 f4       	brcc	.+20     	; 0x82e <vfprintf+0x2b0>
 81a:	74 fe       	sbrs	r7, 4
 81c:	0a c0       	rjmp	.+20     	; 0x832 <vfprintf+0x2b4>
 81e:	72 fc       	sbrc	r7, 2
 820:	08 c0       	rjmp	.+16     	; 0x832 <vfprintf+0x2b4>
 822:	37 2d       	mov	r19, r7
 824:	3e 7e       	andi	r19, 0xEE	; 238
 826:	05 c0       	rjmp	.+10     	; 0x832 <vfprintf+0x2b4>
 828:	ba 2c       	mov	r11, r10
 82a:	37 2d       	mov	r19, r7
 82c:	03 c0       	rjmp	.+6      	; 0x834 <vfprintf+0x2b6>
 82e:	ba 2c       	mov	r11, r10
 830:	01 c0       	rjmp	.+2      	; 0x834 <vfprintf+0x2b6>
 832:	b5 2c       	mov	r11, r5
 834:	34 ff       	sbrs	r19, 4
 836:	0d c0       	rjmp	.+26     	; 0x852 <vfprintf+0x2d4>
 838:	fe 01       	movw	r30, r28
 83a:	ea 0d       	add	r30, r10
 83c:	f1 1d       	adc	r31, r1
 83e:	80 81       	ld	r24, Z
 840:	80 33       	cpi	r24, 0x30	; 48
 842:	11 f4       	brne	.+4      	; 0x848 <vfprintf+0x2ca>
 844:	39 7e       	andi	r19, 0xE9	; 233
 846:	09 c0       	rjmp	.+18     	; 0x85a <vfprintf+0x2dc>
 848:	32 ff       	sbrs	r19, 2
 84a:	06 c0       	rjmp	.+12     	; 0x858 <vfprintf+0x2da>
 84c:	b3 94       	inc	r11
 84e:	b3 94       	inc	r11
 850:	04 c0       	rjmp	.+8      	; 0x85a <vfprintf+0x2dc>
 852:	83 2f       	mov	r24, r19
 854:	86 78       	andi	r24, 0x86	; 134
 856:	09 f0       	breq	.+2      	; 0x85a <vfprintf+0x2dc>
 858:	b3 94       	inc	r11
 85a:	33 fd       	sbrc	r19, 3
 85c:	13 c0       	rjmp	.+38     	; 0x884 <vfprintf+0x306>
 85e:	30 ff       	sbrs	r19, 0
 860:	06 c0       	rjmp	.+12     	; 0x86e <vfprintf+0x2f0>
 862:	5a 2c       	mov	r5, r10
 864:	b3 14       	cp	r11, r3
 866:	18 f4       	brcc	.+6      	; 0x86e <vfprintf+0x2f0>
 868:	53 0c       	add	r5, r3
 86a:	5b 18       	sub	r5, r11
 86c:	b3 2c       	mov	r11, r3
 86e:	b3 14       	cp	r11, r3
 870:	68 f4       	brcc	.+26     	; 0x88c <vfprintf+0x30e>
 872:	b7 01       	movw	r22, r14
 874:	80 e2       	ldi	r24, 0x20	; 32
 876:	90 e0       	ldi	r25, 0x00	; 0
 878:	3c 87       	std	Y+12, r19	; 0x0c
 87a:	0e 94 f7 05 	call	0xbee	; 0xbee <fputc>
 87e:	b3 94       	inc	r11
 880:	3c 85       	ldd	r19, Y+12	; 0x0c
 882:	f5 cf       	rjmp	.-22     	; 0x86e <vfprintf+0x2f0>
 884:	b3 14       	cp	r11, r3
 886:	10 f4       	brcc	.+4      	; 0x88c <vfprintf+0x30e>
 888:	3b 18       	sub	r3, r11
 88a:	01 c0       	rjmp	.+2      	; 0x88e <vfprintf+0x310>
 88c:	31 2c       	mov	r3, r1
 88e:	34 ff       	sbrs	r19, 4
 890:	12 c0       	rjmp	.+36     	; 0x8b6 <vfprintf+0x338>
 892:	b7 01       	movw	r22, r14
 894:	80 e3       	ldi	r24, 0x30	; 48
 896:	90 e0       	ldi	r25, 0x00	; 0
 898:	3c 87       	std	Y+12, r19	; 0x0c
 89a:	0e 94 f7 05 	call	0xbee	; 0xbee <fputc>
 89e:	3c 85       	ldd	r19, Y+12	; 0x0c
 8a0:	32 ff       	sbrs	r19, 2
 8a2:	17 c0       	rjmp	.+46     	; 0x8d2 <vfprintf+0x354>
 8a4:	31 fd       	sbrc	r19, 1
 8a6:	03 c0       	rjmp	.+6      	; 0x8ae <vfprintf+0x330>
 8a8:	88 e7       	ldi	r24, 0x78	; 120
 8aa:	90 e0       	ldi	r25, 0x00	; 0
 8ac:	02 c0       	rjmp	.+4      	; 0x8b2 <vfprintf+0x334>
 8ae:	88 e5       	ldi	r24, 0x58	; 88
 8b0:	90 e0       	ldi	r25, 0x00	; 0
 8b2:	b7 01       	movw	r22, r14
 8b4:	0c c0       	rjmp	.+24     	; 0x8ce <vfprintf+0x350>
 8b6:	83 2f       	mov	r24, r19
 8b8:	86 78       	andi	r24, 0x86	; 134
 8ba:	59 f0       	breq	.+22     	; 0x8d2 <vfprintf+0x354>
 8bc:	31 ff       	sbrs	r19, 1
 8be:	02 c0       	rjmp	.+4      	; 0x8c4 <vfprintf+0x346>
 8c0:	8b e2       	ldi	r24, 0x2B	; 43
 8c2:	01 c0       	rjmp	.+2      	; 0x8c6 <vfprintf+0x348>
 8c4:	80 e2       	ldi	r24, 0x20	; 32
 8c6:	37 fd       	sbrc	r19, 7
 8c8:	8d e2       	ldi	r24, 0x2D	; 45
 8ca:	b7 01       	movw	r22, r14
 8cc:	90 e0       	ldi	r25, 0x00	; 0
 8ce:	0e 94 f7 05 	call	0xbee	; 0xbee <fputc>
 8d2:	a5 14       	cp	r10, r5
 8d4:	38 f4       	brcc	.+14     	; 0x8e4 <vfprintf+0x366>
 8d6:	b7 01       	movw	r22, r14
 8d8:	80 e3       	ldi	r24, 0x30	; 48
 8da:	90 e0       	ldi	r25, 0x00	; 0
 8dc:	0e 94 f7 05 	call	0xbee	; 0xbee <fputc>
 8e0:	5a 94       	dec	r5
 8e2:	f7 cf       	rjmp	.-18     	; 0x8d2 <vfprintf+0x354>
 8e4:	aa 94       	dec	r10
 8e6:	f4 01       	movw	r30, r8
 8e8:	ea 0d       	add	r30, r10
 8ea:	f1 1d       	adc	r31, r1
 8ec:	80 81       	ld	r24, Z
 8ee:	b7 01       	movw	r22, r14
 8f0:	90 e0       	ldi	r25, 0x00	; 0
 8f2:	0e 94 f7 05 	call	0xbee	; 0xbee <fputc>
 8f6:	a1 10       	cpse	r10, r1
 8f8:	f5 cf       	rjmp	.-22     	; 0x8e4 <vfprintf+0x366>
 8fa:	33 20       	and	r3, r3
 8fc:	09 f4       	brne	.+2      	; 0x900 <vfprintf+0x382>
 8fe:	51 ce       	rjmp	.-862    	; 0x5a2 <vfprintf+0x24>
 900:	b7 01       	movw	r22, r14
 902:	80 e2       	ldi	r24, 0x20	; 32
 904:	90 e0       	ldi	r25, 0x00	; 0
 906:	0e 94 f7 05 	call	0xbee	; 0xbee <fputc>
 90a:	3a 94       	dec	r3
 90c:	f6 cf       	rjmp	.-20     	; 0x8fa <vfprintf+0x37c>
 90e:	f7 01       	movw	r30, r14
 910:	86 81       	ldd	r24, Z+6	; 0x06
 912:	97 81       	ldd	r25, Z+7	; 0x07
 914:	02 c0       	rjmp	.+4      	; 0x91a <vfprintf+0x39c>
 916:	8f ef       	ldi	r24, 0xFF	; 255
 918:	9f ef       	ldi	r25, 0xFF	; 255
 91a:	2c 96       	adiw	r28, 0x0c	; 12
 91c:	e2 e1       	ldi	r30, 0x12	; 18
 91e:	0c 94 a9 06 	jmp	0xd52	; 0xd52 <__epilogue_restores__>

00000922 <calloc>:
 922:	0f 93       	push	r16
 924:	1f 93       	push	r17
 926:	cf 93       	push	r28
 928:	df 93       	push	r29
 92a:	86 9f       	mul	r24, r22
 92c:	80 01       	movw	r16, r0
 92e:	87 9f       	mul	r24, r23
 930:	10 0d       	add	r17, r0
 932:	96 9f       	mul	r25, r22
 934:	10 0d       	add	r17, r0
 936:	11 24       	eor	r1, r1
 938:	c8 01       	movw	r24, r16
 93a:	0e 94 ad 04 	call	0x95a	; 0x95a <malloc>
 93e:	ec 01       	movw	r28, r24
 940:	00 97       	sbiw	r24, 0x00	; 0
 942:	29 f0       	breq	.+10     	; 0x94e <calloc+0x2c>
 944:	a8 01       	movw	r20, r16
 946:	60 e0       	ldi	r22, 0x00	; 0
 948:	70 e0       	ldi	r23, 0x00	; 0
 94a:	0e 94 e5 05 	call	0xbca	; 0xbca <memset>
 94e:	ce 01       	movw	r24, r28
 950:	df 91       	pop	r29
 952:	cf 91       	pop	r28
 954:	1f 91       	pop	r17
 956:	0f 91       	pop	r16
 958:	08 95       	ret

0000095a <malloc>:
 95a:	cf 93       	push	r28
 95c:	df 93       	push	r29
 95e:	82 30       	cpi	r24, 0x02	; 2
 960:	91 05       	cpc	r25, r1
 962:	10 f4       	brcc	.+4      	; 0x968 <malloc+0xe>
 964:	82 e0       	ldi	r24, 0x02	; 2
 966:	90 e0       	ldi	r25, 0x00	; 0
 968:	e0 91 7a 01 	lds	r30, 0x017A	; 0x80017a <__flp>
 96c:	f0 91 7b 01 	lds	r31, 0x017B	; 0x80017b <__flp+0x1>
 970:	20 e0       	ldi	r18, 0x00	; 0
 972:	30 e0       	ldi	r19, 0x00	; 0
 974:	c0 e0       	ldi	r28, 0x00	; 0
 976:	d0 e0       	ldi	r29, 0x00	; 0
 978:	30 97       	sbiw	r30, 0x00	; 0
 97a:	11 f1       	breq	.+68     	; 0x9c0 <malloc+0x66>
 97c:	40 81       	ld	r20, Z
 97e:	51 81       	ldd	r21, Z+1	; 0x01
 980:	48 17       	cp	r20, r24
 982:	59 07       	cpc	r21, r25
 984:	c0 f0       	brcs	.+48     	; 0x9b6 <malloc+0x5c>
 986:	48 17       	cp	r20, r24
 988:	59 07       	cpc	r21, r25
 98a:	61 f4       	brne	.+24     	; 0x9a4 <malloc+0x4a>
 98c:	82 81       	ldd	r24, Z+2	; 0x02
 98e:	93 81       	ldd	r25, Z+3	; 0x03
 990:	20 97       	sbiw	r28, 0x00	; 0
 992:	19 f0       	breq	.+6      	; 0x99a <malloc+0x40>
 994:	9b 83       	std	Y+3, r25	; 0x03
 996:	8a 83       	std	Y+2, r24	; 0x02
 998:	2b c0       	rjmp	.+86     	; 0x9f0 <malloc+0x96>
 99a:	90 93 7b 01 	sts	0x017B, r25	; 0x80017b <__flp+0x1>
 99e:	80 93 7a 01 	sts	0x017A, r24	; 0x80017a <__flp>
 9a2:	26 c0       	rjmp	.+76     	; 0x9f0 <malloc+0x96>
 9a4:	21 15       	cp	r18, r1
 9a6:	31 05       	cpc	r19, r1
 9a8:	19 f0       	breq	.+6      	; 0x9b0 <malloc+0x56>
 9aa:	42 17       	cp	r20, r18
 9ac:	53 07       	cpc	r21, r19
 9ae:	18 f4       	brcc	.+6      	; 0x9b6 <malloc+0x5c>
 9b0:	9a 01       	movw	r18, r20
 9b2:	be 01       	movw	r22, r28
 9b4:	df 01       	movw	r26, r30
 9b6:	ef 01       	movw	r28, r30
 9b8:	02 80       	ldd	r0, Z+2	; 0x02
 9ba:	f3 81       	ldd	r31, Z+3	; 0x03
 9bc:	e0 2d       	mov	r30, r0
 9be:	dc cf       	rjmp	.-72     	; 0x978 <malloc+0x1e>
 9c0:	21 15       	cp	r18, r1
 9c2:	31 05       	cpc	r19, r1
 9c4:	09 f1       	breq	.+66     	; 0xa08 <malloc+0xae>
 9c6:	28 1b       	sub	r18, r24
 9c8:	39 0b       	sbc	r19, r25
 9ca:	24 30       	cpi	r18, 0x04	; 4
 9cc:	31 05       	cpc	r19, r1
 9ce:	90 f4       	brcc	.+36     	; 0x9f4 <malloc+0x9a>
 9d0:	12 96       	adiw	r26, 0x02	; 2
 9d2:	8d 91       	ld	r24, X+
 9d4:	9c 91       	ld	r25, X
 9d6:	13 97       	sbiw	r26, 0x03	; 3
 9d8:	61 15       	cp	r22, r1
 9da:	71 05       	cpc	r23, r1
 9dc:	21 f0       	breq	.+8      	; 0x9e6 <malloc+0x8c>
 9de:	fb 01       	movw	r30, r22
 9e0:	93 83       	std	Z+3, r25	; 0x03
 9e2:	82 83       	std	Z+2, r24	; 0x02
 9e4:	04 c0       	rjmp	.+8      	; 0x9ee <malloc+0x94>
 9e6:	90 93 7b 01 	sts	0x017B, r25	; 0x80017b <__flp+0x1>
 9ea:	80 93 7a 01 	sts	0x017A, r24	; 0x80017a <__flp>
 9ee:	fd 01       	movw	r30, r26
 9f0:	32 96       	adiw	r30, 0x02	; 2
 9f2:	44 c0       	rjmp	.+136    	; 0xa7c <malloc+0x122>
 9f4:	fd 01       	movw	r30, r26
 9f6:	e2 0f       	add	r30, r18
 9f8:	f3 1f       	adc	r31, r19
 9fa:	81 93       	st	Z+, r24
 9fc:	91 93       	st	Z+, r25
 9fe:	22 50       	subi	r18, 0x02	; 2
 a00:	31 09       	sbc	r19, r1
 a02:	2d 93       	st	X+, r18
 a04:	3c 93       	st	X, r19
 a06:	3a c0       	rjmp	.+116    	; 0xa7c <malloc+0x122>
 a08:	20 91 78 01 	lds	r18, 0x0178	; 0x800178 <__brkval>
 a0c:	30 91 79 01 	lds	r19, 0x0179	; 0x800179 <__brkval+0x1>
 a10:	23 2b       	or	r18, r19
 a12:	41 f4       	brne	.+16     	; 0xa24 <malloc+0xca>
 a14:	20 91 02 01 	lds	r18, 0x0102	; 0x800102 <__malloc_heap_start>
 a18:	30 91 03 01 	lds	r19, 0x0103	; 0x800103 <__malloc_heap_start+0x1>
 a1c:	30 93 79 01 	sts	0x0179, r19	; 0x800179 <__brkval+0x1>
 a20:	20 93 78 01 	sts	0x0178, r18	; 0x800178 <__brkval>
 a24:	20 91 00 01 	lds	r18, 0x0100	; 0x800100 <__data_start>
 a28:	30 91 01 01 	lds	r19, 0x0101	; 0x800101 <__data_start+0x1>
 a2c:	21 15       	cp	r18, r1
 a2e:	31 05       	cpc	r19, r1
 a30:	41 f4       	brne	.+16     	; 0xa42 <malloc+0xe8>
 a32:	2d b7       	in	r18, 0x3d	; 61
 a34:	3e b7       	in	r19, 0x3e	; 62
 a36:	40 91 04 01 	lds	r20, 0x0104	; 0x800104 <__malloc_margin>
 a3a:	50 91 05 01 	lds	r21, 0x0105	; 0x800105 <__malloc_margin+0x1>
 a3e:	24 1b       	sub	r18, r20
 a40:	35 0b       	sbc	r19, r21
 a42:	e0 91 78 01 	lds	r30, 0x0178	; 0x800178 <__brkval>
 a46:	f0 91 79 01 	lds	r31, 0x0179	; 0x800179 <__brkval+0x1>
 a4a:	e2 17       	cp	r30, r18
 a4c:	f3 07       	cpc	r31, r19
 a4e:	a0 f4       	brcc	.+40     	; 0xa78 <malloc+0x11e>
 a50:	2e 1b       	sub	r18, r30
 a52:	3f 0b       	sbc	r19, r31
 a54:	28 17       	cp	r18, r24
 a56:	39 07       	cpc	r19, r25
 a58:	78 f0       	brcs	.+30     	; 0xa78 <malloc+0x11e>
 a5a:	ac 01       	movw	r20, r24
 a5c:	4e 5f       	subi	r20, 0xFE	; 254
 a5e:	5f 4f       	sbci	r21, 0xFF	; 255
 a60:	24 17       	cp	r18, r20
 a62:	35 07       	cpc	r19, r21
 a64:	48 f0       	brcs	.+18     	; 0xa78 <malloc+0x11e>
 a66:	4e 0f       	add	r20, r30
 a68:	5f 1f       	adc	r21, r31
 a6a:	50 93 79 01 	sts	0x0179, r21	; 0x800179 <__brkval+0x1>
 a6e:	40 93 78 01 	sts	0x0178, r20	; 0x800178 <__brkval>
 a72:	81 93       	st	Z+, r24
 a74:	91 93       	st	Z+, r25
 a76:	02 c0       	rjmp	.+4      	; 0xa7c <malloc+0x122>
 a78:	e0 e0       	ldi	r30, 0x00	; 0
 a7a:	f0 e0       	ldi	r31, 0x00	; 0
 a7c:	cf 01       	movw	r24, r30
 a7e:	df 91       	pop	r29
 a80:	cf 91       	pop	r28
 a82:	08 95       	ret

00000a84 <free>:
 a84:	0f 93       	push	r16
 a86:	1f 93       	push	r17
 a88:	cf 93       	push	r28
 a8a:	df 93       	push	r29
 a8c:	00 97       	sbiw	r24, 0x00	; 0
 a8e:	09 f4       	brne	.+2      	; 0xa92 <free+0xe>
 a90:	8c c0       	rjmp	.+280    	; 0xbaa <free+0x126>
 a92:	fc 01       	movw	r30, r24
 a94:	32 97       	sbiw	r30, 0x02	; 2
 a96:	13 82       	std	Z+3, r1	; 0x03
 a98:	12 82       	std	Z+2, r1	; 0x02
 a9a:	00 91 7a 01 	lds	r16, 0x017A	; 0x80017a <__flp>
 a9e:	10 91 7b 01 	lds	r17, 0x017B	; 0x80017b <__flp+0x1>
 aa2:	01 15       	cp	r16, r1
 aa4:	11 05       	cpc	r17, r1
 aa6:	81 f4       	brne	.+32     	; 0xac8 <free+0x44>
 aa8:	20 81       	ld	r18, Z
 aaa:	31 81       	ldd	r19, Z+1	; 0x01
 aac:	82 0f       	add	r24, r18
 aae:	93 1f       	adc	r25, r19
 ab0:	20 91 78 01 	lds	r18, 0x0178	; 0x800178 <__brkval>
 ab4:	30 91 79 01 	lds	r19, 0x0179	; 0x800179 <__brkval+0x1>
 ab8:	28 17       	cp	r18, r24
 aba:	39 07       	cpc	r19, r25
 abc:	79 f5       	brne	.+94     	; 0xb1c <free+0x98>
 abe:	f0 93 79 01 	sts	0x0179, r31	; 0x800179 <__brkval+0x1>
 ac2:	e0 93 78 01 	sts	0x0178, r30	; 0x800178 <__brkval>
 ac6:	71 c0       	rjmp	.+226    	; 0xbaa <free+0x126>
 ac8:	d8 01       	movw	r26, r16
 aca:	40 e0       	ldi	r20, 0x00	; 0
 acc:	50 e0       	ldi	r21, 0x00	; 0
 ace:	ae 17       	cp	r26, r30
 ad0:	bf 07       	cpc	r27, r31
 ad2:	50 f4       	brcc	.+20     	; 0xae8 <free+0x64>
 ad4:	12 96       	adiw	r26, 0x02	; 2
 ad6:	2d 91       	ld	r18, X+
 ad8:	3c 91       	ld	r19, X
 ada:	13 97       	sbiw	r26, 0x03	; 3
 adc:	ad 01       	movw	r20, r26
 ade:	21 15       	cp	r18, r1
 ae0:	31 05       	cpc	r19, r1
 ae2:	09 f1       	breq	.+66     	; 0xb26 <free+0xa2>
 ae4:	d9 01       	movw	r26, r18
 ae6:	f3 cf       	rjmp	.-26     	; 0xace <free+0x4a>
 ae8:	9d 01       	movw	r18, r26
 aea:	da 01       	movw	r26, r20
 aec:	33 83       	std	Z+3, r19	; 0x03
 aee:	22 83       	std	Z+2, r18	; 0x02
 af0:	60 81       	ld	r22, Z
 af2:	71 81       	ldd	r23, Z+1	; 0x01
 af4:	86 0f       	add	r24, r22
 af6:	97 1f       	adc	r25, r23
 af8:	82 17       	cp	r24, r18
 afa:	93 07       	cpc	r25, r19
 afc:	69 f4       	brne	.+26     	; 0xb18 <free+0x94>
 afe:	ec 01       	movw	r28, r24
 b00:	28 81       	ld	r18, Y
 b02:	39 81       	ldd	r19, Y+1	; 0x01
 b04:	26 0f       	add	r18, r22
 b06:	37 1f       	adc	r19, r23
 b08:	2e 5f       	subi	r18, 0xFE	; 254
 b0a:	3f 4f       	sbci	r19, 0xFF	; 255
 b0c:	31 83       	std	Z+1, r19	; 0x01
 b0e:	20 83       	st	Z, r18
 b10:	8a 81       	ldd	r24, Y+2	; 0x02
 b12:	9b 81       	ldd	r25, Y+3	; 0x03
 b14:	93 83       	std	Z+3, r25	; 0x03
 b16:	82 83       	std	Z+2, r24	; 0x02
 b18:	45 2b       	or	r20, r21
 b1a:	29 f4       	brne	.+10     	; 0xb26 <free+0xa2>
 b1c:	f0 93 7b 01 	sts	0x017B, r31	; 0x80017b <__flp+0x1>
 b20:	e0 93 7a 01 	sts	0x017A, r30	; 0x80017a <__flp>
 b24:	42 c0       	rjmp	.+132    	; 0xbaa <free+0x126>
 b26:	13 96       	adiw	r26, 0x03	; 3
 b28:	fc 93       	st	X, r31
 b2a:	ee 93       	st	-X, r30
 b2c:	12 97       	sbiw	r26, 0x02	; 2
 b2e:	ed 01       	movw	r28, r26
 b30:	49 91       	ld	r20, Y+
 b32:	59 91       	ld	r21, Y+
 b34:	9e 01       	movw	r18, r28
 b36:	24 0f       	add	r18, r20
 b38:	35 1f       	adc	r19, r21
 b3a:	e2 17       	cp	r30, r18
 b3c:	f3 07       	cpc	r31, r19
 b3e:	71 f4       	brne	.+28     	; 0xb5c <free+0xd8>
 b40:	80 81       	ld	r24, Z
 b42:	91 81       	ldd	r25, Z+1	; 0x01
 b44:	84 0f       	add	r24, r20
 b46:	95 1f       	adc	r25, r21
 b48:	02 96       	adiw	r24, 0x02	; 2
 b4a:	11 96       	adiw	r26, 0x01	; 1
 b4c:	9c 93       	st	X, r25
 b4e:	8e 93       	st	-X, r24
 b50:	82 81       	ldd	r24, Z+2	; 0x02
 b52:	93 81       	ldd	r25, Z+3	; 0x03
 b54:	13 96       	adiw	r26, 0x03	; 3
 b56:	9c 93       	st	X, r25
 b58:	8e 93       	st	-X, r24
 b5a:	12 97       	sbiw	r26, 0x02	; 2
 b5c:	e0 e0       	ldi	r30, 0x00	; 0
 b5e:	f0 e0       	ldi	r31, 0x00	; 0
 b60:	d8 01       	movw	r26, r16
 b62:	12 96       	adiw	r26, 0x02	; 2
 b64:	8d 91       	ld	r24, X+
 b66:	9c 91       	ld	r25, X
 b68:	13 97       	sbiw	r26, 0x03	; 3
 b6a:	00 97       	sbiw	r24, 0x00	; 0
 b6c:	19 f0       	breq	.+6      	; 0xb74 <free+0xf0>
 b6e:	f8 01       	movw	r30, r16
 b70:	8c 01       	movw	r16, r24
 b72:	f6 cf       	rjmp	.-20     	; 0xb60 <free+0xdc>
 b74:	8d 91       	ld	r24, X+
 b76:	9c 91       	ld	r25, X
 b78:	98 01       	movw	r18, r16
 b7a:	2e 5f       	subi	r18, 0xFE	; 254
 b7c:	3f 4f       	sbci	r19, 0xFF	; 255
 b7e:	82 0f       	add	r24, r18
 b80:	93 1f       	adc	r25, r19
 b82:	20 91 78 01 	lds	r18, 0x0178	; 0x800178 <__brkval>
 b86:	30 91 79 01 	lds	r19, 0x0179	; 0x800179 <__brkval+0x1>
 b8a:	28 17       	cp	r18, r24
 b8c:	39 07       	cpc	r19, r25
 b8e:	69 f4       	brne	.+26     	; 0xbaa <free+0x126>
 b90:	30 97       	sbiw	r30, 0x00	; 0
 b92:	29 f4       	brne	.+10     	; 0xb9e <free+0x11a>
 b94:	10 92 7b 01 	sts	0x017B, r1	; 0x80017b <__flp+0x1>
 b98:	10 92 7a 01 	sts	0x017A, r1	; 0x80017a <__flp>
 b9c:	02 c0       	rjmp	.+4      	; 0xba2 <free+0x11e>
 b9e:	13 82       	std	Z+3, r1	; 0x03
 ba0:	12 82       	std	Z+2, r1	; 0x02
 ba2:	10 93 79 01 	sts	0x0179, r17	; 0x800179 <__brkval+0x1>
 ba6:	00 93 78 01 	sts	0x0178, r16	; 0x800178 <__brkval>
 baa:	df 91       	pop	r29
 bac:	cf 91       	pop	r28
 bae:	1f 91       	pop	r17
 bb0:	0f 91       	pop	r16
 bb2:	08 95       	ret

00000bb4 <strnlen_P>:
 bb4:	fc 01       	movw	r30, r24
 bb6:	05 90       	lpm	r0, Z+
 bb8:	61 50       	subi	r22, 0x01	; 1
 bba:	70 40       	sbci	r23, 0x00	; 0
 bbc:	01 10       	cpse	r0, r1
 bbe:	d8 f7       	brcc	.-10     	; 0xbb6 <strnlen_P+0x2>
 bc0:	80 95       	com	r24
 bc2:	90 95       	com	r25
 bc4:	8e 0f       	add	r24, r30
 bc6:	9f 1f       	adc	r25, r31
 bc8:	08 95       	ret

00000bca <memset>:
 bca:	dc 01       	movw	r26, r24
 bcc:	01 c0       	rjmp	.+2      	; 0xbd0 <memset+0x6>
 bce:	6d 93       	st	X+, r22
 bd0:	41 50       	subi	r20, 0x01	; 1
 bd2:	50 40       	sbci	r21, 0x00	; 0
 bd4:	e0 f7       	brcc	.-8      	; 0xbce <memset+0x4>
 bd6:	08 95       	ret

00000bd8 <strnlen>:
 bd8:	fc 01       	movw	r30, r24
 bda:	61 50       	subi	r22, 0x01	; 1
 bdc:	70 40       	sbci	r23, 0x00	; 0
 bde:	01 90       	ld	r0, Z+
 be0:	01 10       	cpse	r0, r1
 be2:	d8 f7       	brcc	.-10     	; 0xbda <strnlen+0x2>
 be4:	80 95       	com	r24
 be6:	90 95       	com	r25
 be8:	8e 0f       	add	r24, r30
 bea:	9f 1f       	adc	r25, r31
 bec:	08 95       	ret

00000bee <fputc>:
 bee:	0f 93       	push	r16
 bf0:	1f 93       	push	r17
 bf2:	cf 93       	push	r28
 bf4:	df 93       	push	r29
 bf6:	fb 01       	movw	r30, r22
 bf8:	23 81       	ldd	r18, Z+3	; 0x03
 bfa:	21 fd       	sbrc	r18, 1
 bfc:	03 c0       	rjmp	.+6      	; 0xc04 <fputc+0x16>
 bfe:	8f ef       	ldi	r24, 0xFF	; 255
 c00:	9f ef       	ldi	r25, 0xFF	; 255
 c02:	28 c0       	rjmp	.+80     	; 0xc54 <fputc+0x66>
 c04:	22 ff       	sbrs	r18, 2
 c06:	16 c0       	rjmp	.+44     	; 0xc34 <fputc+0x46>
 c08:	46 81       	ldd	r20, Z+6	; 0x06
 c0a:	57 81       	ldd	r21, Z+7	; 0x07
 c0c:	24 81       	ldd	r18, Z+4	; 0x04
 c0e:	35 81       	ldd	r19, Z+5	; 0x05
 c10:	42 17       	cp	r20, r18
 c12:	53 07       	cpc	r21, r19
 c14:	44 f4       	brge	.+16     	; 0xc26 <fputc+0x38>
 c16:	a0 81       	ld	r26, Z
 c18:	b1 81       	ldd	r27, Z+1	; 0x01
 c1a:	9d 01       	movw	r18, r26
 c1c:	2f 5f       	subi	r18, 0xFF	; 255
 c1e:	3f 4f       	sbci	r19, 0xFF	; 255
 c20:	31 83       	std	Z+1, r19	; 0x01
 c22:	20 83       	st	Z, r18
 c24:	8c 93       	st	X, r24
 c26:	26 81       	ldd	r18, Z+6	; 0x06
 c28:	37 81       	ldd	r19, Z+7	; 0x07
 c2a:	2f 5f       	subi	r18, 0xFF	; 255
 c2c:	3f 4f       	sbci	r19, 0xFF	; 255
 c2e:	37 83       	std	Z+7, r19	; 0x07
 c30:	26 83       	std	Z+6, r18	; 0x06
 c32:	10 c0       	rjmp	.+32     	; 0xc54 <fputc+0x66>
 c34:	eb 01       	movw	r28, r22
 c36:	09 2f       	mov	r16, r25
 c38:	18 2f       	mov	r17, r24
 c3a:	00 84       	ldd	r0, Z+8	; 0x08
 c3c:	f1 85       	ldd	r31, Z+9	; 0x09
 c3e:	e0 2d       	mov	r30, r0
 c40:	09 95       	icall
 c42:	89 2b       	or	r24, r25
 c44:	e1 f6       	brne	.-72     	; 0xbfe <fputc+0x10>
 c46:	8e 81       	ldd	r24, Y+6	; 0x06
 c48:	9f 81       	ldd	r25, Y+7	; 0x07
 c4a:	01 96       	adiw	r24, 0x01	; 1
 c4c:	9f 83       	std	Y+7, r25	; 0x07
 c4e:	8e 83       	std	Y+6, r24	; 0x06
 c50:	81 2f       	mov	r24, r17
 c52:	90 2f       	mov	r25, r16
 c54:	df 91       	pop	r29
 c56:	cf 91       	pop	r28
 c58:	1f 91       	pop	r17
 c5a:	0f 91       	pop	r16
 c5c:	08 95       	ret

00000c5e <__ultoa_invert>:
 c5e:	fa 01       	movw	r30, r20
 c60:	aa 27       	eor	r26, r26
 c62:	28 30       	cpi	r18, 0x08	; 8
 c64:	51 f1       	breq	.+84     	; 0xcba <__ultoa_invert+0x5c>
 c66:	20 31       	cpi	r18, 0x10	; 16
 c68:	81 f1       	breq	.+96     	; 0xcca <__ultoa_invert+0x6c>
 c6a:	e8 94       	clt
 c6c:	6f 93       	push	r22
 c6e:	6e 7f       	andi	r22, 0xFE	; 254
 c70:	6e 5f       	subi	r22, 0xFE	; 254
 c72:	7f 4f       	sbci	r23, 0xFF	; 255
 c74:	8f 4f       	sbci	r24, 0xFF	; 255
 c76:	9f 4f       	sbci	r25, 0xFF	; 255
 c78:	af 4f       	sbci	r26, 0xFF	; 255
 c7a:	b1 e0       	ldi	r27, 0x01	; 1
 c7c:	3e d0       	rcall	.+124    	; 0xcfa <__ultoa_invert+0x9c>
 c7e:	b4 e0       	ldi	r27, 0x04	; 4
 c80:	3c d0       	rcall	.+120    	; 0xcfa <__ultoa_invert+0x9c>
 c82:	67 0f       	add	r22, r23
 c84:	78 1f       	adc	r23, r24
 c86:	89 1f       	adc	r24, r25
 c88:	9a 1f       	adc	r25, r26
 c8a:	a1 1d       	adc	r26, r1
 c8c:	68 0f       	add	r22, r24
 c8e:	79 1f       	adc	r23, r25
 c90:	8a 1f       	adc	r24, r26
 c92:	91 1d       	adc	r25, r1
 c94:	a1 1d       	adc	r26, r1
 c96:	6a 0f       	add	r22, r26
 c98:	71 1d       	adc	r23, r1
 c9a:	81 1d       	adc	r24, r1
 c9c:	91 1d       	adc	r25, r1
 c9e:	a1 1d       	adc	r26, r1
 ca0:	20 d0       	rcall	.+64     	; 0xce2 <__ultoa_invert+0x84>
 ca2:	09 f4       	brne	.+2      	; 0xca6 <__ultoa_invert+0x48>
 ca4:	68 94       	set
 ca6:	3f 91       	pop	r19
 ca8:	2a e0       	ldi	r18, 0x0A	; 10
 caa:	26 9f       	mul	r18, r22
 cac:	11 24       	eor	r1, r1
 cae:	30 19       	sub	r19, r0
 cb0:	30 5d       	subi	r19, 0xD0	; 208
 cb2:	31 93       	st	Z+, r19
 cb4:	de f6       	brtc	.-74     	; 0xc6c <__ultoa_invert+0xe>
 cb6:	cf 01       	movw	r24, r30
 cb8:	08 95       	ret
 cba:	46 2f       	mov	r20, r22
 cbc:	47 70       	andi	r20, 0x07	; 7
 cbe:	40 5d       	subi	r20, 0xD0	; 208
 cc0:	41 93       	st	Z+, r20
 cc2:	b3 e0       	ldi	r27, 0x03	; 3
 cc4:	0f d0       	rcall	.+30     	; 0xce4 <__ultoa_invert+0x86>
 cc6:	c9 f7       	brne	.-14     	; 0xcba <__ultoa_invert+0x5c>
 cc8:	f6 cf       	rjmp	.-20     	; 0xcb6 <__ultoa_invert+0x58>
 cca:	46 2f       	mov	r20, r22
 ccc:	4f 70       	andi	r20, 0x0F	; 15
 cce:	40 5d       	subi	r20, 0xD0	; 208
 cd0:	4a 33       	cpi	r20, 0x3A	; 58
 cd2:	18 f0       	brcs	.+6      	; 0xcda <__ultoa_invert+0x7c>
 cd4:	49 5d       	subi	r20, 0xD9	; 217
 cd6:	31 fd       	sbrc	r19, 1
 cd8:	40 52       	subi	r20, 0x20	; 32
 cda:	41 93       	st	Z+, r20
 cdc:	02 d0       	rcall	.+4      	; 0xce2 <__ultoa_invert+0x84>
 cde:	a9 f7       	brne	.-22     	; 0xcca <__ultoa_invert+0x6c>
 ce0:	ea cf       	rjmp	.-44     	; 0xcb6 <__ultoa_invert+0x58>
 ce2:	b4 e0       	ldi	r27, 0x04	; 4
 ce4:	a6 95       	lsr	r26
 ce6:	97 95       	ror	r25
 ce8:	87 95       	ror	r24
 cea:	77 95       	ror	r23
 cec:	67 95       	ror	r22
 cee:	ba 95       	dec	r27
 cf0:	c9 f7       	brne	.-14     	; 0xce4 <__ultoa_invert+0x86>
 cf2:	00 97       	sbiw	r24, 0x00	; 0
 cf4:	61 05       	cpc	r22, r1
 cf6:	71 05       	cpc	r23, r1
 cf8:	08 95       	ret
 cfa:	9b 01       	movw	r18, r22
 cfc:	ac 01       	movw	r20, r24
 cfe:	0a 2e       	mov	r0, r26
 d00:	06 94       	lsr	r0
 d02:	57 95       	ror	r21
 d04:	47 95       	ror	r20
 d06:	37 95       	ror	r19
 d08:	27 95       	ror	r18
 d0a:	ba 95       	dec	r27
 d0c:	c9 f7       	brne	.-14     	; 0xd00 <__ultoa_invert+0xa2>
 d0e:	62 0f       	add	r22, r18
 d10:	73 1f       	adc	r23, r19
 d12:	84 1f       	adc	r24, r20
 d14:	95 1f       	adc	r25, r21
 d16:	a0 1d       	adc	r26, r0
 d18:	08 95       	ret

00000d1a <__prologue_saves__>:
 d1a:	2f 92       	push	r2
 d1c:	3f 92       	push	r3
 d1e:	4f 92       	push	r4
 d20:	5f 92       	push	r5
 d22:	6f 92       	push	r6
 d24:	7f 92       	push	r7
 d26:	8f 92       	push	r8
 d28:	9f 92       	push	r9
 d2a:	af 92       	push	r10
 d2c:	bf 92       	push	r11
 d2e:	cf 92       	push	r12
 d30:	df 92       	push	r13
 d32:	ef 92       	push	r14
 d34:	ff 92       	push	r15
 d36:	0f 93       	push	r16
 d38:	1f 93       	push	r17
 d3a:	cf 93       	push	r28
 d3c:	df 93       	push	r29
 d3e:	cd b7       	in	r28, 0x3d	; 61
 d40:	de b7       	in	r29, 0x3e	; 62
 d42:	ca 1b       	sub	r28, r26
 d44:	db 0b       	sbc	r29, r27
 d46:	0f b6       	in	r0, 0x3f	; 63
 d48:	f8 94       	cli
 d4a:	de bf       	out	0x3e, r29	; 62
 d4c:	0f be       	out	0x3f, r0	; 63
 d4e:	cd bf       	out	0x3d, r28	; 61
 d50:	09 94       	ijmp

00000d52 <__epilogue_restores__>:
 d52:	2a 88       	ldd	r2, Y+18	; 0x12
 d54:	39 88       	ldd	r3, Y+17	; 0x11
 d56:	48 88       	ldd	r4, Y+16	; 0x10
 d58:	5f 84       	ldd	r5, Y+15	; 0x0f
 d5a:	6e 84       	ldd	r6, Y+14	; 0x0e
 d5c:	7d 84       	ldd	r7, Y+13	; 0x0d
 d5e:	8c 84       	ldd	r8, Y+12	; 0x0c
 d60:	9b 84       	ldd	r9, Y+11	; 0x0b
 d62:	aa 84       	ldd	r10, Y+10	; 0x0a
 d64:	b9 84       	ldd	r11, Y+9	; 0x09
 d66:	c8 84       	ldd	r12, Y+8	; 0x08
 d68:	df 80       	ldd	r13, Y+7	; 0x07
 d6a:	ee 80       	ldd	r14, Y+6	; 0x06
 d6c:	fd 80       	ldd	r15, Y+5	; 0x05
 d6e:	0c 81       	ldd	r16, Y+4	; 0x04
 d70:	1b 81       	ldd	r17, Y+3	; 0x03
 d72:	aa 81       	ldd	r26, Y+2	; 0x02
 d74:	b9 81       	ldd	r27, Y+1	; 0x01
 d76:	ce 0f       	add	r28, r30
 d78:	d1 1d       	adc	r29, r1
 d7a:	0f b6       	in	r0, 0x3f	; 63
 d7c:	f8 94       	cli
 d7e:	de bf       	out	0x3e, r29	; 62
 d80:	0f be       	out	0x3f, r0	; 63
 d82:	cd bf       	out	0x3d, r28	; 61
 d84:	ed 01       	movw	r28, r26
 d86:	08 95       	ret

00000d88 <_exit>:
 d88:	f8 94       	cli

00000d8a <__stop_program>:
 d8a:	ff cf       	rjmp	.-2      	; 0xd8a <__stop_program>
