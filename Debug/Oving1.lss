
Oving1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000002  00800100  0000014a  000001be  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000014a  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  000001c0  2**0
                  CONTENTS, READONLY
  3 .debug_aranges 000000a8  00000000  00000000  000001f0  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_info   00000959  00000000  00000000  00000298  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_abbrev 00000322  00000000  00000000  00000bf1  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_line   00000327  00000000  00000000  00000f13  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_frame  0000013c  00000000  00000000  0000123c  2**2
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_str    0000024d  00000000  00000000  00001378  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_loc    00000232  00000000  00000000  000015c5  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_ranges 000000a8  00000000  00000000  000017f7  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 38 00 	jmp	0x70	; 0x70 <__ctors_end>
   4:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
   8:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
   c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  10:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  14:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  18:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  1c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  20:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  24:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  28:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  2c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  30:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  34:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  38:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  3c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  40:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  44:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  48:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  4c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  50:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  54:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  58:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  5c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  60:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  64:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  68:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  6c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>

00000070 <__ctors_end>:
  70:	11 24       	eor	r1, r1
  72:	1f be       	out	0x3f, r1	; 63
  74:	cf ef       	ldi	r28, 0xFF	; 255
  76:	d4 e0       	ldi	r29, 0x04	; 4
  78:	de bf       	out	0x3e, r29	; 62
  7a:	cd bf       	out	0x3d, r28	; 61

0000007c <__do_copy_data>:
  7c:	11 e0       	ldi	r17, 0x01	; 1
  7e:	a0 e0       	ldi	r26, 0x00	; 0
  80:	b1 e0       	ldi	r27, 0x01	; 1
  82:	ea e4       	ldi	r30, 0x4A	; 74
  84:	f1 e0       	ldi	r31, 0x01	; 1
  86:	02 c0       	rjmp	.+4      	; 0x8c <__do_copy_data+0x10>
  88:	05 90       	lpm	r0, Z+
  8a:	0d 92       	st	X+, r0
  8c:	a2 30       	cpi	r26, 0x02	; 2
  8e:	b1 07       	cpc	r27, r17
  90:	d9 f7       	brne	.-10     	; 0x88 <__do_copy_data+0xc>

00000092 <__do_clear_bss>:
  92:	21 e0       	ldi	r18, 0x01	; 1
  94:	a2 e0       	ldi	r26, 0x02	; 2
  96:	b1 e0       	ldi	r27, 0x01	; 1
  98:	01 c0       	rjmp	.+2      	; 0x9c <.do_clear_bss_start>

0000009a <.do_clear_bss_loop>:
  9a:	1d 92       	st	X+, r1

0000009c <.do_clear_bss_start>:
  9c:	a2 30       	cpi	r26, 0x02	; 2
  9e:	b2 07       	cpc	r27, r18
  a0:	e1 f7       	brne	.-8      	; 0x9a <.do_clear_bss_loop>
  a2:	0e 94 8f 00 	call	0x11e	; 0x11e <main>
  a6:	0c 94 a3 00 	jmp	0x146	; 0x146 <_exit>

000000aa <__bad_interrupt>:
  aa:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000ae <memory_init>:
  ae:	85 b7       	in	r24, 0x35	; 53
  b0:	80 68       	ori	r24, 0x80	; 128
  b2:	85 bf       	out	0x35, r24	; 53
  b4:	80 b7       	in	r24, 0x30	; 48
  b6:	80 62       	ori	r24, 0x20	; 32
  b8:	80 bf       	out	0x30, r24	; 48
  ba:	08 95       	ret

000000bc <OLED_init>:
}


void write_OLED_cmd(uint8_t number){
	volatile char *ext_oled_cs = (char *) 0x1000;
	*ext_oled_cs = number;
  bc:	e0 e0       	ldi	r30, 0x00	; 0
  be:	f0 e1       	ldi	r31, 0x10	; 16
  c0:	8e ea       	ldi	r24, 0xAE	; 174
  c2:	80 83       	st	Z, r24
  c4:	81 ea       	ldi	r24, 0xA1	; 161
  c6:	80 83       	st	Z, r24
  c8:	8a ed       	ldi	r24, 0xDA	; 218
  ca:	80 83       	st	Z, r24
  cc:	82 e1       	ldi	r24, 0x12	; 18
  ce:	80 83       	st	Z, r24
  d0:	88 ec       	ldi	r24, 0xC8	; 200
  d2:	80 83       	st	Z, r24
  d4:	88 ea       	ldi	r24, 0xA8	; 168
  d6:	80 83       	st	Z, r24
  d8:	8f e3       	ldi	r24, 0x3F	; 63
  da:	80 83       	st	Z, r24
  dc:	85 ed       	ldi	r24, 0xD5	; 213
  de:	80 83       	st	Z, r24
  e0:	80 e8       	ldi	r24, 0x80	; 128
  e2:	80 83       	st	Z, r24
  e4:	81 e8       	ldi	r24, 0x81	; 129
  e6:	80 83       	st	Z, r24
  e8:	80 e5       	ldi	r24, 0x50	; 80
  ea:	80 83       	st	Z, r24
  ec:	89 ed       	ldi	r24, 0xD9	; 217
  ee:	80 83       	st	Z, r24
  f0:	81 e2       	ldi	r24, 0x21	; 33
  f2:	80 83       	st	Z, r24
  f4:	80 e2       	ldi	r24, 0x20	; 32
  f6:	80 83       	st	Z, r24
  f8:	10 82       	st	Z, r1
  fa:	8b ed       	ldi	r24, 0xDB	; 219
  fc:	80 83       	st	Z, r24
  fe:	80 e3       	ldi	r24, 0x30	; 48
 100:	80 83       	st	Z, r24
 102:	8d ea       	ldi	r24, 0xAD	; 173
 104:	80 83       	st	Z, r24
 106:	10 82       	st	Z, r1
 108:	84 ea       	ldi	r24, 0xA4	; 164
 10a:	80 83       	st	Z, r24
 10c:	86 ea       	ldi	r24, 0xA6	; 166
 10e:	80 83       	st	Z, r24
 110:	8f ea       	ldi	r24, 0xAF	; 175
 112:	80 83       	st	Z, r24
 114:	08 95       	ret

00000116 <print_to_OLED>:
}

void write_OLED_data(uint8_t number){
	volatile char *ext_oled_dc = (char *) 0x1200;
	*ext_oled_dc = number;
 116:	8a ea       	ldi	r24, 0xAA	; 170
 118:	80 93 00 12 	sts	0x1200, r24
 11c:	08 95       	ret

0000011e <main>:
	 //}
	
	
	//ov2////////////////////////////////
	
	DDRE=0x3;
 11e:	83 e0       	ldi	r24, 0x03	; 3
 120:	86 b9       	out	0x06, r24	; 6
	DDRA=0xFF;
 122:	8f ef       	ldi	r24, 0xFF	; 255
 124:	8a bb       	out	0x1a, r24	; 26
	PORTA=0x00;
 126:	1b ba       	out	0x1b, r1	; 27
	PORTE=0x2;
 128:	92 e0       	ldi	r25, 0x02	; 2
 12a:	97 b9       	out	0x07, r25	; 7
	//PORTA|=(1<<PA1);
	//SRAM_test();
	
	//GAL_test();
	
	DDRD = 0xFF;
 12c:	81 bb       	out	0x11, r24	; 17
	
	PORTD = (1<<PD6);
 12e:	80 e4       	ldi	r24, 0x40	; 64
 130:	82 bb       	out	0x12, r24	; 18
	PORTD = (0<<PD7);
 132:	12 ba       	out	0x12, r1	; 18
	//}
	
	//////////////////////////
	///////oving4/////////////
	/////////////////////////
	memory_init();
 134:	0e 94 57 00 	call	0xae	; 0xae <memory_init>
	OLED_init();
 138:	0e 94 5e 00 	call	0xbc	; 0xbc <OLED_init>
	//printf("begin\n");
	
	while(1){
		print_to_OLED("#");
 13c:	80 e0       	ldi	r24, 0x00	; 0
 13e:	91 e0       	ldi	r25, 0x01	; 1
 140:	0e 94 8b 00 	call	0x116	; 0x116 <print_to_OLED>
 144:	fb cf       	rjmp	.-10     	; 0x13c <main+0x1e>

00000146 <_exit>:
 146:	f8 94       	cli

00000148 <__stop_program>:
 148:	ff cf       	rjmp	.-2      	; 0x148 <__stop_program>
