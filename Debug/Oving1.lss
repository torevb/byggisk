
Oving1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000000b8  00800100  00000b22  00000bb6  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000b22  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000005f  008001b8  008001b8  00000c6e  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00000c6e  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 000000e8  00000000  00000000  00000cca  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000fdb  00000000  00000000  00000db2  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000493  00000000  00000000  00001d8d  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000004ca  00000000  00000000  00002220  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000001e4  00000000  00000000  000026ec  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    0000038e  00000000  00000000  000028d0  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    0000049f  00000000  00000000  00002c5e  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 000000f8  00000000  00000000  000030fd  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 f6 00 	jmp	0x1ec	; 0x1ec <__ctors_end>
   4:	0c 94 13 01 	jmp	0x226	; 0x226 <__bad_interrupt>
   8:	0c 94 13 01 	jmp	0x226	; 0x226 <__bad_interrupt>
   c:	0c 94 13 01 	jmp	0x226	; 0x226 <__bad_interrupt>
  10:	0c 94 13 01 	jmp	0x226	; 0x226 <__bad_interrupt>
  14:	0c 94 13 01 	jmp	0x226	; 0x226 <__bad_interrupt>
  18:	0c 94 13 01 	jmp	0x226	; 0x226 <__bad_interrupt>
  1c:	0c 94 13 01 	jmp	0x226	; 0x226 <__bad_interrupt>
  20:	0c 94 13 01 	jmp	0x226	; 0x226 <__bad_interrupt>
  24:	0c 94 13 01 	jmp	0x226	; 0x226 <__bad_interrupt>
  28:	0c 94 13 01 	jmp	0x226	; 0x226 <__bad_interrupt>
  2c:	0c 94 13 01 	jmp	0x226	; 0x226 <__bad_interrupt>
  30:	0c 94 13 01 	jmp	0x226	; 0x226 <__bad_interrupt>
  34:	0c 94 13 01 	jmp	0x226	; 0x226 <__bad_interrupt>
  38:	0c 94 13 01 	jmp	0x226	; 0x226 <__bad_interrupt>
  3c:	0c 94 13 01 	jmp	0x226	; 0x226 <__bad_interrupt>
  40:	0c 94 13 01 	jmp	0x226	; 0x226 <__bad_interrupt>
  44:	0c 94 13 01 	jmp	0x226	; 0x226 <__bad_interrupt>
  48:	0c 94 13 01 	jmp	0x226	; 0x226 <__bad_interrupt>
  4c:	0c 94 13 01 	jmp	0x226	; 0x226 <__bad_interrupt>
  50:	0c 94 13 01 	jmp	0x226	; 0x226 <__bad_interrupt>
  54:	0c 94 13 01 	jmp	0x226	; 0x226 <__bad_interrupt>
  58:	0c 94 13 01 	jmp	0x226	; 0x226 <__bad_interrupt>
  5c:	0c 94 13 01 	jmp	0x226	; 0x226 <__bad_interrupt>
  60:	0c 94 13 01 	jmp	0x226	; 0x226 <__bad_interrupt>
  64:	0c 94 13 01 	jmp	0x226	; 0x226 <__bad_interrupt>
  68:	0c 94 13 01 	jmp	0x226	; 0x226 <__bad_interrupt>
  6c:	0c 94 13 01 	jmp	0x226	; 0x226 <__bad_interrupt>

00000070 <__trampolines_end>:
  70:	00 00       	nop
  72:	00 00       	nop
  74:	00 5c       	subi	r16, 0xC0	; 192
  76:	00 00       	nop
  78:	0c 00       	.word	0x000c	; ????
  7a:	0c 00       	.word	0x000c	; ????
  7c:	7c 28       	or	r7, r12
  7e:	7c 28       	or	r7, r12
  80:	58 dc       	rcall	.-1872   	; 0xfffff932 <__eeprom_end+0xff7ef932>
  82:	68 00       	.word	0x0068	; ????
  84:	24 10       	cpse	r2, r4
  86:	48 00       	.word	0x0048	; ????
  88:	28 54       	subi	r18, 0x48	; 72
  8a:	28 40       	sbci	r18, 0x08	; 8
  8c:	00 0c       	add	r0, r0
  8e:	00 00       	nop
  90:	00 78       	andi	r16, 0x80	; 128
  92:	84 00       	.word	0x0084	; ????
  94:	84 78       	andi	r24, 0x84	; 132
  96:	00 00       	nop
  98:	54 38       	cpi	r21, 0x84	; 132
  9a:	54 00       	.word	0x0054	; ????
  9c:	10 7c       	andi	r17, 0xC0	; 192
  9e:	10 00       	.word	0x0010	; ????
  a0:	80 40       	sbci	r24, 0x00	; 0
  a2:	00 00       	nop
  a4:	10 10       	cpse	r1, r0
  a6:	10 00       	.word	0x0010	; ????
  a8:	00 40       	sbci	r16, 0x00	; 0
  aa:	00 00       	nop
  ac:	60 10       	cpse	r6, r0
  ae:	0c 00       	.word	0x000c	; ????
  b0:	38 54       	subi	r19, 0x48	; 72
  b2:	38 00       	.word	0x0038	; ????
  b4:	48 7c       	andi	r20, 0xC8	; 200
  b6:	40 00       	.word	0x0040	; ????
  b8:	48 64       	ori	r20, 0x48	; 72
  ba:	58 00       	.word	0x0058	; ????
  bc:	44 54       	subi	r20, 0x44	; 68
  be:	2c 00       	.word	0x002c	; ????
  c0:	1c 10       	cpse	r1, r12
  c2:	7c 00       	.word	0x007c	; ????
  c4:	5c 54       	subi	r21, 0x4C	; 76
  c6:	24 00       	.word	0x0024	; ????
  c8:	38 54       	subi	r19, 0x48	; 72
  ca:	24 00       	.word	0x0024	; ????
  cc:	64 14       	cp	r6, r4
  ce:	0c 00       	.word	0x000c	; ????
  d0:	68 54       	subi	r22, 0x48	; 72
  d2:	2c 00       	.word	0x002c	; ????
  d4:	48 54       	subi	r20, 0x48	; 72
  d6:	38 00       	.word	0x0038	; ????
  d8:	00 48       	sbci	r16, 0x80	; 128
  da:	00 00       	nop
  dc:	80 48       	sbci	r24, 0x80	; 128
  de:	00 00       	nop
  e0:	10 28       	or	r1, r0
  e2:	44 00       	.word	0x0044	; ????
  e4:	28 28       	or	r2, r8
  e6:	28 00       	.word	0x0028	; ????
  e8:	44 28       	or	r4, r4
  ea:	10 00       	.word	0x0010	; ????
  ec:	04 54       	subi	r16, 0x44	; 68
  ee:	08 00       	.word	0x0008	; ????
  f0:	38 44       	sbci	r19, 0x48	; 72
  f2:	5c 00       	.word	0x005c	; ????
  f4:	78 14       	cp	r7, r8
  f6:	78 00       	.word	0x0078	; ????
  f8:	7c 54       	subi	r23, 0x4C	; 76
  fa:	28 00       	.word	0x0028	; ????
  fc:	38 44       	sbci	r19, 0x48	; 72
  fe:	28 00       	.word	0x0028	; ????
 100:	7c 44       	sbci	r23, 0x4C	; 76
 102:	38 00       	.word	0x0038	; ????
 104:	7c 54       	subi	r23, 0x4C	; 76
 106:	44 00       	.word	0x0044	; ????
 108:	7c 14       	cp	r7, r12
 10a:	04 00       	.word	0x0004	; ????
 10c:	38 44       	sbci	r19, 0x48	; 72
 10e:	74 00       	.word	0x0074	; ????
 110:	7c 10       	cpse	r7, r12
 112:	7c 00       	.word	0x007c	; ????
 114:	44 7c       	andi	r20, 0xC4	; 196
 116:	44 00       	.word	0x0044	; ????
 118:	20 40       	sbci	r18, 0x00	; 0
 11a:	3c 00       	.word	0x003c	; ????
 11c:	7c 10       	cpse	r7, r12
 11e:	6c 00       	.word	0x006c	; ????
 120:	7c 40       	sbci	r23, 0x0C	; 12
 122:	40 00       	.word	0x0040	; ????
 124:	7c 18       	sub	r7, r12
 126:	7c 00       	.word	0x007c	; ????
 128:	78 10       	cpse	r7, r8
 12a:	3c 00       	.word	0x003c	; ????
 12c:	38 44       	sbci	r19, 0x48	; 72
 12e:	38 00       	.word	0x0038	; ????
 130:	7c 14       	cp	r7, r12
 132:	08 00       	.word	0x0008	; ????
 134:	38 44       	sbci	r19, 0x48	; 72
 136:	b8 00       	.word	0x00b8	; ????
 138:	7c 14       	cp	r7, r12
 13a:	68 00       	.word	0x0068	; ????
 13c:	48 54       	subi	r20, 0x48	; 72
 13e:	24 00       	.word	0x0024	; ????
 140:	04 7c       	andi	r16, 0xC4	; 196
 142:	04 00       	.word	0x0004	; ????
 144:	7c 40       	sbci	r23, 0x0C	; 12
 146:	7c 00       	.word	0x007c	; ????
 148:	3c 60       	ori	r19, 0x0C	; 12
 14a:	3c 00       	.word	0x003c	; ????
 14c:	7c 30       	cpi	r23, 0x0C	; 12
 14e:	7c 00       	.word	0x007c	; ????
 150:	6c 10       	cpse	r6, r12
 152:	6c 00       	.word	0x006c	; ????
 154:	0c 70       	andi	r16, 0x0C	; 12
 156:	0c 00       	.word	0x000c	; ????
 158:	64 54       	subi	r22, 0x44	; 68
 15a:	4c 00       	.word	0x004c	; ????
 15c:	00 7c       	andi	r16, 0xC0	; 192
 15e:	44 00       	.word	0x0044	; ????
 160:	0c 10       	cpse	r0, r12
 162:	60 00       	.word	0x0060	; ????
 164:	44 7c       	andi	r20, 0xC4	; 196
 166:	00 00       	nop
 168:	08 04       	cpc	r0, r8
 16a:	08 00       	.word	0x0008	; ????
 16c:	80 80       	ld	r8, Z
 16e:	80 00       	.word	0x0080	; ????
 170:	00 04       	cpc	r0, r0
 172:	08 00       	.word	0x0008	; ????
 174:	30 48       	sbci	r19, 0x80	; 128
 176:	78 00       	.word	0x0078	; ????
 178:	7c 48       	sbci	r23, 0x8C	; 140
 17a:	30 00       	.word	0x0030	; ????
 17c:	30 48       	sbci	r19, 0x80	; 128
 17e:	48 00       	.word	0x0048	; ????
 180:	30 48       	sbci	r19, 0x80	; 128
 182:	7c 00       	.word	0x007c	; ????
 184:	30 68       	ori	r19, 0x80	; 128
 186:	50 00       	.word	0x0050	; ????
 188:	10 78       	andi	r17, 0x80	; 128
 18a:	14 00       	.word	0x0014	; ????
 18c:	90 a8       	ldd	r9, Z+48	; 0x30
 18e:	78 00       	.word	0x0078	; ????
 190:	7c 08       	sbc	r7, r12
 192:	70 00       	.word	0x0070	; ????
 194:	50 74       	andi	r21, 0x40	; 64
 196:	40 00       	.word	0x0040	; ????
 198:	80 80       	ld	r8, Z
 19a:	74 00       	.word	0x0074	; ????
 19c:	7c 10       	cpse	r7, r12
 19e:	68 00       	.word	0x0068	; ????
 1a0:	44 7c       	andi	r20, 0xC4	; 196
 1a2:	40 00       	.word	0x0040	; ????
 1a4:	78 10       	cpse	r7, r8
 1a6:	78 00       	.word	0x0078	; ????
 1a8:	78 08       	sbc	r7, r8
 1aa:	70 00       	.word	0x0070	; ????
 1ac:	30 48       	sbci	r19, 0x80	; 128
 1ae:	30 00       	.word	0x0030	; ????
 1b0:	f8 28       	or	r15, r8
 1b2:	10 00       	.word	0x0010	; ????
 1b4:	30 48       	sbci	r19, 0x80	; 128
 1b6:	f8 00       	.word	0x00f8	; ????
 1b8:	78 10       	cpse	r7, r8
 1ba:	08 00       	.word	0x0008	; ????
 1bc:	50 58       	subi	r21, 0x80	; 128
 1be:	28 00       	.word	0x0028	; ????
 1c0:	08 3c       	cpi	r16, 0xC8	; 200
 1c2:	48 00       	.word	0x0048	; ????
 1c4:	38 40       	sbci	r19, 0x08	; 8
 1c6:	78 00       	.word	0x0078	; ????
 1c8:	38 40       	sbci	r19, 0x08	; 8
 1ca:	38 00       	.word	0x0038	; ????
 1cc:	78 20       	and	r7, r8
 1ce:	78 00       	.word	0x0078	; ????
 1d0:	48 30       	cpi	r20, 0x08	; 8
 1d2:	48 00       	.word	0x0048	; ????
 1d4:	98 a0       	ldd	r9, Y+32	; 0x20
 1d6:	78 00       	.word	0x0078	; ????
 1d8:	48 68       	ori	r20, 0x88	; 136
 1da:	58 00       	.word	0x0058	; ????
 1dc:	10 78       	andi	r17, 0x80	; 128
 1de:	84 00       	.word	0x0084	; ????
 1e0:	00 7c       	andi	r16, 0xC0	; 192
 1e2:	00 00       	nop
 1e4:	84 78       	andi	r24, 0x84	; 132
 1e6:	10 00       	.word	0x0010	; ????
 1e8:	08 04       	cpc	r0, r8
 1ea:	08 04       	cpc	r0, r8

000001ec <__ctors_end>:
 1ec:	11 24       	eor	r1, r1
 1ee:	1f be       	out	0x3f, r1	; 63
 1f0:	cf ef       	ldi	r28, 0xFF	; 255
 1f2:	d4 e0       	ldi	r29, 0x04	; 4
 1f4:	de bf       	out	0x3e, r29	; 62
 1f6:	cd bf       	out	0x3d, r28	; 61

000001f8 <__do_copy_data>:
 1f8:	11 e0       	ldi	r17, 0x01	; 1
 1fa:	a0 e0       	ldi	r26, 0x00	; 0
 1fc:	b1 e0       	ldi	r27, 0x01	; 1
 1fe:	e2 e2       	ldi	r30, 0x22	; 34
 200:	fb e0       	ldi	r31, 0x0B	; 11
 202:	02 c0       	rjmp	.+4      	; 0x208 <__do_copy_data+0x10>
 204:	05 90       	lpm	r0, Z+
 206:	0d 92       	st	X+, r0
 208:	a8 3b       	cpi	r26, 0xB8	; 184
 20a:	b1 07       	cpc	r27, r17
 20c:	d9 f7       	brne	.-10     	; 0x204 <__do_copy_data+0xc>

0000020e <__do_clear_bss>:
 20e:	22 e0       	ldi	r18, 0x02	; 2
 210:	a8 eb       	ldi	r26, 0xB8	; 184
 212:	b1 e0       	ldi	r27, 0x01	; 1
 214:	01 c0       	rjmp	.+2      	; 0x218 <.do_clear_bss_start>

00000216 <.do_clear_bss_loop>:
 216:	1d 92       	st	X+, r1

00000218 <.do_clear_bss_start>:
 218:	a7 31       	cpi	r26, 0x17	; 23
 21a:	b2 07       	cpc	r27, r18
 21c:	e1 f7       	brne	.-8      	; 0x216 <.do_clear_bss_loop>
 21e:	0e 94 b5 02 	call	0x56a	; 0x56a <main>
 222:	0c 94 8f 05 	jmp	0xb1e	; 0xb1e <_exit>

00000226 <__bad_interrupt>:
 226:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000022a <memory_init>:
#include <stdlib.h>
#include <avr/io.h>


void memory_init(void){
	MCUCR|=(1<<SRE);
 22a:	85 b7       	in	r24, 0x35	; 53
 22c:	80 68       	ori	r24, 0x80	; 128
 22e:	85 bf       	out	0x35, r24	; 53
	SFIOR|=(1<<XMM2);
 230:	80 b7       	in	r24, 0x30	; 48
 232:	80 62       	ori	r24, 0x20	; 32
 234:	80 bf       	out	0x30, r24	; 48
 236:	08 95       	ret

00000238 <menu_print>:


void menu_print(){
	

	print_to_OLED(current_pointer->children[1]->content_string, 2);
 238:	e0 91 0a 02 	lds	r30, 0x020A
 23c:	f0 91 0b 02 	lds	r31, 0x020B
 240:	04 80       	ldd	r0, Z+4	; 0x04
 242:	f5 81       	ldd	r31, Z+5	; 0x05
 244:	e0 2d       	mov	r30, r0
 246:	62 e0       	ldi	r22, 0x02	; 2
 248:	82 89       	ldd	r24, Z+18	; 0x12
 24a:	93 89       	ldd	r25, Z+19	; 0x13
 24c:	0e 94 25 02 	call	0x44a	; 0x44a <print_to_OLED>
 250:	08 95       	ret

00000252 <menu_init>:


void menu_init(){

	
	root_node.name = "Main menu";
 252:	80 e0       	ldi	r24, 0x00	; 0
 254:	91 e0       	ldi	r25, 0x01	; 1
 256:	90 93 f3 01 	sts	0x01F3, r25
 25a:	80 93 f2 01 	sts	0x01F2, r24
	root_node.parent = NULL;
 25e:	a2 ee       	ldi	r26, 0xE2	; 226
 260:	b1 e0       	ldi	r27, 0x01	; 1
 262:	11 96       	adiw	r26, 0x01	; 1
 264:	1c 92       	st	X, r1
 266:	1e 92       	st	-X, r1
	root_node.children[0] = &playgame_node;
 268:	ee ec       	ldi	r30, 0xCE	; 206
 26a:	f1 e0       	ldi	r31, 0x01	; 1
 26c:	f0 93 e5 01 	sts	0x01E5, r31
 270:	e0 93 e4 01 	sts	0x01E4, r30
	root_node.children[1]=&highscore_node;
 274:	86 ef       	ldi	r24, 0xF6	; 246
 276:	91 e0       	ldi	r25, 0x01	; 1
 278:	90 93 e7 01 	sts	0x01E7, r25
 27c:	80 93 e6 01 	sts	0x01E6, r24
	root_node.content_string = "Play game \nHighscores \nSettings";
 280:	8a e0       	ldi	r24, 0x0A	; 10
 282:	91 e0       	ldi	r25, 0x01	; 1
 284:	90 93 f5 01 	sts	0x01F5, r25
 288:	80 93 f4 01 	sts	0x01F4, r24

	playgame_node.name = "Play game";
 28c:	8a e2       	ldi	r24, 0x2A	; 42
 28e:	91 e0       	ldi	r25, 0x01	; 1
 290:	90 93 df 01 	sts	0x01DF, r25
 294:	80 93 de 01 	sts	0x01DE, r24
	playgame_node.parent = &root_node;
 298:	b1 83       	std	Z+1, r27	; 0x01
 29a:	a0 83       	st	Z, r26
 29c:	e0 ed       	ldi	r30, 0xD0	; 208
 29e:	f1 e0       	ldi	r31, 0x01	; 1
 2a0:	8e ed       	ldi	r24, 0xDE	; 222
 2a2:	91 e0       	ldi	r25, 0x01	; 1
	for (int i=0; i<7;i++){
		playgame_node.children[i]=NULL; 
 2a4:	11 92       	st	Z+, r1
 2a6:	11 92       	st	Z+, r1
	root_node.children[1]=&highscore_node;
	root_node.content_string = "Play game \nHighscores \nSettings";

	playgame_node.name = "Play game";
	playgame_node.parent = &root_node;
	for (int i=0; i<7;i++){
 2a8:	e8 17       	cp	r30, r24
 2aa:	f9 07       	cpc	r31, r25
 2ac:	d9 f7       	brne	.-10     	; 0x2a4 <menu_init+0x52>
		playgame_node.children[i]=NULL; 
	}
	
	playgame_node.content_string = "new game, 1v1, 1vpc";
 2ae:	84 e3       	ldi	r24, 0x34	; 52
 2b0:	91 e0       	ldi	r25, 0x01	; 1
 2b2:	90 93 e1 01 	sts	0x01E1, r25
 2b6:	80 93 e0 01 	sts	0x01E0, r24

	highscore_node.name = "Highscore";
 2ba:	88 e4       	ldi	r24, 0x48	; 72
 2bc:	91 e0       	ldi	r25, 0x01	; 1
 2be:	90 93 07 02 	sts	0x0207, r25
 2c2:	80 93 06 02 	sts	0x0206, r24
	highscore_node.parent = &root_node;
 2c6:	82 ee       	ldi	r24, 0xE2	; 226
 2c8:	91 e0       	ldi	r25, 0x01	; 1
 2ca:	90 93 f7 01 	sts	0x01F7, r25
 2ce:	80 93 f6 01 	sts	0x01F6, r24
 2d2:	e8 ef       	ldi	r30, 0xF8	; 248
 2d4:	f1 e0       	ldi	r31, 0x01	; 1
 2d6:	86 e0       	ldi	r24, 0x06	; 6
 2d8:	92 e0       	ldi	r25, 0x02	; 2
	for (int i=0; i<7;i++){
		highscore_node.children[i]=NULL;
 2da:	11 92       	st	Z+, r1
 2dc:	11 92       	st	Z+, r1
	
	playgame_node.content_string = "new game, 1v1, 1vpc";

	highscore_node.name = "Highscore";
	highscore_node.parent = &root_node;
	for (int i=0; i<7;i++){
 2de:	e8 17       	cp	r30, r24
 2e0:	f9 07       	cpc	r31, r25
 2e2:	d9 f7       	brne	.-10     	; 0x2da <menu_init+0x88>
		highscore_node.children[i]=NULL;
	}
	//highscore_node.children	= {NULL,NULL,NULL,NULL,NULL,NULL,NULL};
	highscore_node.content_string = "player 1 score \nPlayer 2 score.";
 2e4:	82 e5       	ldi	r24, 0x52	; 82
 2e6:	91 e0       	ldi	r25, 0x01	; 1
 2e8:	90 93 09 02 	sts	0x0209, r25
 2ec:	80 93 08 02 	sts	0x0208, r24

	settings_node.name = "Settings";
 2f0:	81 e2       	ldi	r24, 0x21	; 33
 2f2:	91 e0       	ldi	r25, 0x01	; 1
 2f4:	90 93 cb 01 	sts	0x01CB, r25
 2f8:	80 93 ca 01 	sts	0x01CA, r24
	settings_node.parent = &root_node;
 2fc:	82 ee       	ldi	r24, 0xE2	; 226
 2fe:	91 e0       	ldi	r25, 0x01	; 1
 300:	90 93 bb 01 	sts	0x01BB, r25
 304:	80 93 ba 01 	sts	0x01BA, r24
 308:	ec eb       	ldi	r30, 0xBC	; 188
 30a:	f1 e0       	ldi	r31, 0x01	; 1
 30c:	8a ec       	ldi	r24, 0xCA	; 202
 30e:	91 e0       	ldi	r25, 0x01	; 1
	for (int i=0; i<7;i++){
		settings_node.children[i]=NULL;
 310:	11 92       	st	Z+, r1
 312:	11 92       	st	Z+, r1
	//highscore_node.children	= {NULL,NULL,NULL,NULL,NULL,NULL,NULL};
	highscore_node.content_string = "player 1 score \nPlayer 2 score.";

	settings_node.name = "Settings";
	settings_node.parent = &root_node;
	for (int i=0; i<7;i++){
 314:	e8 17       	cp	r30, r24
 316:	f9 07       	cpc	r31, r25
 318:	d9 f7       	brne	.-10     	; 0x310 <menu_init+0xbe>
		settings_node.children[i]=NULL;
	}
	//settings_node.children	= {NULL,NULL,NULL,NULL,NULL,NULL,NULL};//calibrate_node, volume_node;
	settings_node.content_string = "calibrate_node \nVolume_node";
 31a:	82 e7       	ldi	r24, 0x72	; 114
 31c:	91 e0       	ldi	r25, 0x01	; 1
 31e:	90 93 cd 01 	sts	0x01CD, r25
 322:	80 93 cc 01 	sts	0x01CC, r24
	
	
	current_pointer = &root_node;
 326:	82 ee       	ldi	r24, 0xE2	; 226
 328:	91 e0       	ldi	r25, 0x01	; 1
 32a:	90 93 0b 02 	sts	0x020B, r25
 32e:	80 93 0a 02 	sts	0x020A, r24
	menu_print();		
 332:	0e 94 1c 01 	call	0x238	; 0x238 <menu_print>
 336:	08 95       	ret

00000338 <set_font4x6>:
};



void set_font4x6(){
	font_type.data = font4x6;
 338:	80 e7       	ldi	r24, 0x70	; 112
 33a:	90 e0       	ldi	r25, 0x00	; 0
 33c:	90 93 10 02 	sts	0x0210, r25
 340:	80 93 0f 02 	sts	0x020F, r24
	font_type.width = 4;
 344:	84 e0       	ldi	r24, 0x04	; 4
 346:	80 93 0c 02 	sts	0x020C, r24
	font_type.height = 6;
 34a:	86 e0       	ldi	r24, 0x06	; 6
 34c:	80 93 0d 02 	sts	0x020D, r24
	font_type.ascii_offset = 32;
 350:	80 e2       	ldi	r24, 0x20	; 32
 352:	80 93 0e 02 	sts	0x020E, r24
 356:	08 95       	ret

00000358 <goto_OLED_page>:
	goto_OLED_page(0);
	goto_OLED_char_column(0);
	return;
}

void goto_OLED_page(uint8_t page){
 358:	cf 93       	push	r28
 35a:	c8 2f       	mov	r28, r24
	if (page >= DISPLAY_PAGES){
 35c:	88 30       	cpi	r24, 0x08	; 8
 35e:	68 f0       	brcs	.+26     	; 0x37a <goto_OLED_page+0x22>
		printf("Error at goto_OLED_page. %ui max input.\n", DISPLAY_PAGES);
 360:	1f 92       	push	r1
 362:	88 e0       	ldi	r24, 0x08	; 8
 364:	8f 93       	push	r24
 366:	2e e8       	ldi	r18, 0x8E	; 142
 368:	31 e0       	ldi	r19, 0x01	; 1
 36a:	3f 93       	push	r19
 36c:	2f 93       	push	r18
 36e:	0e 94 cc 02 	call	0x598	; 0x598 <printf>
 372:	0f 90       	pop	r0
 374:	0f 90       	pop	r0
 376:	0f 90       	pop	r0
 378:	0f 90       	pop	r0
	}
	current_page = page;
 37a:	c0 93 b8 01 	sts	0x01B8, r28
	write_OLED_cmd(0xB0 + page);
 37e:	c0 55       	subi	r28, 0x50	; 80
}


void write_OLED_cmd(uint8_t number){
	volatile char *ext_oled_cs = (char *) 0x1000;
	*ext_oled_cs = number;
 380:	c0 93 00 10 	sts	0x1000, r28
		printf("Error at goto_OLED_page. %ui max input.\n", DISPLAY_PAGES);
	}
	current_page = page;
	write_OLED_cmd(0xB0 + page);
	return;
}
 384:	cf 91       	pop	r28
 386:	08 95       	ret

00000388 <goto_OLED_char_column>:

void goto_OLED_char_column(uint8_t column){
	uint8_t c = column * font_type.width;
 388:	90 91 0c 02 	lds	r25, 0x020C
 38c:	89 9f       	mul	r24, r25
 38e:	90 2d       	mov	r25, r0
 390:	11 24       	eor	r1, r1
	uint8_t low_bits = c & 0x0f;
 392:	29 2f       	mov	r18, r25
 394:	2f 70       	andi	r18, 0x0F	; 15
}


void write_OLED_cmd(uint8_t number){
	volatile char *ext_oled_cs = (char *) 0x1000;
	*ext_oled_cs = number;
 396:	e0 e0       	ldi	r30, 0x00	; 0
 398:	f0 e1       	ldi	r31, 0x10	; 16
 39a:	20 83       	st	Z, r18
void goto_OLED_char_column(uint8_t column){
	uint8_t c = column * font_type.width;
	uint8_t low_bits = c & 0x0f;
	uint8_t high_bits = c & 0xf0;
	write_OLED_cmd(0x00 + low_bits);
	write_OLED_cmd(0x10 + (high_bits >> 4));
 39c:	92 95       	swap	r25
 39e:	9f 70       	andi	r25, 0x0F	; 15
 3a0:	90 5f       	subi	r25, 0xF0	; 240
}


void write_OLED_cmd(uint8_t number){
	volatile char *ext_oled_cs = (char *) 0x1000;
	*ext_oled_cs = number;
 3a2:	90 83       	st	Z, r25
	uint8_t low_bits = c & 0x0f;
	uint8_t high_bits = c & 0xf0;
	write_OLED_cmd(0x00 + low_bits);
	write_OLED_cmd(0x10 + (high_bits >> 4));
	
	current_column = column;
 3a4:	80 93 b9 01 	sts	0x01B9, r24
 3a8:	08 95       	ret

000003aa <OLED_home>:
	OLED_home();
	return;
}

void OLED_home(){
	goto_OLED_page(0);
 3aa:	80 e0       	ldi	r24, 0x00	; 0
 3ac:	0e 94 ac 01 	call	0x358	; 0x358 <goto_OLED_page>
	goto_OLED_char_column(0);
 3b0:	80 e0       	ldi	r24, 0x00	; 0
 3b2:	0e 94 c4 01 	call	0x388	; 0x388 <goto_OLED_char_column>
 3b6:	08 95       	ret

000003b8 <clear_OLED_page>:
	current_column = column;
	return;
}

void clear_OLED_page(uint8_t page){
	goto_OLED_page(page);
 3b8:	0e 94 ac 01 	call	0x358	; 0x358 <goto_OLED_page>
	for (uint8_t i = 0; i < DISPLAY_COLUMNS; i++){
 3bc:	80 e0       	ldi	r24, 0x00	; 0
	*ext_oled_cs = number;
}

void write_OLED_data(uint8_t number){
	volatile char *ext_oled_dc = (char *) 0x1200;
	*ext_oled_dc = number;
 3be:	e0 e0       	ldi	r30, 0x00	; 0
 3c0:	f2 e1       	ldi	r31, 0x12	; 18
 3c2:	10 82       	st	Z, r1
	return;
}

void clear_OLED_page(uint8_t page){
	goto_OLED_page(page);
	for (uint8_t i = 0; i < DISPLAY_COLUMNS; i++){
 3c4:	8f 5f       	subi	r24, 0xFF	; 255
 3c6:	80 38       	cpi	r24, 0x80	; 128
 3c8:	e1 f7       	brne	.-8      	; 0x3c2 <clear_OLED_page+0xa>
		write_OLED_data(0);
	}
	return;
}
 3ca:	08 95       	ret

000003cc <OLED_reset>:
	volatile char *ext_oled_dc = (char *) 0x1200;
	*ext_oled_dc = number;
}


void OLED_reset(){
 3cc:	cf 93       	push	r28
}


void write_OLED_cmd(uint8_t number){
	volatile char *ext_oled_cs = (char *) 0x1000;
	*ext_oled_cs = number;
 3ce:	80 e4       	ldi	r24, 0x40	; 64
 3d0:	80 93 00 10 	sts	0x1000, r24
}


void OLED_reset(){
	write_OLED_cmd(0x40);		//Set display line start at page 0. 
	for (uint8_t i = 0; i < DISPLAY_PAGES; i++){
 3d4:	c0 e0       	ldi	r28, 0x00	; 0
		clear_OLED_page(i);
 3d6:	8c 2f       	mov	r24, r28
 3d8:	0e 94 dc 01 	call	0x3b8	; 0x3b8 <clear_OLED_page>
}


void OLED_reset(){
	write_OLED_cmd(0x40);		//Set display line start at page 0. 
	for (uint8_t i = 0; i < DISPLAY_PAGES; i++){
 3dc:	cf 5f       	subi	r28, 0xFF	; 255
 3de:	c8 30       	cpi	r28, 0x08	; 8
 3e0:	d1 f7       	brne	.-12     	; 0x3d6 <OLED_reset+0xa>
		clear_OLED_page(i);
	}
	OLED_home();
 3e2:	0e 94 d5 01 	call	0x3aa	; 0x3aa <OLED_home>
	return;
}
 3e6:	cf 91       	pop	r28
 3e8:	08 95       	ret

000003ea <OLED_init>:
}


void write_OLED_cmd(uint8_t number){
	volatile char *ext_oled_cs = (char *) 0x1000;
	*ext_oled_cs = number;
 3ea:	e0 e0       	ldi	r30, 0x00	; 0
 3ec:	f0 e1       	ldi	r31, 0x10	; 16
 3ee:	8e ea       	ldi	r24, 0xAE	; 174
 3f0:	80 83       	st	Z, r24
 3f2:	81 ea       	ldi	r24, 0xA1	; 161
 3f4:	80 83       	st	Z, r24
 3f6:	8a ed       	ldi	r24, 0xDA	; 218
 3f8:	80 83       	st	Z, r24
 3fa:	82 e1       	ldi	r24, 0x12	; 18
 3fc:	80 83       	st	Z, r24
 3fe:	88 ec       	ldi	r24, 0xC8	; 200
 400:	80 83       	st	Z, r24
 402:	88 ea       	ldi	r24, 0xA8	; 168
 404:	80 83       	st	Z, r24
 406:	8f e3       	ldi	r24, 0x3F	; 63
 408:	80 83       	st	Z, r24
 40a:	85 ed       	ldi	r24, 0xD5	; 213
 40c:	80 83       	st	Z, r24
 40e:	80 e8       	ldi	r24, 0x80	; 128
 410:	80 83       	st	Z, r24
 412:	81 e8       	ldi	r24, 0x81	; 129
 414:	80 83       	st	Z, r24
 416:	80 e5       	ldi	r24, 0x50	; 80
 418:	80 83       	st	Z, r24
 41a:	89 ed       	ldi	r24, 0xD9	; 217
 41c:	80 83       	st	Z, r24
 41e:	81 e2       	ldi	r24, 0x21	; 33
 420:	80 83       	st	Z, r24
 422:	80 e2       	ldi	r24, 0x20	; 32
 424:	80 83       	st	Z, r24
 426:	82 e0       	ldi	r24, 0x02	; 2
 428:	80 83       	st	Z, r24
 42a:	8b ed       	ldi	r24, 0xDB	; 219
 42c:	80 83       	st	Z, r24
 42e:	80 e3       	ldi	r24, 0x30	; 48
 430:	80 83       	st	Z, r24
 432:	8d ea       	ldi	r24, 0xAD	; 173
 434:	80 83       	st	Z, r24
 436:	10 82       	st	Z, r1
 438:	84 ea       	ldi	r24, 0xA4	; 164
 43a:	80 83       	st	Z, r24
 43c:	86 ea       	ldi	r24, 0xA6	; 166
 43e:	80 83       	st	Z, r24
 440:	8f ea       	ldi	r24, 0xAF	; 175
 442:	80 83       	st	Z, r24
	
	//write_OLED_cmd(0xA7);		//Inverse display.
	//write_OLED_cmd(0xA5);		//Output ignores RAM content. 
	
	
	OLED_reset();
 444:	0e 94 e6 01 	call	0x3cc	; 0x3cc <OLED_reset>
 448:	08 95       	ret

0000044a <print_to_OLED>:

void OLED_pos(uint8_t page, uint8_t column){
	return;
}

void print_to_OLED(const char * string, uint8_t start_column){
 44a:	2f 92       	push	r2
 44c:	3f 92       	push	r3
 44e:	4f 92       	push	r4
 450:	5f 92       	push	r5
 452:	6f 92       	push	r6
 454:	7f 92       	push	r7
 456:	8f 92       	push	r8
 458:	9f 92       	push	r9
 45a:	af 92       	push	r10
 45c:	bf 92       	push	r11
 45e:	cf 92       	push	r12
 460:	df 92       	push	r13
 462:	ef 92       	push	r14
 464:	ff 92       	push	r15
 466:	0f 93       	push	r16
 468:	1f 93       	push	r17
 46a:	cf 93       	push	r28
 46c:	df 93       	push	r29
 46e:	1f 92       	push	r1
 470:	cd b7       	in	r28, 0x3d	; 61
 472:	de b7       	in	r29, 0x3e	; 62
 474:	4c 01       	movw	r8, r24
 476:	69 83       	std	Y+1, r22	; 0x01
	goto_OLED_char_column(start_column);
 478:	86 2f       	mov	r24, r22
 47a:	0e 94 c4 01 	call	0x388	; 0x388 <goto_OLED_char_column>
	int length = strlen(string);
 47e:	f4 01       	movw	r30, r8
 480:	01 90       	ld	r0, Z+
 482:	00 20       	and	r0, r0
 484:	e9 f7       	brne	.-6      	; 0x480 <print_to_OLED+0x36>
 486:	31 97       	sbiw	r30, 0x01	; 1
 488:	1f 01       	movw	r2, r30
 48a:	28 18       	sub	r2, r8
 48c:	39 08       	sbc	r3, r9
 48e:	31 01       	movw	r6, r2
	
	for (int i = 0; i < length; i++){
 490:	12 14       	cp	r1, r2
 492:	13 04       	cpc	r1, r3
 494:	0c f0       	brlt	.+2      	; 0x498 <print_to_OLED+0x4e>
 496:	51 c0       	rjmp	.+162    	; 0x53a <__stack+0x3b>
 498:	a1 2c       	mov	r10, r1
 49a:	b1 2c       	mov	r11, r1
		if (c == '\n') {
			goto_OLED_page(current_page + 1 % DISPLAY_PAGES);
			goto_OLED_char_column(start_column);
		}
		else{
			for (int j = 0; j < font_type.width; j++){
 49c:	51 2c       	mov	r5, r1
 49e:	41 2c       	mov	r4, r1
				write_OLED_data(pgm_read_byte(font_type.data + (c - font_type.ascii_offset) * font_type.width +j));
 4a0:	0f 2e       	mov	r0, r31
 4a2:	ff e0       	ldi	r31, 0x0F	; 15
 4a4:	cf 2e       	mov	r12, r31
 4a6:	f2 e0       	ldi	r31, 0x02	; 2
 4a8:	df 2e       	mov	r13, r31
 4aa:	f0 2d       	mov	r31, r0
 4ac:	0f 2e       	mov	r0, r31
 4ae:	fe e0       	ldi	r31, 0x0E	; 14
 4b0:	ef 2e       	mov	r14, r31
 4b2:	f2 e0       	ldi	r31, 0x02	; 2
 4b4:	ff 2e       	mov	r15, r31
 4b6:	f0 2d       	mov	r31, r0
	*ext_oled_cs = number;
}

void write_OLED_data(uint8_t number){
	volatile char *ext_oled_dc = (char *) 0x1200;
	*ext_oled_dc = number;
 4b8:	00 e0       	ldi	r16, 0x00	; 0
 4ba:	12 e1       	ldi	r17, 0x12	; 18
void print_to_OLED(const char * string, uint8_t start_column){
	goto_OLED_char_column(start_column);
	int length = strlen(string);
	
	for (int i = 0; i < length; i++){
		char c = string[i];
 4bc:	d4 01       	movw	r26, r8
 4be:	4d 91       	ld	r20, X+
 4c0:	4d 01       	movw	r8, r26
		if (c == '\n') {
 4c2:	4a 30       	cpi	r20, 0x0A	; 10
 4c4:	41 f0       	breq	.+16     	; 0x4d6 <print_to_OLED+0x8c>
			goto_OLED_page(current_page + 1 % DISPLAY_PAGES);
			goto_OLED_char_column(start_column);
		}
		else{
			for (int j = 0; j < font_type.width; j++){
 4c6:	ec e0       	ldi	r30, 0x0C	; 12
 4c8:	f2 e0       	ldi	r31, 0x02	; 2
 4ca:	20 81       	ld	r18, Z
 4cc:	30 e0       	ldi	r19, 0x00	; 0
 4ce:	12 16       	cp	r1, r18
 4d0:	13 06       	cpc	r1, r19
 4d2:	54 f0       	brlt	.+20     	; 0x4e8 <print_to_OLED+0x9e>
 4d4:	2b c0       	rjmp	.+86     	; 0x52c <__stack+0x2d>
	int length = strlen(string);
	
	for (int i = 0; i < length; i++){
		char c = string[i];
		if (c == '\n') {
			goto_OLED_page(current_page + 1 % DISPLAY_PAGES);
 4d6:	80 91 b8 01 	lds	r24, 0x01B8
 4da:	8f 5f       	subi	r24, 0xFF	; 255
 4dc:	0e 94 ac 01 	call	0x358	; 0x358 <goto_OLED_page>
			goto_OLED_char_column(start_column);
 4e0:	89 81       	ldd	r24, Y+1	; 0x01
 4e2:	0e 94 c4 01 	call	0x388	; 0x388 <goto_OLED_char_column>
 4e6:	22 c0       	rjmp	.+68     	; 0x52c <__stack+0x2d>
		}
		else{
			for (int j = 0; j < font_type.width; j++){
 4e8:	85 2d       	mov	r24, r5
 4ea:	94 2d       	mov	r25, r4
				write_OLED_data(pgm_read_byte(font_type.data + (c - font_type.ascii_offset) * font_type.width +j));
 4ec:	50 e0       	ldi	r21, 0x00	; 0
 4ee:	d7 01       	movw	r26, r14
 4f0:	6c 91       	ld	r22, X
 4f2:	fa 01       	movw	r30, r20
 4f4:	e6 1b       	sub	r30, r22
 4f6:	f1 09       	sbc	r31, r1
 4f8:	bf 01       	movw	r22, r30
 4fa:	26 9f       	mul	r18, r22
 4fc:	f0 01       	movw	r30, r0
 4fe:	27 9f       	mul	r18, r23
 500:	f0 0d       	add	r31, r0
 502:	36 9f       	mul	r19, r22
 504:	f0 0d       	add	r31, r0
 506:	11 24       	eor	r1, r1
 508:	e8 0f       	add	r30, r24
 50a:	f9 1f       	adc	r31, r25
 50c:	d6 01       	movw	r26, r12
 50e:	2d 91       	ld	r18, X+
 510:	3c 91       	ld	r19, X
 512:	e2 0f       	add	r30, r18
 514:	f3 1f       	adc	r31, r19
 516:	e4 91       	lpm	r30, Z
	*ext_oled_cs = number;
}

void write_OLED_data(uint8_t number){
	volatile char *ext_oled_dc = (char *) 0x1200;
	*ext_oled_dc = number;
 518:	d8 01       	movw	r26, r16
 51a:	ec 93       	st	X, r30
		if (c == '\n') {
			goto_OLED_page(current_page + 1 % DISPLAY_PAGES);
			goto_OLED_char_column(start_column);
		}
		else{
			for (int j = 0; j < font_type.width; j++){
 51c:	01 96       	adiw	r24, 0x01	; 1
 51e:	ec e0       	ldi	r30, 0x0C	; 12
 520:	f2 e0       	ldi	r31, 0x02	; 2
 522:	20 81       	ld	r18, Z
 524:	30 e0       	ldi	r19, 0x00	; 0
 526:	82 17       	cp	r24, r18
 528:	93 07       	cpc	r25, r19
 52a:	0c f3       	brlt	.-62     	; 0x4ee <print_to_OLED+0xa4>

void print_to_OLED(const char * string, uint8_t start_column){
	goto_OLED_char_column(start_column);
	int length = strlen(string);
	
	for (int i = 0; i < length; i++){
 52c:	ff ef       	ldi	r31, 0xFF	; 255
 52e:	af 1a       	sub	r10, r31
 530:	bf 0a       	sbc	r11, r31
 532:	6a 14       	cp	r6, r10
 534:	7b 04       	cpc	r7, r11
 536:	09 f0       	breq	.+2      	; 0x53a <__stack+0x3b>
 538:	c1 cf       	rjmp	.-126    	; 0x4bc <print_to_OLED+0x72>
				//write_OLED_data(pgm_read_byte(&font[c-font_type.ascii_offset][j]));
				//write_OLED_data(pgm_read_byte(&font_type.data[c-font_type.ascii_offset][j]));
			}
		}
	}
	current_column = start_column + length;
 53a:	89 81       	ldd	r24, Y+1	; 0x01
 53c:	28 0e       	add	r2, r24
 53e:	20 92 b9 01 	sts	0x01B9, r2
	return;
}
 542:	0f 90       	pop	r0
 544:	df 91       	pop	r29
 546:	cf 91       	pop	r28
 548:	1f 91       	pop	r17
 54a:	0f 91       	pop	r16
 54c:	ff 90       	pop	r15
 54e:	ef 90       	pop	r14
 550:	df 90       	pop	r13
 552:	cf 90       	pop	r12
 554:	bf 90       	pop	r11
 556:	af 90       	pop	r10
 558:	9f 90       	pop	r9
 55a:	8f 90       	pop	r8
 55c:	7f 90       	pop	r7
 55e:	6f 90       	pop	r6
 560:	5f 90       	pop	r5
 562:	4f 90       	pop	r4
 564:	3f 90       	pop	r3
 566:	2f 90       	pop	r2
 568:	08 95       	ret

0000056a <main>:
	 //}
	
	
	//ov2////////////////////////////////
	
	DDRE=0x3;
 56a:	83 e0       	ldi	r24, 0x03	; 3
 56c:	86 b9       	out	0x06, r24	; 6
	DDRA=0xFF;
 56e:	8f ef       	ldi	r24, 0xFF	; 255
 570:	8a bb       	out	0x1a, r24	; 26
	PORTA=0x00;
 572:	1b ba       	out	0x1b, r1	; 27
	PORTE=0x2;
 574:	82 e0       	ldi	r24, 0x02	; 2
 576:	87 b9       	out	0x07, r24	; 7
	
	//////////////////////////
	///////oving4/////////////
	/////////////////////////
	
	memory_init();
 578:	0e 94 15 01 	call	0x22a	; 0x22a <memory_init>
	OLED_init();
 57c:	0e 94 f5 01 	call	0x3ea	; 0x3ea <OLED_init>
	set_font4x6();
 580:	0e 94 9c 01 	call	0x338	; 0x338 <set_font4x6>
	
	
	goto_OLED_page(0);
 584:	80 e0       	ldi	r24, 0x00	; 0
 586:	0e 94 ac 01 	call	0x358	; 0x358 <goto_OLED_page>
	//OLED_print_arrow(0,0);
	
	
	

	menu_init();
 58a:	0e 94 29 01 	call	0x252	; 0x252 <menu_init>


	menu_print();
 58e:	0e 94 1c 01 	call	0x238	; 0x238 <menu_print>
	
	
	return 0;
	
 592:	80 e0       	ldi	r24, 0x00	; 0
 594:	90 e0       	ldi	r25, 0x00	; 0
 596:	08 95       	ret

00000598 <printf>:
 598:	a0 e0       	ldi	r26, 0x00	; 0
 59a:	b0 e0       	ldi	r27, 0x00	; 0
 59c:	e2 ed       	ldi	r30, 0xD2	; 210
 59e:	f2 e0       	ldi	r31, 0x02	; 2
 5a0:	0c 94 68 05 	jmp	0xad0	; 0xad0 <__prologue_saves__+0x20>
 5a4:	fe 01       	movw	r30, r28
 5a6:	35 96       	adiw	r30, 0x05	; 5
 5a8:	61 91       	ld	r22, Z+
 5aa:	71 91       	ld	r23, Z+
 5ac:	af 01       	movw	r20, r30
 5ae:	80 91 13 02 	lds	r24, 0x0213
 5b2:	90 91 14 02 	lds	r25, 0x0214
 5b6:	0e 94 e0 02 	call	0x5c0	; 0x5c0 <vfprintf>
 5ba:	e2 e0       	ldi	r30, 0x02	; 2
 5bc:	0c 94 84 05 	jmp	0xb08	; 0xb08 <__epilogue_restores__+0x20>

000005c0 <vfprintf>:
 5c0:	ac e0       	ldi	r26, 0x0C	; 12
 5c2:	b0 e0       	ldi	r27, 0x00	; 0
 5c4:	e6 ee       	ldi	r30, 0xE6	; 230
 5c6:	f2 e0       	ldi	r31, 0x02	; 2
 5c8:	0c 94 58 05 	jmp	0xab0	; 0xab0 <__prologue_saves__>
 5cc:	7c 01       	movw	r14, r24
 5ce:	6b 01       	movw	r12, r22
 5d0:	8a 01       	movw	r16, r20
 5d2:	fc 01       	movw	r30, r24
 5d4:	17 82       	std	Z+7, r1	; 0x07
 5d6:	16 82       	std	Z+6, r1	; 0x06
 5d8:	83 81       	ldd	r24, Z+3	; 0x03
 5da:	81 ff       	sbrs	r24, 1
 5dc:	bd c1       	rjmp	.+890    	; 0x958 <vfprintf+0x398>
 5de:	ce 01       	movw	r24, r28
 5e0:	01 96       	adiw	r24, 0x01	; 1
 5e2:	4c 01       	movw	r8, r24
 5e4:	f7 01       	movw	r30, r14
 5e6:	93 81       	ldd	r25, Z+3	; 0x03
 5e8:	f6 01       	movw	r30, r12
 5ea:	93 fd       	sbrc	r25, 3
 5ec:	85 91       	lpm	r24, Z+
 5ee:	93 ff       	sbrs	r25, 3
 5f0:	81 91       	ld	r24, Z+
 5f2:	6f 01       	movw	r12, r30
 5f4:	88 23       	and	r24, r24
 5f6:	09 f4       	brne	.+2      	; 0x5fa <vfprintf+0x3a>
 5f8:	ab c1       	rjmp	.+854    	; 0x950 <vfprintf+0x390>
 5fa:	85 32       	cpi	r24, 0x25	; 37
 5fc:	39 f4       	brne	.+14     	; 0x60c <vfprintf+0x4c>
 5fe:	93 fd       	sbrc	r25, 3
 600:	85 91       	lpm	r24, Z+
 602:	93 ff       	sbrs	r25, 3
 604:	81 91       	ld	r24, Z+
 606:	6f 01       	movw	r12, r30
 608:	85 32       	cpi	r24, 0x25	; 37
 60a:	29 f4       	brne	.+10     	; 0x616 <vfprintf+0x56>
 60c:	b7 01       	movw	r22, r14
 60e:	90 e0       	ldi	r25, 0x00	; 0
 610:	0e 94 c8 04 	call	0x990	; 0x990 <fputc>
 614:	e7 cf       	rjmp	.-50     	; 0x5e4 <vfprintf+0x24>
 616:	51 2c       	mov	r5, r1
 618:	31 2c       	mov	r3, r1
 61a:	20 e0       	ldi	r18, 0x00	; 0
 61c:	20 32       	cpi	r18, 0x20	; 32
 61e:	a0 f4       	brcc	.+40     	; 0x648 <vfprintf+0x88>
 620:	8b 32       	cpi	r24, 0x2B	; 43
 622:	69 f0       	breq	.+26     	; 0x63e <vfprintf+0x7e>
 624:	30 f4       	brcc	.+12     	; 0x632 <vfprintf+0x72>
 626:	80 32       	cpi	r24, 0x20	; 32
 628:	59 f0       	breq	.+22     	; 0x640 <vfprintf+0x80>
 62a:	83 32       	cpi	r24, 0x23	; 35
 62c:	69 f4       	brne	.+26     	; 0x648 <vfprintf+0x88>
 62e:	20 61       	ori	r18, 0x10	; 16
 630:	2c c0       	rjmp	.+88     	; 0x68a <vfprintf+0xca>
 632:	8d 32       	cpi	r24, 0x2D	; 45
 634:	39 f0       	breq	.+14     	; 0x644 <vfprintf+0x84>
 636:	80 33       	cpi	r24, 0x30	; 48
 638:	39 f4       	brne	.+14     	; 0x648 <vfprintf+0x88>
 63a:	21 60       	ori	r18, 0x01	; 1
 63c:	26 c0       	rjmp	.+76     	; 0x68a <vfprintf+0xca>
 63e:	22 60       	ori	r18, 0x02	; 2
 640:	24 60       	ori	r18, 0x04	; 4
 642:	23 c0       	rjmp	.+70     	; 0x68a <vfprintf+0xca>
 644:	28 60       	ori	r18, 0x08	; 8
 646:	21 c0       	rjmp	.+66     	; 0x68a <vfprintf+0xca>
 648:	27 fd       	sbrc	r18, 7
 64a:	27 c0       	rjmp	.+78     	; 0x69a <vfprintf+0xda>
 64c:	30 ed       	ldi	r19, 0xD0	; 208
 64e:	38 0f       	add	r19, r24
 650:	3a 30       	cpi	r19, 0x0A	; 10
 652:	78 f4       	brcc	.+30     	; 0x672 <vfprintf+0xb2>
 654:	26 ff       	sbrs	r18, 6
 656:	06 c0       	rjmp	.+12     	; 0x664 <vfprintf+0xa4>
 658:	fa e0       	ldi	r31, 0x0A	; 10
 65a:	5f 9e       	mul	r5, r31
 65c:	30 0d       	add	r19, r0
 65e:	11 24       	eor	r1, r1
 660:	53 2e       	mov	r5, r19
 662:	13 c0       	rjmp	.+38     	; 0x68a <vfprintf+0xca>
 664:	8a e0       	ldi	r24, 0x0A	; 10
 666:	38 9e       	mul	r3, r24
 668:	30 0d       	add	r19, r0
 66a:	11 24       	eor	r1, r1
 66c:	33 2e       	mov	r3, r19
 66e:	20 62       	ori	r18, 0x20	; 32
 670:	0c c0       	rjmp	.+24     	; 0x68a <vfprintf+0xca>
 672:	8e 32       	cpi	r24, 0x2E	; 46
 674:	21 f4       	brne	.+8      	; 0x67e <vfprintf+0xbe>
 676:	26 fd       	sbrc	r18, 6
 678:	6b c1       	rjmp	.+726    	; 0x950 <vfprintf+0x390>
 67a:	20 64       	ori	r18, 0x40	; 64
 67c:	06 c0       	rjmp	.+12     	; 0x68a <vfprintf+0xca>
 67e:	8c 36       	cpi	r24, 0x6C	; 108
 680:	11 f4       	brne	.+4      	; 0x686 <vfprintf+0xc6>
 682:	20 68       	ori	r18, 0x80	; 128
 684:	02 c0       	rjmp	.+4      	; 0x68a <vfprintf+0xca>
 686:	88 36       	cpi	r24, 0x68	; 104
 688:	41 f4       	brne	.+16     	; 0x69a <vfprintf+0xda>
 68a:	f6 01       	movw	r30, r12
 68c:	93 fd       	sbrc	r25, 3
 68e:	85 91       	lpm	r24, Z+
 690:	93 ff       	sbrs	r25, 3
 692:	81 91       	ld	r24, Z+
 694:	6f 01       	movw	r12, r30
 696:	81 11       	cpse	r24, r1
 698:	c1 cf       	rjmp	.-126    	; 0x61c <vfprintf+0x5c>
 69a:	98 2f       	mov	r25, r24
 69c:	9f 7d       	andi	r25, 0xDF	; 223
 69e:	95 54       	subi	r25, 0x45	; 69
 6a0:	93 30       	cpi	r25, 0x03	; 3
 6a2:	28 f4       	brcc	.+10     	; 0x6ae <vfprintf+0xee>
 6a4:	0c 5f       	subi	r16, 0xFC	; 252
 6a6:	1f 4f       	sbci	r17, 0xFF	; 255
 6a8:	ff e3       	ldi	r31, 0x3F	; 63
 6aa:	f9 83       	std	Y+1, r31	; 0x01
 6ac:	0d c0       	rjmp	.+26     	; 0x6c8 <vfprintf+0x108>
 6ae:	83 36       	cpi	r24, 0x63	; 99
 6b0:	31 f0       	breq	.+12     	; 0x6be <vfprintf+0xfe>
 6b2:	83 37       	cpi	r24, 0x73	; 115
 6b4:	71 f0       	breq	.+28     	; 0x6d2 <vfprintf+0x112>
 6b6:	83 35       	cpi	r24, 0x53	; 83
 6b8:	09 f0       	breq	.+2      	; 0x6bc <vfprintf+0xfc>
 6ba:	5b c0       	rjmp	.+182    	; 0x772 <vfprintf+0x1b2>
 6bc:	22 c0       	rjmp	.+68     	; 0x702 <vfprintf+0x142>
 6be:	f8 01       	movw	r30, r16
 6c0:	80 81       	ld	r24, Z
 6c2:	89 83       	std	Y+1, r24	; 0x01
 6c4:	0e 5f       	subi	r16, 0xFE	; 254
 6c6:	1f 4f       	sbci	r17, 0xFF	; 255
 6c8:	44 24       	eor	r4, r4
 6ca:	43 94       	inc	r4
 6cc:	51 2c       	mov	r5, r1
 6ce:	54 01       	movw	r10, r8
 6d0:	15 c0       	rjmp	.+42     	; 0x6fc <vfprintf+0x13c>
 6d2:	38 01       	movw	r6, r16
 6d4:	f2 e0       	ldi	r31, 0x02	; 2
 6d6:	6f 0e       	add	r6, r31
 6d8:	71 1c       	adc	r7, r1
 6da:	f8 01       	movw	r30, r16
 6dc:	a0 80       	ld	r10, Z
 6de:	b1 80       	ldd	r11, Z+1	; 0x01
 6e0:	26 ff       	sbrs	r18, 6
 6e2:	03 c0       	rjmp	.+6      	; 0x6ea <vfprintf+0x12a>
 6e4:	65 2d       	mov	r22, r5
 6e6:	70 e0       	ldi	r23, 0x00	; 0
 6e8:	02 c0       	rjmp	.+4      	; 0x6ee <vfprintf+0x12e>
 6ea:	6f ef       	ldi	r22, 0xFF	; 255
 6ec:	7f ef       	ldi	r23, 0xFF	; 255
 6ee:	c5 01       	movw	r24, r10
 6f0:	2c 87       	std	Y+12, r18	; 0x0c
 6f2:	0e 94 bd 04 	call	0x97a	; 0x97a <strnlen>
 6f6:	2c 01       	movw	r4, r24
 6f8:	83 01       	movw	r16, r6
 6fa:	2c 85       	ldd	r18, Y+12	; 0x0c
 6fc:	2f 77       	andi	r18, 0x7F	; 127
 6fe:	22 2e       	mov	r2, r18
 700:	17 c0       	rjmp	.+46     	; 0x730 <vfprintf+0x170>
 702:	38 01       	movw	r6, r16
 704:	f2 e0       	ldi	r31, 0x02	; 2
 706:	6f 0e       	add	r6, r31
 708:	71 1c       	adc	r7, r1
 70a:	f8 01       	movw	r30, r16
 70c:	a0 80       	ld	r10, Z
 70e:	b1 80       	ldd	r11, Z+1	; 0x01
 710:	26 ff       	sbrs	r18, 6
 712:	03 c0       	rjmp	.+6      	; 0x71a <vfprintf+0x15a>
 714:	65 2d       	mov	r22, r5
 716:	70 e0       	ldi	r23, 0x00	; 0
 718:	02 c0       	rjmp	.+4      	; 0x71e <vfprintf+0x15e>
 71a:	6f ef       	ldi	r22, 0xFF	; 255
 71c:	7f ef       	ldi	r23, 0xFF	; 255
 71e:	c5 01       	movw	r24, r10
 720:	2c 87       	std	Y+12, r18	; 0x0c
 722:	0e 94 b2 04 	call	0x964	; 0x964 <strnlen_P>
 726:	2c 01       	movw	r4, r24
 728:	2c 85       	ldd	r18, Y+12	; 0x0c
 72a:	20 68       	ori	r18, 0x80	; 128
 72c:	22 2e       	mov	r2, r18
 72e:	83 01       	movw	r16, r6
 730:	23 fc       	sbrc	r2, 3
 732:	1b c0       	rjmp	.+54     	; 0x76a <vfprintf+0x1aa>
 734:	83 2d       	mov	r24, r3
 736:	90 e0       	ldi	r25, 0x00	; 0
 738:	48 16       	cp	r4, r24
 73a:	59 06       	cpc	r5, r25
 73c:	b0 f4       	brcc	.+44     	; 0x76a <vfprintf+0x1aa>
 73e:	b7 01       	movw	r22, r14
 740:	80 e2       	ldi	r24, 0x20	; 32
 742:	90 e0       	ldi	r25, 0x00	; 0
 744:	0e 94 c8 04 	call	0x990	; 0x990 <fputc>
 748:	3a 94       	dec	r3
 74a:	f4 cf       	rjmp	.-24     	; 0x734 <vfprintf+0x174>
 74c:	f5 01       	movw	r30, r10
 74e:	27 fc       	sbrc	r2, 7
 750:	85 91       	lpm	r24, Z+
 752:	27 fe       	sbrs	r2, 7
 754:	81 91       	ld	r24, Z+
 756:	5f 01       	movw	r10, r30
 758:	b7 01       	movw	r22, r14
 75a:	90 e0       	ldi	r25, 0x00	; 0
 75c:	0e 94 c8 04 	call	0x990	; 0x990 <fputc>
 760:	31 10       	cpse	r3, r1
 762:	3a 94       	dec	r3
 764:	f1 e0       	ldi	r31, 0x01	; 1
 766:	4f 1a       	sub	r4, r31
 768:	51 08       	sbc	r5, r1
 76a:	41 14       	cp	r4, r1
 76c:	51 04       	cpc	r5, r1
 76e:	71 f7       	brne	.-36     	; 0x74c <vfprintf+0x18c>
 770:	e5 c0       	rjmp	.+458    	; 0x93c <vfprintf+0x37c>
 772:	84 36       	cpi	r24, 0x64	; 100
 774:	11 f0       	breq	.+4      	; 0x77a <vfprintf+0x1ba>
 776:	89 36       	cpi	r24, 0x69	; 105
 778:	39 f5       	brne	.+78     	; 0x7c8 <vfprintf+0x208>
 77a:	f8 01       	movw	r30, r16
 77c:	27 ff       	sbrs	r18, 7
 77e:	07 c0       	rjmp	.+14     	; 0x78e <vfprintf+0x1ce>
 780:	60 81       	ld	r22, Z
 782:	71 81       	ldd	r23, Z+1	; 0x01
 784:	82 81       	ldd	r24, Z+2	; 0x02
 786:	93 81       	ldd	r25, Z+3	; 0x03
 788:	0c 5f       	subi	r16, 0xFC	; 252
 78a:	1f 4f       	sbci	r17, 0xFF	; 255
 78c:	08 c0       	rjmp	.+16     	; 0x79e <vfprintf+0x1de>
 78e:	60 81       	ld	r22, Z
 790:	71 81       	ldd	r23, Z+1	; 0x01
 792:	88 27       	eor	r24, r24
 794:	77 fd       	sbrc	r23, 7
 796:	80 95       	com	r24
 798:	98 2f       	mov	r25, r24
 79a:	0e 5f       	subi	r16, 0xFE	; 254
 79c:	1f 4f       	sbci	r17, 0xFF	; 255
 79e:	2f 76       	andi	r18, 0x6F	; 111
 7a0:	b2 2e       	mov	r11, r18
 7a2:	97 ff       	sbrs	r25, 7
 7a4:	09 c0       	rjmp	.+18     	; 0x7b8 <vfprintf+0x1f8>
 7a6:	90 95       	com	r25
 7a8:	80 95       	com	r24
 7aa:	70 95       	com	r23
 7ac:	61 95       	neg	r22
 7ae:	7f 4f       	sbci	r23, 0xFF	; 255
 7b0:	8f 4f       	sbci	r24, 0xFF	; 255
 7b2:	9f 4f       	sbci	r25, 0xFF	; 255
 7b4:	20 68       	ori	r18, 0x80	; 128
 7b6:	b2 2e       	mov	r11, r18
 7b8:	2a e0       	ldi	r18, 0x0A	; 10
 7ba:	30 e0       	ldi	r19, 0x00	; 0
 7bc:	a4 01       	movw	r20, r8
 7be:	0e 94 fa 04 	call	0x9f4	; 0x9f4 <__ultoa_invert>
 7c2:	a8 2e       	mov	r10, r24
 7c4:	a8 18       	sub	r10, r8
 7c6:	44 c0       	rjmp	.+136    	; 0x850 <vfprintf+0x290>
 7c8:	85 37       	cpi	r24, 0x75	; 117
 7ca:	29 f4       	brne	.+10     	; 0x7d6 <vfprintf+0x216>
 7cc:	2f 7e       	andi	r18, 0xEF	; 239
 7ce:	b2 2e       	mov	r11, r18
 7d0:	2a e0       	ldi	r18, 0x0A	; 10
 7d2:	30 e0       	ldi	r19, 0x00	; 0
 7d4:	25 c0       	rjmp	.+74     	; 0x820 <vfprintf+0x260>
 7d6:	f2 2f       	mov	r31, r18
 7d8:	f9 7f       	andi	r31, 0xF9	; 249
 7da:	bf 2e       	mov	r11, r31
 7dc:	8f 36       	cpi	r24, 0x6F	; 111
 7de:	c1 f0       	breq	.+48     	; 0x810 <vfprintf+0x250>
 7e0:	18 f4       	brcc	.+6      	; 0x7e8 <vfprintf+0x228>
 7e2:	88 35       	cpi	r24, 0x58	; 88
 7e4:	79 f0       	breq	.+30     	; 0x804 <vfprintf+0x244>
 7e6:	b4 c0       	rjmp	.+360    	; 0x950 <vfprintf+0x390>
 7e8:	80 37       	cpi	r24, 0x70	; 112
 7ea:	19 f0       	breq	.+6      	; 0x7f2 <vfprintf+0x232>
 7ec:	88 37       	cpi	r24, 0x78	; 120
 7ee:	21 f0       	breq	.+8      	; 0x7f8 <vfprintf+0x238>
 7f0:	af c0       	rjmp	.+350    	; 0x950 <vfprintf+0x390>
 7f2:	2f 2f       	mov	r18, r31
 7f4:	20 61       	ori	r18, 0x10	; 16
 7f6:	b2 2e       	mov	r11, r18
 7f8:	b4 fe       	sbrs	r11, 4
 7fa:	0d c0       	rjmp	.+26     	; 0x816 <vfprintf+0x256>
 7fc:	8b 2d       	mov	r24, r11
 7fe:	84 60       	ori	r24, 0x04	; 4
 800:	b8 2e       	mov	r11, r24
 802:	09 c0       	rjmp	.+18     	; 0x816 <vfprintf+0x256>
 804:	24 ff       	sbrs	r18, 4
 806:	0a c0       	rjmp	.+20     	; 0x81c <vfprintf+0x25c>
 808:	9f 2f       	mov	r25, r31
 80a:	96 60       	ori	r25, 0x06	; 6
 80c:	b9 2e       	mov	r11, r25
 80e:	06 c0       	rjmp	.+12     	; 0x81c <vfprintf+0x25c>
 810:	28 e0       	ldi	r18, 0x08	; 8
 812:	30 e0       	ldi	r19, 0x00	; 0
 814:	05 c0       	rjmp	.+10     	; 0x820 <vfprintf+0x260>
 816:	20 e1       	ldi	r18, 0x10	; 16
 818:	30 e0       	ldi	r19, 0x00	; 0
 81a:	02 c0       	rjmp	.+4      	; 0x820 <vfprintf+0x260>
 81c:	20 e1       	ldi	r18, 0x10	; 16
 81e:	32 e0       	ldi	r19, 0x02	; 2
 820:	f8 01       	movw	r30, r16
 822:	b7 fe       	sbrs	r11, 7
 824:	07 c0       	rjmp	.+14     	; 0x834 <vfprintf+0x274>
 826:	60 81       	ld	r22, Z
 828:	71 81       	ldd	r23, Z+1	; 0x01
 82a:	82 81       	ldd	r24, Z+2	; 0x02
 82c:	93 81       	ldd	r25, Z+3	; 0x03
 82e:	0c 5f       	subi	r16, 0xFC	; 252
 830:	1f 4f       	sbci	r17, 0xFF	; 255
 832:	06 c0       	rjmp	.+12     	; 0x840 <vfprintf+0x280>
 834:	60 81       	ld	r22, Z
 836:	71 81       	ldd	r23, Z+1	; 0x01
 838:	80 e0       	ldi	r24, 0x00	; 0
 83a:	90 e0       	ldi	r25, 0x00	; 0
 83c:	0e 5f       	subi	r16, 0xFE	; 254
 83e:	1f 4f       	sbci	r17, 0xFF	; 255
 840:	a4 01       	movw	r20, r8
 842:	0e 94 fa 04 	call	0x9f4	; 0x9f4 <__ultoa_invert>
 846:	a8 2e       	mov	r10, r24
 848:	a8 18       	sub	r10, r8
 84a:	fb 2d       	mov	r31, r11
 84c:	ff 77       	andi	r31, 0x7F	; 127
 84e:	bf 2e       	mov	r11, r31
 850:	b6 fe       	sbrs	r11, 6
 852:	0b c0       	rjmp	.+22     	; 0x86a <vfprintf+0x2aa>
 854:	2b 2d       	mov	r18, r11
 856:	2e 7f       	andi	r18, 0xFE	; 254
 858:	a5 14       	cp	r10, r5
 85a:	50 f4       	brcc	.+20     	; 0x870 <vfprintf+0x2b0>
 85c:	b4 fe       	sbrs	r11, 4
 85e:	0a c0       	rjmp	.+20     	; 0x874 <vfprintf+0x2b4>
 860:	b2 fc       	sbrc	r11, 2
 862:	08 c0       	rjmp	.+16     	; 0x874 <vfprintf+0x2b4>
 864:	2b 2d       	mov	r18, r11
 866:	2e 7e       	andi	r18, 0xEE	; 238
 868:	05 c0       	rjmp	.+10     	; 0x874 <vfprintf+0x2b4>
 86a:	7a 2c       	mov	r7, r10
 86c:	2b 2d       	mov	r18, r11
 86e:	03 c0       	rjmp	.+6      	; 0x876 <vfprintf+0x2b6>
 870:	7a 2c       	mov	r7, r10
 872:	01 c0       	rjmp	.+2      	; 0x876 <vfprintf+0x2b6>
 874:	75 2c       	mov	r7, r5
 876:	24 ff       	sbrs	r18, 4
 878:	0d c0       	rjmp	.+26     	; 0x894 <vfprintf+0x2d4>
 87a:	fe 01       	movw	r30, r28
 87c:	ea 0d       	add	r30, r10
 87e:	f1 1d       	adc	r31, r1
 880:	80 81       	ld	r24, Z
 882:	80 33       	cpi	r24, 0x30	; 48
 884:	11 f4       	brne	.+4      	; 0x88a <vfprintf+0x2ca>
 886:	29 7e       	andi	r18, 0xE9	; 233
 888:	09 c0       	rjmp	.+18     	; 0x89c <vfprintf+0x2dc>
 88a:	22 ff       	sbrs	r18, 2
 88c:	06 c0       	rjmp	.+12     	; 0x89a <vfprintf+0x2da>
 88e:	73 94       	inc	r7
 890:	73 94       	inc	r7
 892:	04 c0       	rjmp	.+8      	; 0x89c <vfprintf+0x2dc>
 894:	82 2f       	mov	r24, r18
 896:	86 78       	andi	r24, 0x86	; 134
 898:	09 f0       	breq	.+2      	; 0x89c <vfprintf+0x2dc>
 89a:	73 94       	inc	r7
 89c:	23 fd       	sbrc	r18, 3
 89e:	13 c0       	rjmp	.+38     	; 0x8c6 <vfprintf+0x306>
 8a0:	20 ff       	sbrs	r18, 0
 8a2:	06 c0       	rjmp	.+12     	; 0x8b0 <vfprintf+0x2f0>
 8a4:	5a 2c       	mov	r5, r10
 8a6:	73 14       	cp	r7, r3
 8a8:	18 f4       	brcc	.+6      	; 0x8b0 <vfprintf+0x2f0>
 8aa:	53 0c       	add	r5, r3
 8ac:	57 18       	sub	r5, r7
 8ae:	73 2c       	mov	r7, r3
 8b0:	73 14       	cp	r7, r3
 8b2:	68 f4       	brcc	.+26     	; 0x8ce <vfprintf+0x30e>
 8b4:	b7 01       	movw	r22, r14
 8b6:	80 e2       	ldi	r24, 0x20	; 32
 8b8:	90 e0       	ldi	r25, 0x00	; 0
 8ba:	2c 87       	std	Y+12, r18	; 0x0c
 8bc:	0e 94 c8 04 	call	0x990	; 0x990 <fputc>
 8c0:	73 94       	inc	r7
 8c2:	2c 85       	ldd	r18, Y+12	; 0x0c
 8c4:	f5 cf       	rjmp	.-22     	; 0x8b0 <vfprintf+0x2f0>
 8c6:	73 14       	cp	r7, r3
 8c8:	10 f4       	brcc	.+4      	; 0x8ce <vfprintf+0x30e>
 8ca:	37 18       	sub	r3, r7
 8cc:	01 c0       	rjmp	.+2      	; 0x8d0 <vfprintf+0x310>
 8ce:	31 2c       	mov	r3, r1
 8d0:	24 ff       	sbrs	r18, 4
 8d2:	12 c0       	rjmp	.+36     	; 0x8f8 <vfprintf+0x338>
 8d4:	b7 01       	movw	r22, r14
 8d6:	80 e3       	ldi	r24, 0x30	; 48
 8d8:	90 e0       	ldi	r25, 0x00	; 0
 8da:	2c 87       	std	Y+12, r18	; 0x0c
 8dc:	0e 94 c8 04 	call	0x990	; 0x990 <fputc>
 8e0:	2c 85       	ldd	r18, Y+12	; 0x0c
 8e2:	22 ff       	sbrs	r18, 2
 8e4:	17 c0       	rjmp	.+46     	; 0x914 <vfprintf+0x354>
 8e6:	21 ff       	sbrs	r18, 1
 8e8:	03 c0       	rjmp	.+6      	; 0x8f0 <vfprintf+0x330>
 8ea:	88 e5       	ldi	r24, 0x58	; 88
 8ec:	90 e0       	ldi	r25, 0x00	; 0
 8ee:	02 c0       	rjmp	.+4      	; 0x8f4 <vfprintf+0x334>
 8f0:	88 e7       	ldi	r24, 0x78	; 120
 8f2:	90 e0       	ldi	r25, 0x00	; 0
 8f4:	b7 01       	movw	r22, r14
 8f6:	0c c0       	rjmp	.+24     	; 0x910 <vfprintf+0x350>
 8f8:	82 2f       	mov	r24, r18
 8fa:	86 78       	andi	r24, 0x86	; 134
 8fc:	59 f0       	breq	.+22     	; 0x914 <vfprintf+0x354>
 8fe:	21 fd       	sbrc	r18, 1
 900:	02 c0       	rjmp	.+4      	; 0x906 <vfprintf+0x346>
 902:	80 e2       	ldi	r24, 0x20	; 32
 904:	01 c0       	rjmp	.+2      	; 0x908 <vfprintf+0x348>
 906:	8b e2       	ldi	r24, 0x2B	; 43
 908:	27 fd       	sbrc	r18, 7
 90a:	8d e2       	ldi	r24, 0x2D	; 45
 90c:	b7 01       	movw	r22, r14
 90e:	90 e0       	ldi	r25, 0x00	; 0
 910:	0e 94 c8 04 	call	0x990	; 0x990 <fputc>
 914:	a5 14       	cp	r10, r5
 916:	38 f4       	brcc	.+14     	; 0x926 <vfprintf+0x366>
 918:	b7 01       	movw	r22, r14
 91a:	80 e3       	ldi	r24, 0x30	; 48
 91c:	90 e0       	ldi	r25, 0x00	; 0
 91e:	0e 94 c8 04 	call	0x990	; 0x990 <fputc>
 922:	5a 94       	dec	r5
 924:	f7 cf       	rjmp	.-18     	; 0x914 <vfprintf+0x354>
 926:	aa 94       	dec	r10
 928:	f4 01       	movw	r30, r8
 92a:	ea 0d       	add	r30, r10
 92c:	f1 1d       	adc	r31, r1
 92e:	80 81       	ld	r24, Z
 930:	b7 01       	movw	r22, r14
 932:	90 e0       	ldi	r25, 0x00	; 0
 934:	0e 94 c8 04 	call	0x990	; 0x990 <fputc>
 938:	a1 10       	cpse	r10, r1
 93a:	f5 cf       	rjmp	.-22     	; 0x926 <vfprintf+0x366>
 93c:	33 20       	and	r3, r3
 93e:	09 f4       	brne	.+2      	; 0x942 <vfprintf+0x382>
 940:	51 ce       	rjmp	.-862    	; 0x5e4 <vfprintf+0x24>
 942:	b7 01       	movw	r22, r14
 944:	80 e2       	ldi	r24, 0x20	; 32
 946:	90 e0       	ldi	r25, 0x00	; 0
 948:	0e 94 c8 04 	call	0x990	; 0x990 <fputc>
 94c:	3a 94       	dec	r3
 94e:	f6 cf       	rjmp	.-20     	; 0x93c <vfprintf+0x37c>
 950:	f7 01       	movw	r30, r14
 952:	86 81       	ldd	r24, Z+6	; 0x06
 954:	97 81       	ldd	r25, Z+7	; 0x07
 956:	02 c0       	rjmp	.+4      	; 0x95c <vfprintf+0x39c>
 958:	8f ef       	ldi	r24, 0xFF	; 255
 95a:	9f ef       	ldi	r25, 0xFF	; 255
 95c:	2c 96       	adiw	r28, 0x0c	; 12
 95e:	e2 e1       	ldi	r30, 0x12	; 18
 960:	0c 94 74 05 	jmp	0xae8	; 0xae8 <__epilogue_restores__>

00000964 <strnlen_P>:
 964:	fc 01       	movw	r30, r24
 966:	05 90       	lpm	r0, Z+
 968:	61 50       	subi	r22, 0x01	; 1
 96a:	70 40       	sbci	r23, 0x00	; 0
 96c:	01 10       	cpse	r0, r1
 96e:	d8 f7       	brcc	.-10     	; 0x966 <strnlen_P+0x2>
 970:	80 95       	com	r24
 972:	90 95       	com	r25
 974:	8e 0f       	add	r24, r30
 976:	9f 1f       	adc	r25, r31
 978:	08 95       	ret

0000097a <strnlen>:
 97a:	fc 01       	movw	r30, r24
 97c:	61 50       	subi	r22, 0x01	; 1
 97e:	70 40       	sbci	r23, 0x00	; 0
 980:	01 90       	ld	r0, Z+
 982:	01 10       	cpse	r0, r1
 984:	d8 f7       	brcc	.-10     	; 0x97c <strnlen+0x2>
 986:	80 95       	com	r24
 988:	90 95       	com	r25
 98a:	8e 0f       	add	r24, r30
 98c:	9f 1f       	adc	r25, r31
 98e:	08 95       	ret

00000990 <fputc>:
 990:	0f 93       	push	r16
 992:	1f 93       	push	r17
 994:	cf 93       	push	r28
 996:	df 93       	push	r29
 998:	18 2f       	mov	r17, r24
 99a:	09 2f       	mov	r16, r25
 99c:	eb 01       	movw	r28, r22
 99e:	8b 81       	ldd	r24, Y+3	; 0x03
 9a0:	81 fd       	sbrc	r24, 1
 9a2:	03 c0       	rjmp	.+6      	; 0x9aa <fputc+0x1a>
 9a4:	8f ef       	ldi	r24, 0xFF	; 255
 9a6:	9f ef       	ldi	r25, 0xFF	; 255
 9a8:	20 c0       	rjmp	.+64     	; 0x9ea <fputc+0x5a>
 9aa:	82 ff       	sbrs	r24, 2
 9ac:	10 c0       	rjmp	.+32     	; 0x9ce <fputc+0x3e>
 9ae:	4e 81       	ldd	r20, Y+6	; 0x06
 9b0:	5f 81       	ldd	r21, Y+7	; 0x07
 9b2:	2c 81       	ldd	r18, Y+4	; 0x04
 9b4:	3d 81       	ldd	r19, Y+5	; 0x05
 9b6:	42 17       	cp	r20, r18
 9b8:	53 07       	cpc	r21, r19
 9ba:	7c f4       	brge	.+30     	; 0x9da <fputc+0x4a>
 9bc:	e8 81       	ld	r30, Y
 9be:	f9 81       	ldd	r31, Y+1	; 0x01
 9c0:	9f 01       	movw	r18, r30
 9c2:	2f 5f       	subi	r18, 0xFF	; 255
 9c4:	3f 4f       	sbci	r19, 0xFF	; 255
 9c6:	39 83       	std	Y+1, r19	; 0x01
 9c8:	28 83       	st	Y, r18
 9ca:	10 83       	st	Z, r17
 9cc:	06 c0       	rjmp	.+12     	; 0x9da <fputc+0x4a>
 9ce:	e8 85       	ldd	r30, Y+8	; 0x08
 9d0:	f9 85       	ldd	r31, Y+9	; 0x09
 9d2:	81 2f       	mov	r24, r17
 9d4:	09 95       	icall
 9d6:	89 2b       	or	r24, r25
 9d8:	29 f7       	brne	.-54     	; 0x9a4 <fputc+0x14>
 9da:	2e 81       	ldd	r18, Y+6	; 0x06
 9dc:	3f 81       	ldd	r19, Y+7	; 0x07
 9de:	2f 5f       	subi	r18, 0xFF	; 255
 9e0:	3f 4f       	sbci	r19, 0xFF	; 255
 9e2:	3f 83       	std	Y+7, r19	; 0x07
 9e4:	2e 83       	std	Y+6, r18	; 0x06
 9e6:	81 2f       	mov	r24, r17
 9e8:	90 2f       	mov	r25, r16
 9ea:	df 91       	pop	r29
 9ec:	cf 91       	pop	r28
 9ee:	1f 91       	pop	r17
 9f0:	0f 91       	pop	r16
 9f2:	08 95       	ret

000009f4 <__ultoa_invert>:
 9f4:	fa 01       	movw	r30, r20
 9f6:	aa 27       	eor	r26, r26
 9f8:	28 30       	cpi	r18, 0x08	; 8
 9fa:	51 f1       	breq	.+84     	; 0xa50 <__ultoa_invert+0x5c>
 9fc:	20 31       	cpi	r18, 0x10	; 16
 9fe:	81 f1       	breq	.+96     	; 0xa60 <__ultoa_invert+0x6c>
 a00:	e8 94       	clt
 a02:	6f 93       	push	r22
 a04:	6e 7f       	andi	r22, 0xFE	; 254
 a06:	6e 5f       	subi	r22, 0xFE	; 254
 a08:	7f 4f       	sbci	r23, 0xFF	; 255
 a0a:	8f 4f       	sbci	r24, 0xFF	; 255
 a0c:	9f 4f       	sbci	r25, 0xFF	; 255
 a0e:	af 4f       	sbci	r26, 0xFF	; 255
 a10:	b1 e0       	ldi	r27, 0x01	; 1
 a12:	3e d0       	rcall	.+124    	; 0xa90 <__ultoa_invert+0x9c>
 a14:	b4 e0       	ldi	r27, 0x04	; 4
 a16:	3c d0       	rcall	.+120    	; 0xa90 <__ultoa_invert+0x9c>
 a18:	67 0f       	add	r22, r23
 a1a:	78 1f       	adc	r23, r24
 a1c:	89 1f       	adc	r24, r25
 a1e:	9a 1f       	adc	r25, r26
 a20:	a1 1d       	adc	r26, r1
 a22:	68 0f       	add	r22, r24
 a24:	79 1f       	adc	r23, r25
 a26:	8a 1f       	adc	r24, r26
 a28:	91 1d       	adc	r25, r1
 a2a:	a1 1d       	adc	r26, r1
 a2c:	6a 0f       	add	r22, r26
 a2e:	71 1d       	adc	r23, r1
 a30:	81 1d       	adc	r24, r1
 a32:	91 1d       	adc	r25, r1
 a34:	a1 1d       	adc	r26, r1
 a36:	20 d0       	rcall	.+64     	; 0xa78 <__ultoa_invert+0x84>
 a38:	09 f4       	brne	.+2      	; 0xa3c <__ultoa_invert+0x48>
 a3a:	68 94       	set
 a3c:	3f 91       	pop	r19
 a3e:	2a e0       	ldi	r18, 0x0A	; 10
 a40:	26 9f       	mul	r18, r22
 a42:	11 24       	eor	r1, r1
 a44:	30 19       	sub	r19, r0
 a46:	30 5d       	subi	r19, 0xD0	; 208
 a48:	31 93       	st	Z+, r19
 a4a:	de f6       	brtc	.-74     	; 0xa02 <__ultoa_invert+0xe>
 a4c:	cf 01       	movw	r24, r30
 a4e:	08 95       	ret
 a50:	46 2f       	mov	r20, r22
 a52:	47 70       	andi	r20, 0x07	; 7
 a54:	40 5d       	subi	r20, 0xD0	; 208
 a56:	41 93       	st	Z+, r20
 a58:	b3 e0       	ldi	r27, 0x03	; 3
 a5a:	0f d0       	rcall	.+30     	; 0xa7a <__ultoa_invert+0x86>
 a5c:	c9 f7       	brne	.-14     	; 0xa50 <__ultoa_invert+0x5c>
 a5e:	f6 cf       	rjmp	.-20     	; 0xa4c <__ultoa_invert+0x58>
 a60:	46 2f       	mov	r20, r22
 a62:	4f 70       	andi	r20, 0x0F	; 15
 a64:	40 5d       	subi	r20, 0xD0	; 208
 a66:	4a 33       	cpi	r20, 0x3A	; 58
 a68:	18 f0       	brcs	.+6      	; 0xa70 <__ultoa_invert+0x7c>
 a6a:	49 5d       	subi	r20, 0xD9	; 217
 a6c:	31 fd       	sbrc	r19, 1
 a6e:	40 52       	subi	r20, 0x20	; 32
 a70:	41 93       	st	Z+, r20
 a72:	02 d0       	rcall	.+4      	; 0xa78 <__ultoa_invert+0x84>
 a74:	a9 f7       	brne	.-22     	; 0xa60 <__ultoa_invert+0x6c>
 a76:	ea cf       	rjmp	.-44     	; 0xa4c <__ultoa_invert+0x58>
 a78:	b4 e0       	ldi	r27, 0x04	; 4
 a7a:	a6 95       	lsr	r26
 a7c:	97 95       	ror	r25
 a7e:	87 95       	ror	r24
 a80:	77 95       	ror	r23
 a82:	67 95       	ror	r22
 a84:	ba 95       	dec	r27
 a86:	c9 f7       	brne	.-14     	; 0xa7a <__ultoa_invert+0x86>
 a88:	00 97       	sbiw	r24, 0x00	; 0
 a8a:	61 05       	cpc	r22, r1
 a8c:	71 05       	cpc	r23, r1
 a8e:	08 95       	ret
 a90:	9b 01       	movw	r18, r22
 a92:	ac 01       	movw	r20, r24
 a94:	0a 2e       	mov	r0, r26
 a96:	06 94       	lsr	r0
 a98:	57 95       	ror	r21
 a9a:	47 95       	ror	r20
 a9c:	37 95       	ror	r19
 a9e:	27 95       	ror	r18
 aa0:	ba 95       	dec	r27
 aa2:	c9 f7       	brne	.-14     	; 0xa96 <__ultoa_invert+0xa2>
 aa4:	62 0f       	add	r22, r18
 aa6:	73 1f       	adc	r23, r19
 aa8:	84 1f       	adc	r24, r20
 aaa:	95 1f       	adc	r25, r21
 aac:	a0 1d       	adc	r26, r0
 aae:	08 95       	ret

00000ab0 <__prologue_saves__>:
 ab0:	2f 92       	push	r2
 ab2:	3f 92       	push	r3
 ab4:	4f 92       	push	r4
 ab6:	5f 92       	push	r5
 ab8:	6f 92       	push	r6
 aba:	7f 92       	push	r7
 abc:	8f 92       	push	r8
 abe:	9f 92       	push	r9
 ac0:	af 92       	push	r10
 ac2:	bf 92       	push	r11
 ac4:	cf 92       	push	r12
 ac6:	df 92       	push	r13
 ac8:	ef 92       	push	r14
 aca:	ff 92       	push	r15
 acc:	0f 93       	push	r16
 ace:	1f 93       	push	r17
 ad0:	cf 93       	push	r28
 ad2:	df 93       	push	r29
 ad4:	cd b7       	in	r28, 0x3d	; 61
 ad6:	de b7       	in	r29, 0x3e	; 62
 ad8:	ca 1b       	sub	r28, r26
 ada:	db 0b       	sbc	r29, r27
 adc:	0f b6       	in	r0, 0x3f	; 63
 ade:	f8 94       	cli
 ae0:	de bf       	out	0x3e, r29	; 62
 ae2:	0f be       	out	0x3f, r0	; 63
 ae4:	cd bf       	out	0x3d, r28	; 61
 ae6:	09 94       	ijmp

00000ae8 <__epilogue_restores__>:
 ae8:	2a 88       	ldd	r2, Y+18	; 0x12
 aea:	39 88       	ldd	r3, Y+17	; 0x11
 aec:	48 88       	ldd	r4, Y+16	; 0x10
 aee:	5f 84       	ldd	r5, Y+15	; 0x0f
 af0:	6e 84       	ldd	r6, Y+14	; 0x0e
 af2:	7d 84       	ldd	r7, Y+13	; 0x0d
 af4:	8c 84       	ldd	r8, Y+12	; 0x0c
 af6:	9b 84       	ldd	r9, Y+11	; 0x0b
 af8:	aa 84       	ldd	r10, Y+10	; 0x0a
 afa:	b9 84       	ldd	r11, Y+9	; 0x09
 afc:	c8 84       	ldd	r12, Y+8	; 0x08
 afe:	df 80       	ldd	r13, Y+7	; 0x07
 b00:	ee 80       	ldd	r14, Y+6	; 0x06
 b02:	fd 80       	ldd	r15, Y+5	; 0x05
 b04:	0c 81       	ldd	r16, Y+4	; 0x04
 b06:	1b 81       	ldd	r17, Y+3	; 0x03
 b08:	aa 81       	ldd	r26, Y+2	; 0x02
 b0a:	b9 81       	ldd	r27, Y+1	; 0x01
 b0c:	ce 0f       	add	r28, r30
 b0e:	d1 1d       	adc	r29, r1
 b10:	0f b6       	in	r0, 0x3f	; 63
 b12:	f8 94       	cli
 b14:	de bf       	out	0x3e, r29	; 62
 b16:	0f be       	out	0x3f, r0	; 63
 b18:	cd bf       	out	0x3d, r28	; 61
 b1a:	ed 01       	movw	r28, r26
 b1c:	08 95       	ret

00000b1e <_exit>:
 b1e:	f8 94       	cli

00000b20 <__stop_program>:
 b20:	ff cf       	rjmp	.-2      	; 0xb20 <__stop_program>
